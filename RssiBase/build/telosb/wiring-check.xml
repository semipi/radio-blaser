<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="42:RssiBaseAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f929caa3b28"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f929caa0618"/></to>
    </wire>
    <wire loc="72:/home/kai/wsnpr/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f929caa0618"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f929ca9fc40"/></to>
    </wire>
    <wire loc="47:RssiBaseAppC.nc">
      <from><interface-ref name="LaserTimer" scoped="" ref="0x7f929c8cadf8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f929b43f128"/></to>
    </wire>
    <wire loc="52:/home/kai/wsnpr/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f929b43f128"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f929b9ac6a0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:RssiBaseAppC.nc">
      <from><interface-ref name="LaserSensor" scoped="" ref="0x7f929c8c5020"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f929b4373b0"/></to>
    </wire>
    <wire loc="47:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/chips/s1087/HamamatsuS1087ParC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f929b4373b0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f929a6f6a78"/></to>
    </wire>
    <wire loc="54:RssiBaseAppC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f929c8af888"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f929c569908"/></to>
    </wire>
    <wire loc="92:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f929c569908"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f929c53c7e8"/></to>
    </wire>
    <wire loc="66:RssiBaseAppC.nc">
      <from><interface-ref name="RssiMsgIntercept" scoped="" ref="0x7f929c8d54e0"/></from>
      <to><interface-ref name="RadioIntercept" scoped="" ref="0x7f929c88dc78"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="37:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f929ca9ea40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f929b11f020"/></to>
    </wire>
    <wire loc="96:/home/kai/wsnpr/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f929ca9ea40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f929a6c4de0"/></to>
    </wire>
    <wire loc="56:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f929ca9ea40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f929b38b5f8"/></to>
    </wire>
    <wire loc="103:/home/kai/wsnpr/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f929ca9ea40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f929a73a080"/></to>
    </wire>
    <wire loc="59:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f929ca9ea40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f929b756110"/></to>
    </wire>
    <wire loc="104:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f929ca9ea40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f929b88cc28"/></to>
    </wire>
    <wire loc="60:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f929ca9ea40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f929b90f020"/></to>
    </wire>
    <wire loc="58:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f929ca9ea40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f929b92ee80"/></to>
    </wire>
    <wire loc="52:/home/kai/wsnpr/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f929ca9ea40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f929b952b38"/></to>
    </wire>
    <wire loc="53:/home/kai/wsnpr/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f929ca9ea40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f929ba76080"/></to>
    </wire>
    <wire loc="66:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f929ca9ea40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f929bb70df8"/></to>
    </wire>
    <wire loc="62:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f929ca9ea40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f929bc56b28"/></to>
    </wire>
    <wire loc="63:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f929ca9ea40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f929c3fd3e0"/></to>
    </wire>
    <wire loc="103:/home/kai/wsnpr/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f929ca9ea40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f929aa198e0"/></to>
    </wire>
    <wire loc="74:/home/kai/wsnpr/tinyos-main/tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f929ca9ea40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f929c0e95d8"/></to>
    </wire>
    <wire loc="60:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f929ca9ea40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f929c4ab020"/></to>
    </wire>
    <wire loc="67:/home/kai/wsnpr/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f929c8f3308"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f929cf67390"/></to>
    </wire>
    <wire loc="53:/home/kai/wsnpr/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f929cf67390"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f929cb2c940"/></to>
    </wire>
    <wire loc="68:/home/kai/wsnpr/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f929c8f3ce0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f929caa1980"/></to>
    </wire>
    <wire loc="48:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f929caa1980"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f929ca9cae0"/></to>
    </wire>
    <wire loc="71:/home/kai/wsnpr/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f929c8e6418"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f929ca9ea40"/></to>
    </wire>
    <wire loc="49:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7f929ca991d8"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x7f929ca7c0e8"/></to>
    </wire>
    <wire loc="46:/home/kai/wsnpr/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7f929ca7c0e8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f929ca79020"/></to>
    </wire>
    <wire loc="50:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f929ca99878"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f929ca9b888"/></to>
    </wire>
    <wire loc="56:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x7f929ca98020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f929c7c7020"/></to>
    </wire>
    <wire loc="46:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f929ca79020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f929ca63d10"/></to>
    </wire>
    <wire loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f929ca712b8"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f929ca613c0"/></to>
    </wire>
    <wire loc="48:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7f929cb9fcc0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7f929ca60660"/></to>
    </wire>
    <wire loc="113:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x7f929ca1f060"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f929c965c80"/></to>
    </wire>
    <wire loc="126:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x7f929ca0e060"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f929c95dc80"/></to>
    </wire>
    <wire loc="108:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x7f929ca17868"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f929c96ac58"/></to>
    </wire>
    <wire loc="149:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x7f929c9fb3d0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f929c945c58"/></to>
    </wire>
    <wire loc="107:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x7f929ca1d0c0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f929c96a020"/></to>
    </wire>
    <wire loc="148:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x7f929ca03868"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f929c945020"/></to>
    </wire>
    <wire loc="170:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x7f929c9f83d0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f929c92ec58"/></to>
    </wire>
    <wire loc="154:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x7f929ca09120"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f929c93fc80"/></to>
    </wire>
    <wire loc="99:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x7f929ca20818"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f929c9b6c80"/></to>
    </wire>
    <wire loc="135:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x7f929c9fd3d0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f929c954c58"/></to>
    </wire>
    <wire loc="134:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x7f929ca05d40"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f929c954020"/></to>
    </wire>
    <wire loc="133:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x7f929ca0d400"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f929c956c80"/></to>
    </wire>
    <wire loc="115:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x7f929ca16868"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f929c963c58"/></to>
    </wire>
    <wire loc="156:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x7f929c9fa3d0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f929c93dc58"/></to>
    </wire>
    <wire loc="140:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x7f929ca0c898"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f929c94ec80"/></to>
    </wire>
    <wire loc="114:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x7f929ca1dde0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f929c963020"/></to>
    </wire>
    <wire loc="93:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7f929ca28378"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f929c9c4960"/></to>
    </wire>
    <wire loc="155:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x7f929ca026e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f929c93d020"/></to>
    </wire>
    <wire loc="106:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x7f929ca27bb8"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f929c96cc80"/></to>
    </wire>
    <wire loc="161:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x7f929ca08588"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f929c938c80"/></to>
    </wire>
    <wire loc="101:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x7f929ca11960"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f929c972c58"/></to>
    </wire>
    <wire loc="142:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x7f929c9fc3d0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f929c94cc58"/></to>
    </wire>
    <wire loc="100:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x7f929ca18378"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f929c972020"/></to>
    </wire>
    <wire loc="141:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x7f929ca04aa8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f929c94c020"/></to>
    </wire>
    <wire loc="163:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x7f929c9f93d0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f929c936c58"/></to>
    </wire>
    <wire loc="147:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x7f929ca0bd30"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f929c947c80"/></to>
    </wire>
    <wire loc="120:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x7f929ca10830"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f929c9bd1e8"/></to>
    </wire>
    <wire loc="162:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x7f929ca01558"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f929c936020"/></to>
    </wire>
    <wire loc="128:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x7f929c9ff3d0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f929c95bc58"/></to>
    </wire>
    <wire loc="169:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x7f929ca003d0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f929c92e020"/></to>
    </wire>
    <wire loc="127:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x7f929ca05020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f929c95b020"/></to>
    </wire>
    <wire loc="168:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x7f929ca07a20"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f929c930c80"/></to>
    </wire>
    <wire loc="94:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f929c9c2700"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f929c9c20c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7f929c9c2d18"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x7f929c927520"/></to>
    </wire>
    <wire loc="96:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7f929c9c1368"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x7f929c927c68"/></to>
    </wire>
    <wire loc="102:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f929c971a90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f929c9c4960"/></to>
    </wire>
    <wire loc="103:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f929c96e100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f929c9c20c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f929c969a90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f929c9c4960"/></to>
    </wire>
    <wire loc="110:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f929c967100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f929c9c20c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f929c962a90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f929c9c4960"/></to>
    </wire>
    <wire loc="117:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f929c95f100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f929c9c20c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f929c9bb020"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f929c9bc8a0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7f929c9bb638"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x7f929c926418"/></to>
    </wire>
    <wire loc="123:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7f929c9bbc50"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x7f929c926b60"/></to>
    </wire>
    <wire loc="129:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f929c95aa90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f929c9bd1e8"/></to>
    </wire>
    <wire loc="130:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f929c958100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f929c9bc8a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f929c953a90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f929c9bd1e8"/></to>
    </wire>
    <wire loc="137:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f929c951100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f929c9bc8a0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f929c94ba90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f929c9bd1e8"/></to>
    </wire>
    <wire loc="144:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f929c949100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f929c9bc8a0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f929c944a90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f929c9bd1e8"/></to>
    </wire>
    <wire loc="151:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f929c942100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f929c9bc8a0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f929c93ca90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f929c9bd1e8"/></to>
    </wire>
    <wire loc="158:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f929c93a100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f929c9bc8a0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f929c935a90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f929c9bd1e8"/></to>
    </wire>
    <wire loc="165:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f929c933100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f929c9bc8a0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f929c92da90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f929c9bd1e8"/></to>
    </wire>
    <wire loc="172:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f929c92b100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f929c9bc8a0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/kai/wsnpr/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7f929cf9c1c8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f929cb2a7f8"/></to>
    </wire>
    <wire loc="55:/home/kai/wsnpr/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7f929cb23b48"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7f929cf69e10"/></to>
    </wire>
    <wire loc="49:RssiBaseC.nc">
      <from><interface-ref name="checkLaser" scoped="" ref="0x7f929c8abaf0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f929cf9c1c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../InterceptBase/BaseStationC.nc">
      <from><interface-ref name="SerialIntercept" scoped="" ref="0x7f929c88c8e8"/></from>
      <to><interface-ref name="SerialIntercept" scoped="" ref="0x7f929c848700"/></to>
    </wire>
    <wire loc="85:../InterceptBase/BaseStationC.nc">
      <from><interface-ref name="RadioIntercept" scoped="" ref="0x7f929c88dc78"/></from>
      <to><interface-ref name="RadioIntercept" scoped="" ref="0x7f929c852a88"/></to>
    </wire>
    <wire loc="88:../InterceptBase/BaseStationC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f929c88adf0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f929caa0618"/></to>
    </wire>
    <wire loc="90:../InterceptBase/BaseStationC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x7f929c8860e0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f929c59b020"/></to>
    </wire>
    <wire loc="78:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f929c59b020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f929c56f310"/></to>
    </wire>
    <wire loc="91:../InterceptBase/BaseStationC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7f929c882510"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f929b7be760"/></to>
    </wire>
    <wire loc="61:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f929b7be760"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f929b756728"/></to>
    </wire>
    <wire loc="93:../InterceptBase/BaseStationC.nc">
      <from><interface-ref name="UartSend" scoped="" ref="0x7f929c877720"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f929b7bb798"/></to>
    </wire>
    <wire loc="63:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f929b7bb798"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f929b7b2460"/></to>
    </wire>
    <wire loc="94:../InterceptBase/BaseStationC.nc">
      <from><interface-ref name="UartReceive" scoped="" ref="0x7f929c8813c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f929b7ba928"/></to>
    </wire>
    <wire loc="64:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f929b7ba928"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f929b75e180"/></to>
    </wire>
    <wire loc="95:../InterceptBase/BaseStationC.nc">
      <from><interface-ref name="UartPacket" scoped="" ref="0x7f929c869840"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f929b7b8020"/></to>
    </wire>
    <wire loc="65:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f929b7b8020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f929b75dd20"/></to>
    </wire>
    <wire loc="96:../InterceptBase/BaseStationC.nc">
      <from><interface-ref name="UartAMPacket" scoped="" ref="0x7f929c8591d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f929b7b8c30"/></to>
    </wire>
    <wire loc="66:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f929b7b8c30"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f929b75e738"/></to>
    </wire>
    <wire loc="98:../InterceptBase/BaseStationC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7f929c874cd0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f929c59a020"/></to>
    </wire>
    <wire loc="80:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f929c59a020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f929c56e2b0"/></to>
    </wire>
    <wire loc="99:../InterceptBase/BaseStationC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7f929c858020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f929c5991c8"/></to>
    </wire>
    <wire loc="81:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f929c5991c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f929c56c3c8"/></to>
    </wire>
    <wire loc="100:../InterceptBase/BaseStationC.nc">
      <from><interface-ref name="RadioSnoop" scoped="" ref="0x7f929c858b98"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f929c599d10"/></to>
    </wire>
    <wire loc="82:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f929c599d10"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f929c56b020"/></to>
    </wire>
    <wire loc="101:../InterceptBase/BaseStationC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7f929c857358"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f929c598328"/></to>
    </wire>
    <wire loc="83:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f929c598328"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f929c56abd8"/></to>
    </wire>
    <wire loc="102:../InterceptBase/BaseStationC.nc">
      <from><interface-ref name="RadioAMPacket" scoped="" ref="0x7f929c855060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f929c597020"/></to>
    </wire>
    <wire loc="84:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f929c597020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f929c56b610"/></to>
    </wire>
    <wire loc="104:../InterceptBase/BaseStationC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f929c849c38"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f929c7f6900"/></to>
    </wire>
    <wire loc="51:/home/kai/wsnpr/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f929c7f6900"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f929c7ef110"/></to>
    </wire>
    <wire loc="99:../InterceptBase/BaseStationP.nc">
      <from><interface-ref name="uartSendTask" scoped="" ref="0x7f929c843cc0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f929cf9c1c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="100:../InterceptBase/BaseStationP.nc">
      <from><interface-ref name="radioSendTask" scoped="" ref="0x7f929c842b80"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f929cf9c1c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/home/kai/wsnpr/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f929c7c7020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f929c7f2b10"/></to>
    </wire>
    <wire loc="54:/home/kai/wsnpr/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f929c7e7348"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7f929c7f0aa0"/></to>
    </wire>
    <wire loc="58:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f929c7f0aa0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f929c5c4c30"/></to>
    </wire>
    <wire loc="55:/home/kai/wsnpr/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f929c7ed4c0"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7f929c7caca8"/></to>
    </wire>
    <wire loc="61:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f929c7caca8"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f929c5af448"/></to>
    </wire>
    <wire loc="56:/home/kai/wsnpr/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f929c7ec648"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7f929c7c9e30"/></to>
    </wire>
    <wire loc="64:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f929c7c9e30"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f929c5abcd0"/></to>
    </wire>
    <wire loc="59:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f929c5c3da0"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x7f929c771568"/></to>
    </wire>
    <wire loc="486:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x7f929c771568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f929c656ca0"/></to>
    </wire>
    <wire loc="62:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f929c5ae5f8"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x7f929c76f568"/></to>
    </wire>
    <wire loc="487:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x7f929c76f568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f929c6513d8"/></to>
    </wire>
    <wire loc="65:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f929c5aae20"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x7f929c76d568"/></to>
    </wire>
    <wire loc="488:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x7f929c76d568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f929c64dca0"/></to>
    </wire>
    <wire loc="442:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7f929c7b3b00"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f929c6eaca0"/></to>
    </wire>
    <wire loc="455:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7f929c79e568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f929c6bcca0"/></to>
    </wire>
    <wire loc="531:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x7f929c7557d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f929c6ad3d8"/></to>
    </wire>
    <wire loc="551:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x7f929c730558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f929c628ca0"/></to>
    </wire>
    <wire loc="532:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x7f929c753660"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f929c6a9ca0"/></to>
    </wire>
    <wire loc="460:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x7f929c79a568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f929c6b2ca0"/></to>
    </wire>
    <wire loc="473:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x7f929c786568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f929c684ca0"/></to>
    </wire>
    <wire loc="497:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7f929c761568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f929c631ca0"/></to>
    </wire>
    <wire loc="535:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x7f929c74d560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f929c6a0ca0"/></to>
    </wire>
    <wire loc="545:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x7f929c73c558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f929c643ca0"/></to>
    </wire>
    <wire loc="557:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x7f929c728560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f929c6223d8"/></to>
    </wire>
    <wire loc="445:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7f929c7ad668"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f929c6dc3d8"/></to>
    </wire>
    <wire loc="536:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x7f929c74a560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f929c69b3d8"/></to>
    </wire>
    <wire loc="450:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7f929c7a8568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f929c6d23d8"/></to>
    </wire>
    <wire loc="463:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x7f929c794568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f929c6a43d8"/></to>
    </wire>
    <wire loc="476:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x7f929c780568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f929c6763d8"/></to>
    </wire>
    <wire loc="489:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x7f929c76b568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f929c6473d8"/></to>
    </wire>
    <wire loc="500:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x7f929c75b568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f929c6223d8"/></to>
    </wire>
    <wire loc="440:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7f929c7b7e10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f929c6f3ca0"/></to>
    </wire>
    <wire loc="453:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7f929c7a2568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f929c6c5d08"/></to>
    </wire>
    <wire loc="466:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x7f929c78e568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f929c697ca0"/></to>
    </wire>
    <wire loc="530:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x7f929c757970"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f929c6ad3d8"/></to>
    </wire>
    <wire loc="548:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x7f929c736558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f929c6353d8"/></to>
    </wire>
    <wire loc="555:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x7f929c72a558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f929c6223d8"/></to>
    </wire>
    <wire loc="541:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x7f929c742560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f929c65a3d8"/></to>
    </wire>
    <wire loc="471:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x7f929c78a568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f929c68ddd8"/></to>
    </wire>
    <wire loc="484:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x7f929c775568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f929c65fca0"/></to>
    </wire>
    <wire loc="495:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7f929c765568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f929c63aca0"/></to>
    </wire>
    <wire loc="549:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x7f929c734558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f929c631ca0"/></to>
    </wire>
    <wire loc="538:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x7f929c748558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f929c668ca0"/></to>
    </wire>
    <wire loc="443:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7f929c7b1978"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f929c6e53d8"/></to>
    </wire>
    <wire loc="456:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7f929c79c568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f929c6b73d8"/></to>
    </wire>
    <wire loc="493:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x7f929c769568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f929c643ca0"/></to>
    </wire>
    <wire loc="461:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x7f929c798568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f929c6ad3d8"/></to>
    </wire>
    <wire loc="474:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x7f929c784568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f929c67f3d8"/></to>
    </wire>
    <wire loc="498:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x7f929c75f568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f929c62c3d8"/></to>
    </wire>
    <wire loc="540:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x7f929c744560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f929c65fca0"/></to>
    </wire>
    <wire loc="438:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7f929c7c30a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f929c722e18"/></to>
    </wire>
    <wire loc="451:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7f929c7a6568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f929c6ceca0"/></to>
    </wire>
    <wire loc="464:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x7f929c792568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f929c6a0ca0"/></to>
    </wire>
    <wire loc="477:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x7f929c77e568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f929c672ca0"/></to>
    </wire>
    <wire loc="542:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x7f929c740560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f929c697ca0"/></to>
    </wire>
    <wire loc="546:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x7f929c73a558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f929c63e3d8"/></to>
    </wire>
    <wire loc="552:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x7f929c72e558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f929c6223d8"/></to>
    </wire>
    <wire loc="482:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x7f929c779568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f929c668ca0"/></to>
    </wire>
    <wire loc="543:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x7f929c73e560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f929c6923d8"/></to>
    </wire>
    <wire loc="441:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7f929c7b5c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f929c6ee3d8"/></to>
    </wire>
    <wire loc="454:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7f929c7a0568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f929c6c03d8"/></to>
    </wire>
    <wire loc="467:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x7f929c78c568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f929c6923d8"/></to>
    </wire>
    <wire loc="539:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x7f929c746560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f929c6633d8"/></to>
    </wire>
    <wire loc="550:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x7f929c732558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f929c62c3d8"/></to>
    </wire>
    <wire loc="472:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x7f929c788668"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f929c688478"/></to>
    </wire>
    <wire loc="485:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x7f929c773568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f929c65a3d8"/></to>
    </wire>
    <wire loc="496:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7f929c763568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f929c6353d8"/></to>
    </wire>
    <wire loc="444:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7f929c7af7f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f929c6e1ca0"/></to>
    </wire>
    <wire loc="494:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x7f929c767568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f929c63e3d8"/></to>
    </wire>
    <wire loc="449:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7f929c7ab568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f929c6d7ca0"/></to>
    </wire>
    <wire loc="462:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x7f929c796568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f929c6a9ca0"/></to>
    </wire>
    <wire loc="475:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x7f929c782568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f929c67bca0"/></to>
    </wire>
    <wire loc="499:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x7f929c75d568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f929c628ca0"/></to>
    </wire>
    <wire loc="439:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7f929c7b8020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f929c6f7478"/></to>
    </wire>
    <wire loc="452:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7f929c7a4568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f929c6c93d8"/></to>
    </wire>
    <wire loc="465:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x7f929c790568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f929c69b3d8"/></to>
    </wire>
    <wire loc="478:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x7f929c77c568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f929c66c3d8"/></to>
    </wire>
    <wire loc="534:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x7f929c74f548"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f929c6a43d8"/></to>
    </wire>
    <wire loc="547:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x7f929c738558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f929c63aca0"/></to>
    </wire>
    <wire loc="533:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x7f929c751560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f929c6a43d8"/></to>
    </wire>
    <wire loc="483:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x7f929c777568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f929c6633d8"/></to>
    </wire>
    <wire loc="554:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x7f929c72c558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f929c628ca0"/></to>
    </wire>
    <wire loc="558:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x7f929c726568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f929c6473d8"/></to>
    </wire>
    <wire loc="529:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x7f929c7595b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f929c6b2ca0"/></to>
    </wire>
    <wire loc="82:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f929c56f310"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f929c54c020"/></to>
    </wire>
    <wire loc="85:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f929c56e2b0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f929b851980"/></to>
    </wire>
    <wire loc="88:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f929c56b020"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f929b84f628"/></to>
    </wire>
    <wire loc="84:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f929c56abd8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f929b84c2a8"/></to>
    </wire>
    <wire loc="89:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f929c594020"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f929baee130"/></to>
    </wire>
    <wire loc="59:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f929baee130"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f929badf060"/></to>
    </wire>
    <wire loc="86:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f929c57b848"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f929c565628"/></to>
    </wire>
    <wire loc="91:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f929c565628"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f929c539668"/></to>
    </wire>
    <wire loc="87:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f929c56c3c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f929b850ab0"/></to>
    </wire>
    <wire loc="85:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f929c595020"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f929c5687e0"/></to>
    </wire>
    <wire loc="93:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f929c5687e0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f929c53a658"/></to>
    </wire>
    <wire loc="89:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f929c56b610"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f929b84fc18"/></to>
    </wire>
    <wire loc="90:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f929c586e48"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f929baea020"/></to>
    </wire>
    <wire loc="60:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f929baea020"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f929badb020"/></to>
    </wire>
    <wire loc="97:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f929c54c020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f929b880dc8"/></to>
    </wire>
    <wire loc="83:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f929c55c700"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f929b84a020"/></to>
    </wire>
    <wire loc="86:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7f929c55a1c8"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f929b84b400"/></to>
    </wire>
    <wire loc="84:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f929c53c7e8"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f929baf34b0"/></to>
    </wire>
    <wire loc="83:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f929c539668"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f929b880318"/></to>
    </wire>
    <wire loc="85:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f929c53a658"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f929baf03b8"/></to>
    </wire>
    <wire loc="90:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f929c552450"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f929c538128"/></to>
    </wire>
    <wire loc="82:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f929c538128"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f929b86d2d0"/></to>
    </wire>
    <wire loc="94:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f929c5647b0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f929c539020"/></to>
    </wire>
    <wire loc="86:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f929c539020"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f929baef6b0"/></to>
    </wire>
    <wire loc="97:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0x7f929b843698"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f929c54b340"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f929b849020"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f929c5444c8"/></to>
    </wire>
    <wire loc="93:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7f929c5444c8"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f929b8e5db8"/></to>
    </wire>
    <wire loc="99:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f929b849cc8"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f929c53c1d0"/></to>
    </wire>
    <wire loc="94:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7f929c53c1d0"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f929b8e4ae8"/></to>
    </wire>
    <wire loc="101:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f929b8458d0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f929bd03690"/></to>
    </wire>
    <wire loc="102:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f929b848368"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f929baf34b0"/></to>
    </wire>
    <wire loc="55:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f929baf34b0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f929bae32e8"/></to>
    </wire>
    <wire loc="103:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f929b847188"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f929baf0d08"/></to>
    </wire>
    <wire loc="57:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f929baf0d08"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f929bae2b60"/></to>
    </wire>
    <wire loc="104:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f929b847ab0"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f929c4b2aa8"/></to>
    </wire>
    <wire loc="55:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f929c4b2aa8"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f929c4aa328"/></to>
    </wire>
    <wire loc="106:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7f929b8446a0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f929c533678"/></to>
    </wire>
    <wire loc="54:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f929c533678"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f929c52d948"/></to>
    </wire>
    <wire loc="109:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f929b8422a8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f929c7f6900"/></to>
    </wire>
    <wire loc="63:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f929b880dc8"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7f929b87dd28"/></to>
    </wire>
    <wire loc="58:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f929baef6b0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f929bae1630"/></to>
    </wire>
    <wire loc="53:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f929b86d2d0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f929b86b548"/></to>
    </wire>
    <wire loc="97:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7f929b8e5db8"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f929b8da490"/></to>
    </wire>
    <wire loc="64:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f929b880318"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f929b879170"/></to>
    </wire>
    <wire loc="90:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7f929c545020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f929b8e5748"/></to>
    </wire>
    <wire loc="92:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f929b8e5748"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x7f929b8dbdc8"/></to>
    </wire>
    <wire loc="56:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f929baf03b8"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f929bae2210"/></to>
    </wire>
    <wire loc="88:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f929c54b340"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f929b8e9e28"/></to>
    </wire>
    <wire loc="96:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f929b8e9e28"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f929b8dd440"/></to>
    </wire>
    <wire loc="89:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7f929c53b330"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f929b8e6a40"/></to>
    </wire>
    <wire loc="91:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f929b8e6a40"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7f929b8db118"/></to>
    </wire>
    <wire loc="91:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7f929c5456a0"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7f929b8e31a8"/></to>
    </wire>
    <wire loc="93:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7f929b8e31a8"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7f929b8d9808"/></to>
    </wire>
    <wire loc="98:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7f929b8e4ae8"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f929b8d9188"/></to>
    </wire>
    <wire loc="98:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f929b87dd28"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f929c537780"/></to>
    </wire>
    <wire loc="55:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f929c537780"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f929c52e140"/></to>
    </wire>
    <wire loc="101:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f929b8e2670"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f929b939a78"/></to>
    </wire>
    <wire loc="55:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f929b939a78"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f929b92e298"/></to>
    </wire>
    <wire loc="102:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f929b932838"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f929b8705d0"/></to>
    </wire>
    <wire loc="54:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f929b8705d0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f929b86c020"/></to>
    </wire>
    <wire loc="103:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f929b86c020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f929b881080"/></to>
    </wire>
    <wire loc="61:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f929b881080"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f929b87e838"/></to>
    </wire>
    <wire loc="104:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f929b87e838"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f929c5342d8"/></to>
    </wire>
    <wire loc="56:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f929c5342d8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f929c52ebe0"/></to>
    </wire>
    <wire loc="107:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f929b8e2020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f929b881c80"/></to>
    </wire>
    <wire loc="62:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f929b881c80"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f929b87d668"/></to>
    </wire>
    <wire loc="108:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f929b87d668"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f929b915080"/></to>
    </wire>
    <wire loc="56:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f929b915080"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f929b9112b0"/></to>
    </wire>
    <wire loc="109:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f929b915e50"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f929c533020"/></to>
    </wire>
    <wire loc="68:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f929c533020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f929bb71168"/></to>
    </wire>
    <wire loc="63:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f929bb71168"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f929bb6c600"/></to>
    </wire>
    <wire loc="59:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f929c52c798"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f929c4c2b80"/></to>
    </wire>
    <wire loc="54:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f929c4c2b80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f929c4ab650"/></to>
    </wire>
    <wire loc="60:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7f929c524a78"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7f929c4bd8b0"/></to>
    </wire>
    <wire loc="56:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7f929c4bd8b0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7f929c4a8080"/></to>
    </wire>
    <wire loc="63:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f929c521500"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f929bc65c58"/></to>
    </wire>
    <wire loc="69:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f929c521500"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f929bb73020"/></to>
    </wire>
    <wire loc="61:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f929bb73020"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f929bb6d460"/></to>
    </wire>
    <wire loc="55:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f929bc65c58"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f929bc55198"/></to>
    </wire>
    <wire loc="64:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7f929c51bcc8"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x7f929bc61480"/></to>
    </wire>
    <wire loc="56:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7f929bc61480"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f929bc559f8"/></to>
    </wire>
    <wire loc="65:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7f929c529a70"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f929bc60140"/></to>
    </wire>
    <wire loc="57:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f929bc60140"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f929bc517c0"/></to>
    </wire>
    <wire loc="72:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f929c518c58"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f929baf34b0"/></to>
    </wire>
    <wire loc="73:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f929c515020"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f929baf0d08"/></to>
    </wire>
    <wire loc="76:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f929c517d58"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f929b953690"/></to>
    </wire>
    <wire loc="56:/home/kai/wsnpr/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f929b953690"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f929b94c568"/></to>
    </wire>
    <wire loc="79:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x7f929c50a3e8"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f929b955bb0"/></to>
    </wire>
    <wire loc="74:/home/kai/wsnpr/tinyos-main/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f929b955bb0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f929c0ef858"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f929c519518"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f929c7f6900"/></to>
    </wire>
    <wire loc="76:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x7f929c506988"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f929cf9c1c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x7f929c507b30"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f929cf9c1c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x7f929c509c00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f929cf9c1c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x7f929c4b0c78"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x7f929c4a74d0"/></to>
    </wire>
    <wire loc="63:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x7f929c4a3060"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f929c3fdd58"/></to>
    </wire>
    <wire loc="55:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7f929c3fdd58"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f929c30b060"/></to>
    </wire>
    <wire loc="66:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f929c498020"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f929c304e20"/></to>
    </wire>
    <wire loc="72:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f929c304e20"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f929c2f6020"/></to>
    </wire>
    <wire loc="67:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f929c4971b0"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x7f929c300378"/></to>
    </wire>
    <wire loc="75:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f929c300378"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f929c2e9720"/></to>
    </wire>
    <wire loc="68:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7f929c496378"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x7f929c2fe688"/></to>
    </wire>
    <wire loc="77:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7f929c2fe688"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f929c2df720"/></to>
    </wire>
    <wire loc="71:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7f929c491b78"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x7f929c2c9578"/></to>
    </wire>
    <wire loc="64:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7f929c2c9578"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f929c1b5b58"/></to>
    </wire>
    <wire loc="74:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f929c47f3b0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f929bd8d7d0"/></to>
    </wire>
    <wire loc="126:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f929bd8d7d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f929c167020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f929c47e460"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x7f929bd8a020"/></to>
    </wire>
    <wire loc="132:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f929bd8a020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f929c163ad8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f929c47eb38"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x7f929bd882e8"/></to>
    </wire>
    <wire loc="135:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f929bd882e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f929c163ad8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f929c480ca0"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x7f929bd8b3a0"/></to>
    </wire>
    <wire loc="130:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f929bd8b3a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f929c163ad8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f929c4803c0"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x7f929bd88900"/></to>
    </wire>
    <wire loc="136:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f929bd88900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f929c163ad8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f929c485e60"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x7f929bd7ee10"/></to>
    </wire>
    <wire loc="154:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f929bd7ee10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f929c487708"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x7f929bd7cd60"/></to>
    </wire>
    <wire loc="158:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f929bd7cd60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f929c486020"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x7f929bd7b528"/></to>
    </wire>
    <wire loc="159:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f929bd7b528"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f929c4868a8"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x7f929bd84470"/></to>
    </wire>
    <wire loc="147:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f929bd84470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f929c483158"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7f929bd84c10"/></to>
    </wire>
    <wire loc="148:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f929bd84c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f929c493958"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x7f929bd6e7c0"/></to>
    </wire>
    <wire loc="184:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f929bd6e7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f929c164020"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f929c493020"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x7f929bd6e020"/></to>
    </wire>
    <wire loc="183:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f929bd6e020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f929c164020"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f929c4839d0"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x7f929bd7e470"/></to>
    </wire>
    <wire loc="153:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f929bd7e470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f929c4823a8"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x7f929bd82470"/></to>
    </wire>
    <wire loc="149:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f929bd82470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f929c482c18"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7f929bd7f470"/></to>
    </wire>
    <wire loc="151:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f929bd7f470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x7f929c47de50"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f929bd5de60"/></to>
    </wire>
    <wire loc="126:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f929bd5de60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f929c167020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x7f929c47d140"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f929bd30558"/></to>
    </wire>
    <wire loc="126:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f929bd30558"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f929c167020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f929c48c170"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f929bd03690"/></to>
    </wire>
    <wire loc="100:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f929c4a27f0"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f929bd05cd0"/></to>
    </wire>
    <wire loc="23:/home/kai/wsnpr/tinyos-main/tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f929bd05cd0"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f929bcea190"/></to>
    </wire>
    <wire loc="126:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x7f929c4713f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f929cf9c1c8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x7f929c472598"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f929cf9c1c8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f929c3fd3e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f929c3f67d8"/></to>
    </wire>
    <wire loc="51:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f929c3f67d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f929aba2398"/></to>
    </wire>
    <wire loc="52:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7f929c30b060"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f929aba2b80"/></to>
    </wire>
    <wire loc="52:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f929aba2398"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f929ab9cd98"/></to>
    </wire>
    <wire loc="53:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f929aba2b80"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f929ab81420"/></to>
    </wire>
    <wire loc="51:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f929ab9cd98"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f929ab6c330"/></to>
    </wire>
    <wire loc="55:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7f929ab7b860"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f929ab9b608"/></to>
    </wire>
    <wire loc="52:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f929ab9b608"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f929ab6cb58"/></to>
    </wire>
    <wire loc="56:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f929ab7d648"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f929c383630"/></to>
    </wire>
    <wire loc="50:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f929c383630"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f929c368878"/></to>
    </wire>
    <wire loc="54:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f929ab69ad8"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f929ab71288"/></to>
    </wire>
    <wire loc="49:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f929ab71288"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f929c3dcba8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f929ab660c0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f929ab708c8"/></to>
    </wire>
    <wire loc="50:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f929ab708c8"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f929c3d8850"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f929ab65430"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f929ab6fbd8"/></to>
    </wire>
    <wire loc="51:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f929ab6fbd8"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f929c3d51c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f929c3dcba8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f929ca10830"/></to>
    </wire>
    <wire loc="59:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f929c3d8850"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x7f929ca0e060"/></to>
    </wire>
    <wire loc="60:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f929c3d51c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x7f929ca05020"/></to>
    </wire>
    <wire loc="66:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f929c3dcba8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f929ca10830"/></to>
    </wire>
    <wire loc="67:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f929c3d8850"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x7f929ca0c898"/></to>
    </wire>
    <wire loc="68:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f929c3d51c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x7f929ca04aa8"/></to>
    </wire>
    <wire loc="70:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f929c3dcba8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f929ca10830"/></to>
    </wire>
    <wire loc="71:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f929c3d8850"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x7f929ca0bd30"/></to>
    </wire>
    <wire loc="72:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f929c3d51c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x7f929ca03868"/></to>
    </wire>
    <wire loc="74:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f929c3dcba8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f929ca10830"/></to>
    </wire>
    <wire loc="75:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f929c3d8850"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x7f929ca09120"/></to>
    </wire>
    <wire loc="76:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f929c3d51c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x7f929ca026e0"/></to>
    </wire>
    <wire loc="78:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f929c3dcba8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f929ca10830"/></to>
    </wire>
    <wire loc="79:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f929c3d8850"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x7f929ca08588"/></to>
    </wire>
    <wire loc="80:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f929c3d51c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x7f929ca01558"/></to>
    </wire>
    <wire loc="82:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f929c3dcba8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f929ca10830"/></to>
    </wire>
    <wire loc="83:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f929c3d8850"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x7f929ca07a20"/></to>
    </wire>
    <wire loc="84:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f929c3d51c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x7f929ca003d0"/></to>
    </wire>
    <wire loc="52:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f929c34cb10"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f929c380420"/></to>
    </wire>
    <wire loc="50:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f929c380420"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f929c37c980"/></to>
    </wire>
    <wire loc="51:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f929c36d928"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f929ca10830"/></to>
    </wire>
    <wire loc="73:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7f929c302020"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f929c2f2720"/></to>
    </wire>
    <wire loc="74:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7f929c3011b8"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f929c2ed020"/></to>
    </wire>
    <wire loc="71:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7f929c3fec20"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f929c2fc7d0"/></to>
    </wire>
    <wire loc="76:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7f929c2ff4f0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f929c2e4020"/></to>
    </wire>
    <wire loc="63:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f929c2fb908"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f929c7b3b00"/></to>
    </wire>
    <wire loc="64:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f929c2f5120"/></from>
      <to><interface-ref name="Port42" scoped="" ref="0x7f929c786568"/></to>
    </wire>
    <wire loc="65:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f929c2f1908"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7f929c7b5c88"/></to>
    </wire>
    <wire loc="66:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f929c2ec120"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f929c7c30a0"/></to>
    </wire>
    <wire loc="67:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f929c2e8908"/></from>
      <to><interface-ref name="Port46" scoped="" ref="0x7f929c77e568"/></to>
    </wire>
    <wire loc="68:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f929c2e3120"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7f929c788668"/></to>
    </wire>
    <wire loc="69:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f929c2de908"/></from>
      <to><interface-ref name="Port45" scoped="" ref="0x7f929c780568"/></to>
    </wire>
    <wire loc="63:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7f929c2c68d0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f929c2c2450"/></to>
    </wire>
    <wire loc="65:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f929c2c5190"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f929c1a6a78"/></to>
    </wire>
    <wire loc="53:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f929c2af020"/></from>
      <to><interface-ref name="ControlB1" scoped="" ref="0x7f929ca0d400"/></to>
    </wire>
    <wire loc="54:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430Capture" scoped="" ref="0x7f929c2ae2a8"/></from>
      <to><interface-ref name="CaptureB1" scoped="" ref="0x7f929c9fd3d0"/></to>
    </wire>
    <wire loc="55:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x7f929c2ad0a0"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7f929c788668"/></to>
    </wire>
    <wire loc="60:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7f929c1b4780"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f929c29fb88"/></to>
    </wire>
    <wire loc="70:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7f929c29fb88"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f929c28b878"/></to>
    </wire>
    <wire loc="61:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7f929c1a55f8"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f929c2a1b40"/></to>
    </wire>
    <wire loc="66:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7f929c2a1b40"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f929c291928"/></to>
    </wire>
    <wire loc="82:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7f929c294b88"/></from>
      <to><interface-ref name="Port26" scoped="" ref="0x7f929c281878"/></to>
    </wire>
    <wire loc="73:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7f929c29cb88"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x7f929c288878"/></to>
    </wire>
    <wire loc="77:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7f929c29ab88"/></from>
      <to><interface-ref name="Port21" scoped="" ref="0x7f929c286878"/></to>
    </wire>
    <wire loc="68:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7f929c2a5b88"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x7f929c28d878"/></to>
    </wire>
    <wire loc="80:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7f929c296b88"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7f929c283878"/></to>
    </wire>
    <wire loc="71:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7f929c29eb88"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x7f929c28a878"/></to>
    </wire>
    <wire loc="83:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7f929c293b88"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x7f929c280878"/></to>
    </wire>
    <wire loc="78:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7f929c299b88"/></from>
      <to><interface-ref name="Port22" scoped="" ref="0x7f929c285878"/></to>
    </wire>
    <wire loc="69:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7f929c2a0b88"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7f929c28c878"/></to>
    </wire>
    <wire loc="81:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7f929c295b88"/></from>
      <to><interface-ref name="Port25" scoped="" ref="0x7f929c282878"/></to>
    </wire>
    <wire loc="72:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7f929c29db88"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x7f929c289878"/></to>
    </wire>
    <wire loc="76:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7f929c29bb88"/></from>
      <to><interface-ref name="Port20" scoped="" ref="0x7f929c287878"/></to>
    </wire>
    <wire loc="67:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7f929c2a6b88"/></from>
      <to><interface-ref name="Port11" scoped="" ref="0x7f929c28e878"/></to>
    </wire>
    <wire loc="79:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7f929c297b88"/></from>
      <to><interface-ref name="Port23" scoped="" ref="0x7f929c284878"/></to>
    </wire>
    <wire loc="131:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f929bd8b9b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f929c163ad8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f929bd7dd98"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f929bd75470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f929bd7c5c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f929bd697c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f929c164020"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f929bd6b7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f929c164020"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f929bd8ac50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f929c163ad8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f929bd71c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f929bd6d7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f929c164020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f929bd77c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f929bd78470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f929bd8c430"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f929c167cb0"/></to>
    </wire>
    <wire loc="56:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f929c167cb0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f929c161df0"/></to>
    </wire>
    <wire loc="138:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f929bd87638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f929c163ad8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f929bd87c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f929c163ad8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f929bd6f060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f929bd863a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f929c163ad8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f929bd6b020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f929c164020"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f929bd71470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f929bd82c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f929bd72470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f929bd75c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f929bd72c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f929bd69020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f929c164020"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f929bd6a020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f929c164020"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f929bd78c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f929bd73470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f929bd6d020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f929c164020"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f929bd7bcc8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f929bd68020"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f929c166c00"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f929bd8cd58"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f929c163ad8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f929bd85c50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f929bd7fc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f929bd76470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f929bd76c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f929bd7d5f8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f929bd869b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f929c163ad8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f929bd85638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f929c163ad8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f929bd87020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f929c163ad8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f929bd6f800"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f929bd6a7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f929c164020"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f929bd77470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f929bd73c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f929bd8a638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f929c163ad8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f929bd794f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f929bd85020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f929c163ad8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f929bd79c90"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f929bd70470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f929bd68c58"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f929c166c00"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x7f929c166c00"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f929c15de50"/></to>
    </wire>
    <wire loc="53:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x7f929c164020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f929c15b040"/></to>
    </wire>
    <wire loc="54:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c15bd40"/></to>
    </wire>
    <wire loc="51:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f929c167020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f929c15ec10"/></to>
    </wire>
    <wire loc="55:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x7f929c163ad8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f929c159a98"/></to>
    </wire>
    <wire loc="59:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x7f929c155838"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f929c0f1100"/></to>
    </wire>
    <wire loc="74:/home/kai/wsnpr/tinyos-main/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f929c0f1100"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f929c0ef858"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f929c1581e8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f929c0d1cf0"/></to>
    </wire>
    <wire loc="52:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f929c0d1cf0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f929aa927d0"/></to>
    </wire>
    <wire loc="63:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f929c157d10"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f929c0d0948"/></to>
    </wire>
    <wire loc="53:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f929c0d0948"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f929aa91b90"/></to>
    </wire>
    <wire loc="64:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f929c155020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f929bdb3020"/></to>
    </wire>
    <wire loc="54:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f929bdb3020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f929aa8fd18"/></to>
    </wire>
    <wire loc="67:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f929c154730"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f929c7f6900"/></to>
    </wire>
    <wire loc="88:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x7f929c1495d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f929cf9c1c8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/kai/wsnpr/tinyos-main/tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f929c0ef858"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f929c0e71c8"/></to>
    </wire>
    <wire loc="110:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f929aa8fd18"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f929c06cc90"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f929aa91b90"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f929c06d5c8"/></to>
    </wire>
    <wire loc="105:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f929aa927d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f929c06f4e8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f929aa91430"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f929aa878c8"/></to>
    </wire>
    <wire loc="64:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f929aa878c8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f929bf05660"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f929c06d5c8"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f929bff6500"/></to>
    </wire>
    <wire loc="108:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f929aa8f2a8"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f929c06dc10"/></to>
    </wire>
    <wire loc="92:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f929c06dc10"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f929bff6ad8"/></to>
    </wire>
    <wire loc="111:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f929c068ce8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f929aa8e4b0"/></to>
    </wire>
    <wire loc="115:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f929aa7a8c8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f929c06bde0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f929c069a40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f929aa88b38"/></to>
    </wire>
    <wire loc="63:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f929aa88b38"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f929bf06498"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f929c063b50"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f929aa81020"/></to>
    </wire>
    <wire loc="67:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f929aa81020"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f929bf0aa50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f929c06bde0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f929bff7d58"/></to>
    </wire>
    <wire loc="93:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f929c06cc90"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f929bff46d8"/></to>
    </wire>
    <wire loc="88:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f929c06f4e8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f929bff7020"/></to>
    </wire>
    <wire loc="90:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f929bff3d58"/></from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f929c068ce8"/></to>
    </wire>
    <wire loc="94:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f929bff3020"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7f929c069a40"/></to>
    </wire>
    <wire loc="95:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f929bfeec18"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7f929c063b50"/></to>
    </wire>
    <wire loc="98:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7f929bff23b8"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f929bfe4080"/></to>
    </wire>
    <wire loc="85:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f929bfe4080"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f929bfdb5a8"/></to>
    </wire>
    <wire loc="101:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f929bfed430"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f929c7f6900"/></to>
    </wire>
    <wire loc="102:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <from><interface-ref name="signalDone_task" scoped="" ref="0x7f929bfeca90"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f929cf9c1c8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f929bfde020"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f929bfd5928"/></to>
    </wire>
    <wire loc="86:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f929bfe09c0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f929bfd5020"/></to>
    </wire>
    <wire loc="90:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f929bfa9b78"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7f929c757970"/></to>
    </wire>
    <wire loc="91:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7f929bfa7af0"/></from>
      <to><interface-ref name="SOMI0" scoped="" ref="0x7f929c753660"/></to>
    </wire>
    <wire loc="92:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f929bfa5968"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7f929c751560"/></to>
    </wire>
    <wire loc="93:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7f929bfa37e0"/></from>
      <to><interface-ref name="URXD0" scoped="" ref="0x7f929c74a560"/></to>
    </wire>
    <wire loc="94:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7f929bfa1658"/></from>
      <to><interface-ref name="UTXD0" scoped="" ref="0x7f929c74d560"/></to>
    </wire>
    <wire loc="14:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplI2C" scoped="" ref="0x7f929bfd3060"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7f929be67b30"/></to>
    </wire>
    <wire loc="68:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f929aa81780"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f929bf07940"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f929aa81d58"/></from>
      <to><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f929be70298"/></to>
    </wire>
    <wire loc="11:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f929be70298"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7f929be67b30"/></to>
    </wire>
    <wire loc="71:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f929aa867c0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f929bfe4080"/></to>
    </wire>
    <wire loc="66:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f929aa86060"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f929bf05e30"/></to>
    </wire>
    <wire loc="58:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f929bf05e30"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f929be770e0"/></to>
    </wire>
    <wire loc="65:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f929bf03b58"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f929aa7a8c8"/></to>
    </wire>
    <wire loc="56:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f929bf05660"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f929be79d18"/></to>
    </wire>
    <wire loc="106:/home/kai/wsnpr/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f929be79d18"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f929aa16d58"/></to>
    </wire>
    <wire loc="51:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7f929bf0aa50"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f929bf00480"/></to>
    </wire>
    <wire loc="55:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f929bf06498"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f929be79020"/></to>
    </wire>
    <wire loc="105:/home/kai/wsnpr/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f929be79020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f929aa16060"/></to>
    </wire>
    <wire loc="52:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="I2CInterrupts" scoped="" ref="0x7f929bf07940"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f929bf00d60"/></to>
    </wire>
    <wire loc="108:/home/kai/wsnpr/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f929be770e0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f929aa130e0"/></to>
    </wire>
    <wire loc="57:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f929be77960"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f929bf03b58"/></to>
    </wire>
    <wire loc="59:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f929beee2a8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f929be770e0"/></to>
    </wire>
    <wire loc="62:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7f929bef0438"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f929bfe09c0"/></to>
    </wire>
    <wire loc="63:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f929bef0bd8"/></from>
      <to><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f929bfde020"/></to>
    </wire>
    <wire loc="107:/home/kai/wsnpr/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f929be784a8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f929aa144c0"/></to>
    </wire>
    <wire loc="109:/home/kai/wsnpr/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f929aa13980"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f929be77960"/></to>
    </wire>
    <wire loc="111:/home/kai/wsnpr/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f929aa12130"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f929aa18020"/></to>
    </wire>
    <wire loc="75:/home/kai/wsnpr/tinyos-main/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f929aa102e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f929cf9c1c8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplUsart" scoped="" ref="0x7f929be5e6e0"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f929bfdb5a8"/></to>
    </wire>
    <wire loc="18:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f929be58060"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7f929c757970"/></to>
    </wire>
    <wire loc="19:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f929be57e00"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7f929c751560"/></to>
    </wire>
    <wire loc="153:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f929bd50a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f929bd59100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f929c163ad8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f929bd53a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f929bd4d470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f929bd46c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f929bd4dc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f929bd392e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f929c164020"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f929bd3c2e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f929c164020"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f929bd583a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f929c163ad8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f929bd42470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f929bd3d2e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f929c164020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f929bd52a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f929bd51a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f929bd47470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f929bd4ac10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f929bd4c470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f929bd5ca90"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f929c167cb0"/></to>
    </wire>
    <wire loc="138:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f929bd57c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f929c163ad8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f929bd562e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f929c163ad8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f929bd40a38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f929bd56a00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f929c163ad8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f929bd3da88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f929c164020"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f929bd57020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f929c163ad8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f929bd43c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f929bd512e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f929bd522e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f929bd5aa88"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f929c163ad8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f929bd44c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f929bd45470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f929bd43470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f929bd3ba88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f929c164020"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f929bd3ca88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f929c164020"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f929bd49470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f929bd45c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f929bd3ea88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f929c164020"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f929bd4b470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f929bd39a88"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f929c166c00"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f929bd5a470"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f929c163ad8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f929bd532e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f929bd502e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f929bd47c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f929bd4cc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f929bd46470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f929bd4e470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f929bd59718"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f929c163ad8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f929bd4ec10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f929bd54060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f929c163ad8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f929bd54c90"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f929c163ad8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f929bd3e2e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f929c164020"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f929bd3fa88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f929c164020"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f929bd57638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f929c163ad8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f929bd3f2e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f929bd3b2e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f929c164020"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f929bd49c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f929bd44470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f929bd59d30"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f929c163ad8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f929bd589b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f929c163ad8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f929bd4bc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f929bd54678"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f929c163ad8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f929bd4a470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f929bd42c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f929bd38780"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f929c166c00"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f929bd23470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f929bd2e900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f929c163ad8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f929bd27470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f929bd22d98"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f929bd1a470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f929bd215c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f929bd0e7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f929c164020"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f929bd107c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f929c164020"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f929bd2dc50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f929c163ad8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f929bd16c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f929bd117c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f929c164020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f929bd25470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f929bd24470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f929bd1cc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f929bd1d470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f929bd21d60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f929bd2f2a8"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f929c167cb0"/></to>
    </wire>
    <wire loc="138:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f929bd2a638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f929c163ad8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f929bd2ac50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f929c163ad8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f929bd14060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f929bd293a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f929c163ad8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f929bd10020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f929c164020"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f929bd2b900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f929c163ad8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f929bd16470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f929bd25c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f929bd27c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f929bd2e2e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f929c163ad8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f929bd17470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f929bd1ac10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f929bd17c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f929bd0e020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f929c164020"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f929bd0f020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f929c164020"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f929bd1dc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f929bd18470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f929bd11020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f929c164020"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f929bd1fcc8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f929bd0d020"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f929c166c00"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f929bd2fbd0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f929c163ad8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f929bd28c50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f929bd24c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f929bd1b470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f929bd1f528"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f929bd1bc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f929bd23e10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f929bd2d020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f929c163ad8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f929bd225f8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f929bd299b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f929c163ad8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f929bd28638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f929c163ad8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f929bd137c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f929c164020"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f929bd13020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f929c164020"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f929bd2a020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f929c163ad8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f929bd14800"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f929bd0f7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f929c164020"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f929bd1c470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f929bd18c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f929bd2d638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f929c163ad8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f929bd2b2e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f929c163ad8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f929bd1e4f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f929bd28020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f929c163ad8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f929bd1ec90"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f929bd15470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f929bd0dc58"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f929c166c00"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:/home/kai/wsnpr/tinyos-main/tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x7f929bce7648"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x7f929bcedac8"/></to>
    </wire>
    <wire loc="20:/home/kai/wsnpr/tinyos-main/tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x7f929bcedac8"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x7f929bcd8a58"/></to>
    </wire>
    <wire loc="16:/home/kai/wsnpr/tinyos-main/tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x7f929bcd2360"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x7f929bcdbba0"/></to>
    </wire>
    <wire loc="21:/home/kai/wsnpr/tinyos-main/tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x7f929bcdbba0"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x7f929bcbf108"/></to>
    </wire>
    <wire loc="17:/home/kai/wsnpr/tinyos-main/tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="PowerControl" scoped="" ref="0x7f929bcd2ba8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f929bc6f020"/></to>
    </wire>
    <wire loc="18:/home/kai/wsnpr/tinyos-main/tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x7f929bcc3530"/></from>
      <to><interface-ref name="Gpio" scoped="" ref="0x7f929bcc4378"/></to>
    </wire>
    <wire loc="11:/home/kai/wsnpr/tinyos-main/tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="Gpio" scoped="" ref="0x7f929bcc4378"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f929bc774e0"/></to>
    </wire>
    <wire loc="18:/home/kai/wsnpr/tinyos-main/tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7f929bcba748"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7f929bcc1b78"/></to>
    </wire>
    <wire loc="49:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7f929bcc1b78"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7f929bc98bc8"/></to>
    </wire>
    <wire loc="19:/home/kai/wsnpr/tinyos-main/tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x7f929bcbf968"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x7f929bcc3530"/></to>
    </wire>
    <wire loc="50:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f929bc89020"/></from>
      <to><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7f929bc833a8"/></to>
    </wire>
    <wire loc="54:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7f929bc833a8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f929bc80980"/></to>
    </wire>
    <wire loc="55:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f929bc7d928"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x7f929ca28378"/></to>
    </wire>
    <wire loc="9:/home/kai/wsnpr/tinyos-main/tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f929bc755f8"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7f929c7a2568"/></to>
    </wire>
    <wire loc="58:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x7f929bc5fcc0"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x7f929bc50738"/></to>
    </wire>
    <wire loc="59:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x7f929bc5e458"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x7f929bc50e80"/></to>
    </wire>
    <wire loc="66:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x7f929bc4f820"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f929c3fdd58"/></to>
    </wire>
    <wire loc="69:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7f929bc448b8"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7f929c3fec20"/></to>
    </wire>
    <wire loc="70:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f929bc42c98"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f929c304e20"/></to>
    </wire>
    <wire loc="71:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7f929bc3ce20"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x7f929c2ff4f0"/></to>
    </wire>
    <wire loc="74:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7f929bc3dd60"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x7f929c2c68d0"/></to>
    </wire>
    <wire loc="77:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f929bc3a020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f929bba47d0"/></to>
    </wire>
    <wire loc="126:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f929bba47d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f929c167020"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f929bc3acb0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f929bba3430"/></to>
    </wire>
    <wire loc="125:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f929bba3430"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f929c167cb0"/></to>
    </wire>
    <wire loc="79:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f929bc37670"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7f929bba3d58"/></to>
    </wire>
    <wire loc="129:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f929bba3d58"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f929c163ad8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f929bc37d40"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x7f929bba1638"/></to>
    </wire>
    <wire loc="133:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f929bba1638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f929c163ad8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f929bc36478"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x7f929bba1c50"/></to>
    </wire>
    <wire loc="134:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f929bba1c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f929c163ad8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f929bc36b68"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x7f929bb9e638"/></to>
    </wire>
    <wire loc="138:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f929bb9e638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f929c163ad8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f929bc38da8"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7f929bb98470"/></to>
    </wire>
    <wire loc="151:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f929bb98470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f929bc39720"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x7f929bb81c58"/></to>
    </wire>
    <wire loc="196:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f929bb81c58"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f929c166c00"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f929bc38538"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f929bb857c0"/></to>
    </wire>
    <wire loc="186:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f929bb857c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f929c164020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f929bc353d0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7f929bb9bc10"/></to>
    </wire>
    <wire loc="148:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f929bb9bc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f929bc34558"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7f929bb965f8"/></to>
    </wire>
    <wire loc="155:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f929bb965f8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f929bc34de0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7f929bb96d98"/></to>
    </wire>
    <wire loc="156:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f929bb96d98"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f929bc35e30"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x7f929bb9c020"/></to>
    </wire>
    <wire loc="142:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f929bb9c020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f929c163ad8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f929bc326f0"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x7f929bb82020"/></to>
    </wire>
    <wire loc="191:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f929bb82020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f929c164020"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f929bc33650"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7f929bb847c0"/></to>
    </wire>
    <wire loc="188:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f929bb847c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f929c164020"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f929bc33e80"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7f929bb83020"/></to>
    </wire>
    <wire loc="189:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f929bb83020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f929c164020"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7f929bc2c750"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7f929bb73808"/></to>
    </wire>
    <wire loc="62:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7f929bb73808"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7f929bb6dc48"/></to>
    </wire>
    <wire loc="98:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f929bc4c940"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f929baf34b0"/></to>
    </wire>
    <wire loc="99:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f929bc4a7e8"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f929baf0d08"/></to>
    </wire>
    <wire loc="100:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f929bc49460"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f929baee130"/></to>
    </wire>
    <wire loc="101:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f929bc3d1d8"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f929bae7ac8"/></to>
    </wire>
    <wire loc="61:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f929bae7ac8"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f929bad9ac8"/></to>
    </wire>
    <wire loc="104:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f929bc300c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f929c7f6900"/></to>
    </wire>
    <wire loc="153:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f929bb97470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f929bba29b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f929c163ad8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f929bb9b470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f929bb8e470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f929bb955c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f929bb827c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f929c164020"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f929bb8ac10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f929bb99470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f929bb90c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f929bb91470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f929bb95d60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f929bb9ec50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f929c163ad8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f929bb88060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f929bb9d3a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f929c163ad8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f929bb84020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f929c164020"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f929bb9f900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f929c163ad8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f929bb8a470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f929bb99c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f929bba23a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f929c163ad8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f929bb8b470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f929bb8ec10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f929bb8bc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f929bb91c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f929bb8c470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f929bb85020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f929c164020"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f929bb93cc8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f929bb81020"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f929c166c00"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f929bb9cc50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f929bb98c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f929bb8f470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f929bb93528"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f929bb8fc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f929bb97e10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f929bba1020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f929c163ad8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f929bb9d9b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f929c163ad8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f929bb9c638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f929c163ad8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f929bb877c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f929c164020"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f929bb87020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f929c164020"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f929bb9e020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f929c163ad8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f929bb88800"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f929bb837c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f929c164020"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f929bb90470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f929bb8cc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f929bb9f2e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f929c163ad8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f929bb924f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f929bb92c90"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f929bb89470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x7f929bb718c0"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x7f929bb6cd58"/></to>
    </wire>
    <wire loc="59:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f929bb58a18"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f929c7f6900"/></to>
    </wire>
    <wire loc="68:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f929bb6b420"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f929c304e20"/></to>
    </wire>
    <wire loc="69:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7f929bb6a688"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x7f929c302020"/></to>
    </wire>
    <wire loc="70:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7f929bb69818"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x7f929c3011b8"/></to>
    </wire>
    <wire loc="71:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f929bb68a30"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f929c2c5190"/></to>
    </wire>
    <wire loc="72:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f929bb676c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f929b99edb8"/></to>
    </wire>
    <wire loc="126:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f929b99edb8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f929c167020"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f929bb66518"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x7f929b97aa88"/></to>
    </wire>
    <wire loc="195:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f929b97aa88"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f929c166c00"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f929bb65a88"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x7f929b998638"/></to>
    </wire>
    <wire loc="137:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f929b998638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f929c163ad8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f929bb65398"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x7f929b9972e8"/></to>
    </wire>
    <wire loc="139:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f929b9972e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f929c163ad8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f929bb64328"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f929baf34b0"/></to>
    </wire>
    <wire loc="77:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f929bb63188"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f929baf0d08"/></to>
    </wire>
    <wire loc="78:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f929bb61b80"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f929baee130"/></to>
    </wire>
    <wire loc="79:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f929bb63af0"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f929c4b2aa8"/></to>
    </wire>
    <wire loc="81:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f929bb5ddc8"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7f929b98fc10"/></to>
    </wire>
    <wire loc="155:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f929b98fc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f929bb5c6a8"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7f929b98e470"/></to>
    </wire>
    <wire loc="156:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f929b98e470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f929bb5d6c8"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x7f929b995060"/></to>
    </wire>
    <wire loc="141:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f929b995060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f929c163ad8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f929bb59108"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x7f929b97a2e8"/></to>
    </wire>
    <wire loc="192:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f929b97a2e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f929c164020"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f929bb5a020"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7f929b97d2e8"/></to>
    </wire>
    <wire loc="188:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f929b97d2e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f929c164020"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f929bb5a850"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7f929b97da88"/></to>
    </wire>
    <wire loc="189:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f929b97da88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f929c164020"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f929bb59970"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f929b97ea88"/></to>
    </wire>
    <wire loc="187:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f929b97ea88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f929c164020"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f929bb58210"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7f929b99b470"/></to>
    </wire>
    <wire loc="129:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f929b99b470"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f929c163ad8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x7f929bb4de38"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f929cf9c1c8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f929ba85720"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f929c383630"/></to>
    </wire>
    <wire loc="65:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x7f929bad38b0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f929ba86528"/></to>
    </wire>
    <wire loc="69:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f929bad5b20"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f929ba6f020"/></to>
    </wire>
    <wire loc="59:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f929ba6f020"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f929b9be988"/></to>
    </wire>
    <wire loc="58:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f929ba76d78"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f929b9cb020"/></to>
    </wire>
    <wire loc="57:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f929ba76080"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f929ba6c560"/></to>
    </wire>
    <wire loc="52:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f929ba6c560"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f929a914520"/></to>
    </wire>
    <wire loc="61:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7f929b9c5208"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f929ba3cd88"/></to>
    </wire>
    <wire loc="62:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f929ba12020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f929ba6cd48"/></to>
    </wire>
    <wire loc="53:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f929ba6cd48"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f929a90ec78"/></to>
    </wire>
    <wire loc="63:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f929b9bdb88"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f929ba61bd0"/></to>
    </wire>
    <wire loc="50:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f929ba61bd0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f929ba583f8"/></to>
    </wire>
    <wire loc="51:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f929a914520"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f929a8d7a18"/></to>
    </wire>
    <wire loc="55:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7f929a9071e8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f929a914d08"/></to>
    </wire>
    <wire loc="52:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f929a914d08"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f929a8d6270"/></to>
    </wire>
    <wire loc="56:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f929a90a020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f929ba61bd0"/></to>
    </wire>
    <wire loc="54:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f929a8d2200"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f929a8ffa08"/></to>
    </wire>
    <wire loc="49:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f929a8ffa08"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f929c3dcba8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f929a8d1750"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f929a8fd0c0"/></to>
    </wire>
    <wire loc="50:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f929a8fd0c0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f929c3d8850"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f929a8d0a50"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f929a8fc430"/></to>
    </wire>
    <wire loc="51:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f929a8fc430"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f929c3d51c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f929ba55688"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f929c380420"/></to>
    </wire>
    <wire loc="74:/home/kai/wsnpr/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7f929ba0f020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f929cf9c1c8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/kai/wsnpr/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7f929b9c0478"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f929cf9c1c8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/home/kai/wsnpr/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f929b9b5420"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f929b9ac6a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/kai/wsnpr/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f929b9ac6a0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f929ba76d78"/></to>
    </wire>
    <wire loc="153:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f929b991a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f929b99a100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f929c163ad8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f929b994a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f929b987c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f929b98ec10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f929b9993a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f929c163ad8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f929b982470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f929b97e2e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f929c164020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f929b993a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f929b992a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f929b988470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f929b98bc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f929b98d470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f929b99ca18"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f929c167cb0"/></to>
    </wire>
    <wire loc="138:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f929b998c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f929c163ad8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f929b981a38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f929b997a00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f929c163ad8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f929b998020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f929c163ad8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f929b984c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f929b9922e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f929b9932e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f929b99ba88"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f929c163ad8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f929b985c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f929b986470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f929b984470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f929b97ca88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f929c164020"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f929b98a470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f929b986c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f929b97fa88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f929c164020"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f929b98c470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f929b9942e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f929b9912e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f929b988c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f929b98dc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f929b987470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f929b98f470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f929b99a718"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f929c163ad8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f929b995c90"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f929c163ad8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f929b97f2e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f929c164020"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f929b980a88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f929c164020"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f929b9802e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f929b97c2e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f929c164020"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f929b98ac10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f929b985470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f929b99ad30"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f929c163ad8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f929b9999b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f929c163ad8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f929b98cc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f929b995678"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f929c163ad8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f929b98b470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f929b982c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f929b979780"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f929c166c00"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/kai/wsnpr/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7f929b950668"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7f929b94d528"/></to>
    </wire>
    <wire loc="54:/home/kai/wsnpr/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f929b9578d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f929b952b38"/></to>
    </wire>
    <wire loc="56:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f929b92d578"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f929b932838"/></to>
    </wire>
    <wire loc="60:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f929b92c2a0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f929b92f468"/></to>
    </wire>
    <wire loc="74:/home/kai/wsnpr/tinyos-main/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f929b92f468"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f929c0ef858"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f929b92b080"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f929b953690"/></to>
    </wire>
    <wire loc="62:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f929b92b848"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f929baf0d08"/></to>
    </wire>
    <wire loc="57:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x7f929b915748"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x7f929b911978"/></to>
    </wire>
    <wire loc="58:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f929b90f728"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f929b915e50"/></to>
    </wire>
    <wire loc="62:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f929b90fd68"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f929baf0d08"/></to>
    </wire>
    <wire loc="94:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f929b8d8528"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f929b8e2670"/></to>
    </wire>
    <wire loc="95:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f929b8d7358"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f929b8e2020"/></to>
    </wire>
    <wire loc="100:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f929b8d7970"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f929baf34b0"/></to>
    </wire>
    <wire loc="101:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f929b8d67a8"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f929baf0d08"/></to>
    </wire>
    <wire loc="102:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f929b8d51c0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f929b88b2a8"/></to>
    </wire>
    <wire loc="184:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x7f929b8abac0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f929cf9c1c8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x7f929b87f928"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f929b87bd50"/></to>
    </wire>
    <wire loc="74:/home/kai/wsnpr/tinyos-main/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f929b87bd50"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f929c0ef858"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f929b8683c8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f929c53a658"/></to>
    </wire>
    <wire loc="67:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f929b756728"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f929b74cd00"/></to>
    </wire>
    <wire loc="67:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f929b7b6348"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f929b75c908"/></to>
    </wire>
    <wire loc="69:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f929b756110"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f929b74c6e8"/></to>
    </wire>
    <wire loc="60:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f929b7518f8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f929b7b6c80"/></to>
    </wire>
    <wire loc="69:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f929b75b308"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f929b753208"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f929b75a020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f929b755760"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f929b751020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x7f929b457020"/></to>
    </wire>
    <wire loc="64:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f929b753208"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f929b622020"/></to>
    </wire>
    <wire loc="65:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f929b755760"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f929b623868"/></to>
    </wire>
    <wire loc="66:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x7f929b622db8"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f929b751020"/></to>
    </wire>
    <wire loc="70:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f929b742bc8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f929b7518f8"/></to>
    </wire>
    <wire loc="71:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f929b620a50"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f929b7518f8"/></to>
    </wire>
    <wire loc="72:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f929b617420"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f929b7518f8"/></to>
    </wire>
    <wire loc="74:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f929b6216c8"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f929b740b48"/></to>
    </wire>
    <wire loc="75:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x7f929b620020"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x7f929b744898"/></to>
    </wire>
    <wire loc="77:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x7f929b73ab38"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x7f929b61bb38"/></to>
    </wire>
    <wire loc="78:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7f929b739398"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f929b61a7e8"/></to>
    </wire>
    <wire loc="17:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f929b61a7e8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f929b46e670"/></to>
    </wire>
    <wire loc="80:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f929b60b448"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f929b5f2020"/></to>
    </wire>
    <wire loc="13:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f929b5f2020"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f929b472b90"/></to>
    </wire>
    <wire loc="332:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x7f929b6e5830"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f929cf9c1c8"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x7f929b71bd70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f929cf9c1c8"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x7f929b6e7020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f929cf9c1c8"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7f929b6e2918"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f929cf9c1c8"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x7f929b61d100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f929cf9c1c8"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x7f929b61d8a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f929cf9c1c8"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="14:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f929b5eb408"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f929b471bd8"/></to>
    </wire>
    <wire loc="61:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f929b471bd8"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f929b5dec88"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f929b472b90"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f929b5df800"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f929b470740"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f929b46b020"/></to>
    </wire>
    <wire loc="19:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f929b46b650"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f929b4737d0"/></to>
    </wire>
    <wire loc="59:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f929b4737d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f929b5e17b8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f929b472430"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f929a7a18c8"/></to>
    </wire>
    <wire loc="60:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f929a7a18c8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f929b4b0848"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f929b5da020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f929b470740"/></to>
    </wire>
    <wire loc="66:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f929a79a780"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f929b5e09d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f929b5dcd50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f929a7a2bd0"/></to>
    </wire>
    <wire loc="59:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f929a7a2bd0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f929b4b1608"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f929b5dacb8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f929a79a020"/></to>
    </wire>
    <wire loc="63:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f929a79a020"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f929b4b2910"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f929b5e09d0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f929b571a68"/></to>
    </wire>
    <wire loc="59:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7f929b5dec88"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7f929b56e550"/></to>
    </wire>
    <wire loc="58:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7f929b5df800"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7f929b5703c8"/></to>
    </wire>
    <wire loc="55:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f929b5e17b8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f929b572cb8"/></to>
    </wire>
    <wire loc="57:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f929b56c020"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f929b5da020"/></to>
    </wire>
    <wire loc="60:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f929b56d180"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7f929b5dcd50"/></to>
    </wire>
    <wire loc="61:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f929b567020"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7f929b5dacb8"/></to>
    </wire>
    <wire loc="64:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7f929b56c658"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f929b558d18"/></to>
    </wire>
    <wire loc="88:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f929b558d18"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f929b551060"/></to>
    </wire>
    <wire loc="67:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f929b5679b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f929b4ca020"/></to>
    </wire>
    <wire loc="49:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Counter32khz16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f929b4ca020"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f929c380420"/></to>
    </wire>
    <wire loc="70:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f929b565928"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f929c7f6900"/></to>
    </wire>
    <wire loc="89:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f929b555528"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f929b54d8e0"/></to>
    </wire>
    <wire loc="87:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f929b558528"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f929b5547d0"/></to>
    </wire>
    <wire loc="91:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f929b54c1e8"/></from>
      <to><interface-ref name="SIMO1" scoped="" ref="0x7f929c746560"/></to>
    </wire>
    <wire loc="92:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7f929b54a020"/></from>
      <to><interface-ref name="SOMI1" scoped="" ref="0x7f929c744560"/></to>
    </wire>
    <wire loc="93:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f929b549e00"/></from>
      <to><interface-ref name="UCLK1" scoped="" ref="0x7f929c742560"/></to>
    </wire>
    <wire loc="94:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7f929b547c78"/></from>
      <to><interface-ref name="URXD1" scoped="" ref="0x7f929c73e560"/></to>
    </wire>
    <wire loc="95:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7f929b545af0"/></from>
      <to><interface-ref name="UTXD1" scoped="" ref="0x7f929c740560"/></to>
    </wire>
    <wire loc="66:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f929a79f7c0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f929b558d18"/></to>
    </wire>
    <wire loc="62:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f929a79f060"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f929b4ae080"/></to>
    </wire>
    <wire loc="58:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f929b4ae080"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f929b4a5e20"/></to>
    </wire>
    <wire loc="61:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f929b4aed80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f929a79a780"/></to>
    </wire>
    <wire loc="56:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f929b4b0848"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f929b4a6af8"/></to>
    </wire>
    <wire loc="106:/home/kai/wsnpr/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f929b4a6af8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f929a736388"/></to>
    </wire>
    <wire loc="51:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7f929b4b2910"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f929b4ac480"/></to>
    </wire>
    <wire loc="55:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f929b4b1608"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f929b4a7d80"/></to>
    </wire>
    <wire loc="105:/home/kai/wsnpr/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f929b4a7d80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f929a737668"/></to>
    </wire>
    <wire loc="108:/home/kai/wsnpr/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f929b4a5e20"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f929a735700"/></to>
    </wire>
    <wire loc="52:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7f929b4ab438"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f929b555528"/></to>
    </wire>
    <wire loc="57:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f929b4a46d8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f929b4aed80"/></to>
    </wire>
    <wire loc="59:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f929b4aa2a8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f929b4a5e20"/></to>
    </wire>
    <wire loc="62:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f929b48a268"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f929b4a5268"/></to>
    </wire>
    <wire loc="107:/home/kai/wsnpr/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f929b4a5268"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f929a736ac8"/></to>
    </wire>
    <wire loc="65:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f929b4a0478"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f929b558528"/></to>
    </wire>
    <wire loc="109:/home/kai/wsnpr/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f929a734020"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f929b4a46d8"/></to>
    </wire>
    <wire loc="111:/home/kai/wsnpr/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f929a7347a0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f929a73a658"/></to>
    </wire>
    <wire loc="75:/home/kai/wsnpr/tinyos-main/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f929a731908"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f929cf9c1c8"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/kai/wsnpr/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f929a703600"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f929b4a0478"/></to>
    </wire>
    <wire loc="82:/home/kai/wsnpr/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f929a703d20"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f929b4a0b98"/></to>
    </wire>
    <wire loc="84:/home/kai/wsnpr/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f929a7022e8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f929b48a268"/></to>
    </wire>
    <wire loc="85:/home/kai/wsnpr/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f929a701020"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f929b48ae20"/></to>
    </wire>
    <wire loc="65:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f929a6f6a78"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f929b40c020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/chips/s1087/HamamatsuS1087ParC.nc">
      <from><interface-ref name="ReadStream" scoped="" ref="0x7f929b060b10"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x7f929a6f1358"/></to>
    </wire>
    <wire loc="66:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="ReadStream" scoped="" ref="0x7f929a6f1358"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x7f929b12b3f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/chips/s1087/HamamatsuS1087ParC.nc">
      <from><interface-ref name="DeviceMetadata" scoped="" ref="0x7f929b438c38"/></from>
      <to><interface-ref name="DeviceMetadata" scoped="" ref="0x7f929b0670c0"/></to>
    </wire>
    <wire loc="54:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/chips/s1087/HamamatsuS1087ParC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7f929a6f31d8"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f929b0679b0"/></to>
    </wire>
    <wire loc="55:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/chips/s1087/HamamatsuS1087ParC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7f929a6ed020"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f929b0679b0"/></to>
    </wire>
    <wire loc="66:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f929b3f84f8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f929a6f31d8"/></to>
    </wire>
    <wire loc="67:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="SingleChannel" scoped="" ref="0x7f929b3e6ab8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f929a6e8cb8"/></to>
    </wire>
    <wire loc="59:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f929a6e8cb8"/></from>
      <to><interface-ref name="SingleChannel" scoped="" ref="0x7f929b393db0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="ResourceRead" scoped="" ref="0x7f929b3fcc48"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f929a6e8100"/></to>
    </wire>
    <wire loc="58:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f929a6e8100"/></from>
      <to><interface-ref name="ClientResource" scoped="" ref="0x7f929b202270"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7f929a6e6e50"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f929a6f31d8"/></to>
    </wire>
    <wire loc="136:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/AdcP.nc">
      <from><interface-ref name="readDone" scoped="" ref="0x7f929b3ca590"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f929cf9c1c8"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7f929a6e7c18"/></from>
      <to><interface-ref name="MultiChannel" scoped="" ref="0x7f929b3903c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7f929a6e6578"/></from>
      <to><interface-ref name="Overflow" scoped="" ref="0x7f929b38f300"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="AdcResource" scoped="" ref="0x7f929b2014f8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f929b398ab0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="ConfUp" scoped="" ref="0x7f929a6d7b30"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f929a6e6e50"/></to>
    </wire>
    <wire loc="67:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f929b200990"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ConfSub" scoped="" ref="0x7f929a6d8998"/></to>
    </wire>
    <wire loc="52:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="MultiChannel" scoped="" ref="0x7f929b3903c8"/></from>
      <to><interface-ref name="MultiChannel" scoped="" ref="0x7f929b389900"/></to>
    </wire>
    <wire loc="54:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="DMAExtension" scoped="" ref="0x7f929b38e1c8"/></from>
      <to><interface-ref name="DMAExtension" scoped="" ref="0x7f929b386670"/></to>
    </wire>
    <wire loc="53:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f929b38f300"/></from>
      <to><interface-ref name="Overflow" scoped="" ref="0x7f929b3878b0"/></to>
    </wire>
    <wire loc="51:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="SingleChannel" scoped="" ref="0x7f929b393db0"/></from>
      <to><interface-ref name="SingleChannel" scoped="" ref="0x7f929b38a270"/></to>
    </wire>
    <wire loc="50:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f929b398ab0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f929b222750"/></to>
    </wire>
    <wire loc="98:/home/kai/wsnpr/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f929b222750"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f929a6c1180"/></to>
    </wire>
    <wire loc="57:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="ADCArbiterInfo" scoped="" ref="0x7f929b385020"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f929b220c50"/></to>
    </wire>
    <wire loc="100:/home/kai/wsnpr/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f929b220c50"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f929a6c05e8"/></to>
    </wire>
    <wire loc="58:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="HplAdc12" scoped="" ref="0x7f929b3785f0"/></from>
      <to><interface-ref name="HplAdc12" scoped="" ref="0x7f929b2ae8e0"/></to>
    </wire>
    <wire loc="62:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x7f929b372db0"/></from>
      <to><interface-ref name="Port60" scoped="" ref="0x7f929c769568"/></to>
    </wire>
    <wire loc="63:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x7f929b370dd0"/></from>
      <to><interface-ref name="Port61" scoped="" ref="0x7f929c767568"/></to>
    </wire>
    <wire loc="64:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7f929b36ec48"/></from>
      <to><interface-ref name="Port62" scoped="" ref="0x7f929c765568"/></to>
    </wire>
    <wire loc="65:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7f929b36cac0"/></from>
      <to><interface-ref name="Port63" scoped="" ref="0x7f929c763568"/></to>
    </wire>
    <wire loc="66:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7f929b36a938"/></from>
      <to><interface-ref name="Port64" scoped="" ref="0x7f929c761568"/></to>
    </wire>
    <wire loc="67:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x7f929b3687b0"/></from>
      <to><interface-ref name="Port65" scoped="" ref="0x7f929c75f568"/></to>
    </wire>
    <wire loc="68:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x7f929b366628"/></from>
      <to><interface-ref name="Port66" scoped="" ref="0x7f929c75d568"/></to>
    </wire>
    <wire loc="69:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x7f929b364528"/></from>
      <to><interface-ref name="Port67" scoped="" ref="0x7f929c75b568"/></to>
    </wire>
    <wire loc="74:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7f929b3834e0"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x7f929ca28378"/></to>
    </wire>
    <wire loc="75:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x7f929b376b68"/></from>
      <to><interface-ref name="ControlA0" scoped="" ref="0x7f929ca20818"/></to>
    </wire>
    <wire loc="76:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x7f929b374060"/></from>
      <to><interface-ref name="ControlA1" scoped="" ref="0x7f929ca27bb8"/></to>
    </wire>
    <wire loc="77:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x7f929b373390"/></from>
      <to><interface-ref name="CompareA0" scoped="" ref="0x7f929ca18378"/></to>
    </wire>
    <wire loc="78:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x7f929b3720c0"/></from>
      <to><interface-ref name="CompareA1" scoped="" ref="0x7f929ca1d0c0"/></to>
    </wire>
    <wire loc="99:/home/kai/wsnpr/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f929b220510"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f929a6c1e78"/></to>
    </wire>
    <wire loc="101:/home/kai/wsnpr/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f929a6bf020"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f929b21f550"/></to>
    </wire>
    <wire loc="103:/home/kai/wsnpr/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f929a6bf7a0"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x7f929a6c33f8"/></to>
    </wire>
    <wire loc="68:/home/kai/wsnpr/tinyos-main/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f929a6be2e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f929cf9c1c8"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="ClientResource" scoped="" ref="0x7f929b202270"/></from>
      <to><interface-ref name="ClientResource" scoped="" ref="0x7f929b1a1208"/></to>
    </wire>
    <wire loc="65:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="AdcResource" scoped="" ref="0x7f929b1a04c0"/></from>
      <to><interface-ref name="AdcResource" scoped="" ref="0x7f929b2014f8"/></to>
    </wire>
    <wire loc="66:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f929b19c1c8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7f929b200990"/></to>
    </wire>
    <wire loc="68:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="RefVolt_1_5V" scoped="" ref="0x7f929b19f200"/></from>
      <to><interface-ref name="RefVolt_1_5V" scoped="" ref="0x7f929b1fb368"/></to>
    </wire>
    <wire loc="69:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="RefVolt_2_5V" scoped="" ref="0x7f929b19fd70"/></from>
      <to><interface-ref name="RefVolt_2_5V" scoped="" ref="0x7f929b1fa020"/></to>
    </wire>
    <wire loc="70:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="SwitchOnTimer" scoped="" ref="0x7f929b1f8a48"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f929b16de08"/></to>
    </wire>
    <wire loc="52:/home/kai/wsnpr/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f929b16de08"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f929b9ac6a0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="SwitchOffTimer" scoped="" ref="0x7f929b1f3c70"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f929b166350"/></to>
    </wire>
    <wire loc="52:/home/kai/wsnpr/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f929b166350"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f929b9ac6a0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="SwitchOffSettleTimer" scoped="" ref="0x7f929b1eedb0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f929b160a60"/></to>
    </wire>
    <wire loc="52:/home/kai/wsnpr/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f929b160a60"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f929b9ac6a0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="HplAdc12" scoped="" ref="0x7f929b1fab28"/></from>
      <to><interface-ref name="HplAdc12" scoped="" ref="0x7f929b2ae8e0"/></to>
    </wire>
    <wire loc="52:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <from><interface-ref name="switchOff" scoped="" ref="0x7f929b19a910"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f929cf9c1c8"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7f929a6855a8"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f929a6ed020"/></to>
    </wire>
    <wire loc="67:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7f929b127668"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f929a6ed020"/></to>
    </wire>
    <wire loc="68:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f929b1231c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f929a6886d8"/></to>
    </wire>
    <wire loc="58:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f929a6886d8"/></from>
      <to><interface-ref name="ClientResource" scoped="" ref="0x7f929b202270"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="69:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f929b126c08"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f929a6873f0"/></to>
    </wire>
    <wire loc="59:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f929a6873f0"/></from>
      <to><interface-ref name="SingleChannel" scoped="" ref="0x7f929b393db0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="31:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="ReadStream" scoped="" ref="0x7f929b12b3f0"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x7f929b0aed58"/></to>
    </wire>
    <wire loc="32:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7f929b1184c0"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f929b127668"/></to>
    </wire>
    <wire loc="33:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f929b07e6b8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f929b1231c8"/></to>
    </wire>
    <wire loc="35:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x7f929b0839d8"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x7f929b11fc98"/></to>
    </wire>
    <wire loc="38:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="SingleChannel" scoped="" ref="0x7f929b11bd38"/></from>
      <to><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f929b126c08"/></to>
    </wire>
    <wire loc="39:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f929b117740"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f929b0b41a8"/></to>
    </wire>
    <wire loc="53:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f929b0b41a8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f929a673020"/></to>
    </wire>
    <wire loc="156:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/AdcStreamP.nc">
      <from><interface-ref name="bufferDone" scoped="" ref="0x7f929b0efa00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f929cf9c1c8"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/AdcStreamP.nc">
      <from><interface-ref name="readStreamDone" scoped="" ref="0x7f929b0fc6a8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f929cf9c1c8"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/AdcStreamP.nc">
      <from><interface-ref name="readStreamFail" scoped="" ref="0x7f929b0f7b60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f929cf9c1c8"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f929b0b5960"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f929a679630"/></to>
    </wire>
    <wire loc="51:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f929a679630"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f929a65fbd8"/></to>
    </wire>
    <wire loc="55:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7f929a66c450"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f929a679e18"/></to>
    </wire>
    <wire loc="52:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f929a679e18"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f929a65e4f8"/></to>
    </wire>
    <wire loc="56:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f929a66f1a8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f929ba61bd0"/></to>
    </wire>
    <wire loc="54:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f929a65a568"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f929a665c48"/></to>
    </wire>
    <wire loc="49:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f929a665c48"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f929c3dcba8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f929a659bd8"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f929a6622a8"/></to>
    </wire>
    <wire loc="50:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f929a6622a8"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f929c3d8850"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f929a657020"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f929a6615b8"/></to>
    </wire>
    <wire loc="51:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f929a6615b8"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f929c3d51c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7f929a6863f0"/></from>
      <to><interface-ref name="MultiChannel" scoped="" ref="0x7f929b3903c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7f929a686c98"/></from>
      <to><interface-ref name="Overflow" scoped="" ref="0x7f929b38f300"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="AdcResource" scoped="" ref="0x7f929b2014f8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f929b398ab0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="ConfUp" scoped="" ref="0x7f929a617cf8"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f929a6855a8"/></to>
    </wire>
    <wire loc="67:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f929b200990"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ConfSub" scoped="" ref="0x7f929a619b28"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/home/kai/wsnpr/tinyos-main/tos/system/MainC.nc">
      <documentation loc="45:/home/kai/wsnpr/tinyos-main/tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="40:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <documentation loc="34:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:/home/kai/wsnpr/tinyos-main/tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:/home/kai/wsnpr/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:/home/kai/wsnpr/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="33:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="43:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="37:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="33:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="39(Msp430TimerC.Msp430TimerA):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="39(Msp430TimerC.Msp430TimerB):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="39(Msp430TimerC.Msp430TimerA0):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="39(Msp430TimerC.Msp430TimerA1):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="39(Msp430TimerC.Msp430TimerA2):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="39(Msp430TimerC.Msp430TimerB0):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="39(Msp430TimerC.Msp430TimerB1):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="39(Msp430TimerC.Msp430TimerB2):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="39(Msp430TimerC.Msp430TimerB3):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="39(Msp430TimerC.Msp430TimerB4):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="39(Msp430TimerC.Msp430TimerB5):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="39(Msp430TimerC.Msp430TimerB6):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="33:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @date   October 26, 2005&#10; @see  Please refer to TEP 112 for more information about this component and its&#10;          intended use.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:/home/kai/wsnpr/tinyos-main/tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:/home/kai/wsnpr/tinyos-main/tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/home/kai/wsnpr/tinyos-main/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/home/kai/wsnpr/tinyos-main/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/home/kai/wsnpr/tinyos-main/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/home/kai/wsnpr/tinyos-main/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/home/kai/wsnpr/tinyos-main/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="RssiBaseC" loc="4:RssiBaseC.nc">
      <documentation loc="32:../RssiDemoMessages.h">
        <short>&#10; </short>
        <long>&#10; @author Dimas Abreu Dutra&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BaseStationC" loc="77:../InterceptBase/BaseStationC.nc">
      <documentation loc="41:../InterceptBase/BaseStationC.nc">
        <short>&#10; The TinyOS 2.x base station that forwards packets between the UART&#10; and radio.It replaces the GenericBase of TinyOS 1.0 and the&#10; TOSBase of TinyOS 1.1.</short>
        <long>&#10; The TinyOS 2.x base station that forwards packets between the UART&#10; and radio.It replaces the GenericBase of TinyOS 1.0 and the&#10; TOSBase of TinyOS 1.1.&#10;&#10; &#60;p>On the serial link, BaseStation sends and receives simple active&#10; messages (not particular radio packets): on the radio link, it&#10; sends radio active messages, whose format depends on the network&#10; stack being used. BaseStation will copy its compiled-in group ID to&#10; messages moving from the serial link to the radio, and will filter&#10; out incoming radio messages that do not contain that group ID.&#60;/p>&#10;&#10; &#60;p>BaseStation includes queues in both directions, with a guarantee&#10; that once a message enters a queue, it will eventually leave on the&#10; other interface. The queues allow the BaseStation to handle load&#10; spikes.&#60;/p>&#10;&#10; &#60;p>BaseStation acknowledges a message arriving over the serial link&#10; only if that message was successfully enqueued for delivery to the&#10; radio link.&#60;/p>&#10;&#10; &#60;p>The LEDS are programmed to toggle as follows:&#60;/p>&#10; &#60;ul>&#10; &#60;li>&#60;b>RED Toggle:&#60;/b>: Message bridged from serial to radio&#60;/li>&#10; &#60;li>&#60;b>GREEN Toggle:&#60;/b> Message bridged from radio to serial&#60;/li>&#10; &#60;li>&#60;b>YELLOW/BLUE Toggle:&#60;/b> Dropped message due to queue overflow in either direction&#60;/li>&#10; &#60;/ul>&#10;&#10; @author Phil Buonadonna&#10; @author Gilman Tolle&#10; @author David Gay&#10; @author Philip Levis&#10; @author Dimas Abreu Dutra&#10; @date January 29 2008&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BaseStationP" loc="58:../InterceptBase/BaseStationP.nc" safe="">
      <documentation loc="71:/home/kai/wsnpr/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:/home/kai/wsnpr/tinyos-main/tos/system/LedsC.nc">
      <documentation loc="34:/home/kai/wsnpr/tinyos-main/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/home/kai/wsnpr/tinyos-main/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/home/kai/wsnpr/tinyos-main/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="39(HplMsp430GeneralIOC.P10):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="39(HplMsp430GeneralIOC.P11):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="39(HplMsp430GeneralIOC.P12):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="39(HplMsp430GeneralIOC.P13):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="39(HplMsp430GeneralIOC.P14):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="39(HplMsp430GeneralIOC.P15):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="39(HplMsp430GeneralIOC.P16):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="39(HplMsp430GeneralIOC.P17):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="39(HplMsp430GeneralIOC.P20):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="39(HplMsp430GeneralIOC.P21):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="39(HplMsp430GeneralIOC.P22):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="39(HplMsp430GeneralIOC.P23):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="39(HplMsp430GeneralIOC.P24):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="39(HplMsp430GeneralIOC.P25):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="39(HplMsp430GeneralIOC.P26):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="39(HplMsp430GeneralIOC.P27):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="39(HplMsp430GeneralIOC.P30):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="39(HplMsp430GeneralIOC.P31):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="39(HplMsp430GeneralIOC.P32):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="39(HplMsp430GeneralIOC.P33):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="39(HplMsp430GeneralIOC.P34):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="39(HplMsp430GeneralIOC.P35):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="39(HplMsp430GeneralIOC.P36):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="39(HplMsp430GeneralIOC.P37):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="39(HplMsp430GeneralIOC.P40):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="39(HplMsp430GeneralIOC.P41):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="39(HplMsp430GeneralIOC.P42):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="39(HplMsp430GeneralIOC.P43):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="39(HplMsp430GeneralIOC.P44):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="39(HplMsp430GeneralIOC.P45):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="39(HplMsp430GeneralIOC.P46):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="39(HplMsp430GeneralIOC.P47):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="39(HplMsp430GeneralIOC.P50):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="39(HplMsp430GeneralIOC.P51):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="39(HplMsp430GeneralIOC.P52):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="39(HplMsp430GeneralIOC.P53):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="39(HplMsp430GeneralIOC.P54):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="39(HplMsp430GeneralIOC.P55):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="39(HplMsp430GeneralIOC.P56):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="39(HplMsp430GeneralIOC.P57):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="39(HplMsp430GeneralIOC.P60):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="39(HplMsp430GeneralIOC.P61):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="39(HplMsp430GeneralIOC.P62):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="39(HplMsp430GeneralIOC.P63):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="39(HplMsp430GeneralIOC.P64):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="39(HplMsp430GeneralIOC.P65):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="39(HplMsp430GeneralIOC.P66):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="39(HplMsp430GeneralIOC.P67):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="59:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/ActiveMessageC.nc">
      <documentation loc="49:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the Telos platform.</short>
        <long>&#10;&#10; The Active Message layer on the Telos platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.9 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="40(AlarmMultiplexC.Alarm):/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="32:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f929c8d3020"/>
            <typename><typedef-ref name="T32khz" ref="0x7f929c8d3378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="41:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Counter32khz32C.nc">
      <documentation loc="33:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Counter32khz32C.nc">
        <short>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f929c8d3020"/>
            <typename><typedef-ref name="T32khz" ref="0x7f929c8d3378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C.Transform" loc="54(Counter32khz32C.Transform):/home/kai/wsnpr/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/kai/wsnpr/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f929c8d3020"/>
            <typename><typedef-ref name="T32khz" ref="0x7f929c8d3378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f929d8b1020"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f929c8d3020"/>
            <typename><typedef-ref name="T32khz" ref="0x7f929c8d3378"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform):/home/kai/wsnpr/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/home/kai/wsnpr/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f929c8d3020"/>
            <typename><typedef-ref name="T32khz" ref="0x7f929c8d3378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f929d8b1020"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f929c8d3020"/>
            <typename><typedef-ref name="T32khz" ref="0x7f929c8d3378"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="40:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="32:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420PinsC.CCAM" loc="42(HplCC2420PinsC.CCAM):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.CSNM" loc="42(HplCC2420PinsC.CSNM):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOM" loc="42(HplCC2420PinsC.FIFOM):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOPM" loc="42(HplCC2420PinsC.FIFOPM):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.RSTNM" loc="42(HplCC2420PinsC.RSTNM):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.SFDM" loc="42(HplCC2420PinsC.SFDM):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.VRENM" loc="42(HplCC2420PinsC.VRENM):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="40:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="38(HplCC2420InterruptsC.CaptureSFDC):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/GpioCaptureC.nc">
      <documentation loc="33:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430InterruptC" loc="39:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <documentation loc="33:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for GPIO interrupts.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptP" loc="36:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc" safe="">
      <documentation loc="33:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptCCAC" loc="43(HplCC2420InterruptsC.InterruptCCAC):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="43(HplCC2420InterruptsC.InterruptFIFOPC):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):/home/kai/wsnpr/tinyos-main/tos/system/StateC.nc">
      <documentation loc="32:/home/kai/wsnpr/tinyos-main/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:/home/kai/wsnpr/tinyos-main/tos/system/StateImplC.nc">
      <documentation loc="32:/home/kai/wsnpr/tinyos-main/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:/home/kai/wsnpr/tinyos-main/tos/system/StateImplP.nc" safe="">
      <documentation loc="32:/home/kai/wsnpr/tinyos-main/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="40(CC2420SpiWireC.HplCC2420SpiC):/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC" loc="79(CC2420SpiWireC.HplCC2420SpiC.SpiC):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <instance number="0">
        <component-ref qname="Msp430Spi0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P" loc="71:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <documentation loc="66:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P.SpiP" loc="73(Msp430SpiNoDma0P.SpiP):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <documentation loc="66:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430SpiNoDmaP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart0C" loc="74:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <documentation loc="31:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart0P" loc="74:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0P.nc" safe="">
      <documentation loc="62:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
        <short>&#10; Implementation of USART0 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART0 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @author: Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10; @version $Revision: 1.8 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC" loc="39(CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <documentation loc="32:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P" loc="37:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <documentation loc="32:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.UsartShareP" loc="37(Msp430UsartShare0P.UsartShareP):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC" loc="89(Msp430UsartShare0P.ArbiterC):/home/kai/wsnpr/tinyos-main/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/home/kai/wsnpr/tinyos-main/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart0.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Queue" loc="42(Msp430UsartShare0P.ArbiterC.Queue):/home/kai/wsnpr/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Arbiter" loc="52(Msp430UsartShare0P.ArbiterC.Arbiter):/home/kai/wsnpr/tinyos-main/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/kai/wsnpr/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430I2C0C" loc="2:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <configuration/>
    </component>
    <component qname="HplMsp430I2C0P" loc="37:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C0P.nc" safe="">
      <documentation loc="32:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-24 05:32:31 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/home/kai/wsnpr/tinyos-main/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/home/kai/wsnpr/tinyos-main/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="11:/home/kai/wsnpr/tinyos-main/tos/chips/ds2411/LocalIeeeEui64C.nc">
      <configuration/>
    </component>
    <component qname="LocalIeeeEui64P" loc="3:/home/kai/wsnpr/tinyos-main/tos/chips/ds2411/LocalIeeeEui64P.nc">
      <module/>
    </component>
    <component qname="Ds2411C" loc="7:/home/kai/wsnpr/tinyos-main/tos/chips/ds2411/Ds2411C.nc">
      <configuration/>
    </component>
    <component qname="Ds2411P" loc="9:/home/kai/wsnpr/tinyos-main/tos/chips/ds2411/Ds2411P.nc">
      <module/>
    </component>
    <component qname="OneWireMasterC" loc="6:/home/kai/wsnpr/tinyos-main/tos/lib/onewire/OneWireMasterC.nc">
      <documentation loc="1:/home/kai/wsnpr/tinyos-main/tos/lib/onewire/OneWireMasterC.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="OneWireMasterP" loc="9:/home/kai/wsnpr/tinyos-main/tos/lib/onewire/OneWireMasterP.nc">
      <documentation loc="2:/home/kai/wsnpr/tinyos-main/tos/lib/onewire/OneWireMasterP.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10; Only supports one device on the 1-wire bus.</short>
      </documentation>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="39:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <documentation loc="33:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/BusyWaitMicroC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BusyWaitMicroC.BusyWaitCounterC" loc="52(BusyWaitMicroC.BusyWaitCounterC):/home/kai/wsnpr/tinyos-main/tos/lib/timer/BusyWaitCounterC.nc">
      <documentation loc="36:/home/kai/wsnpr/tinyos-main/tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BusyWaitCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f929c8d3788"/>
            <typename><typedef-ref name="TMicro" ref="0x7f929c8d3ae0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430CounterMicroC" loc="44:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <documentation loc="34:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
        <short>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.</short>
        <long>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.   If your base clock is in units of binary hertz then 1 uis, decimal&#10; hertz it will be 1us.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430CounterMicroC.Counter" loc="42(Msp430CounterMicroC.Counter):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f929c8d3788"/>
            <typename><typedef-ref name="TMicro" ref="0x7f929c8d3ae0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplDs2411C" loc="1:/home/kai/wsnpr/tinyos-main/tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <configuration/>
    </component>
    <component qname="HplDs2411C.MspGpio" loc="42(HplDs2411C.MspGpio):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="Ds2411PowerControlC" loc="12:/home/kai/wsnpr/tinyos-main/tos/chips/ds2411/Ds2411PowerControlC.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):/home/kai/wsnpr/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/kai/wsnpr/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f929c8d3020"/>
            <typename><typedef-ref name="T32khz" ref="0x7f929c8d3378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC" loc="43:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f929c8d3020"/>
            <typename><typedef-ref name="T32khz" ref="0x7f929c8d3378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):/home/kai/wsnpr/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/kai/wsnpr/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f929c8d4828"/>
            <typename><typedef-ref name="TMilli" ref="0x7f929c8d4b80"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f929d8b1020"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f929c8d3020"/>
            <typename><typedef-ref name="T32khz" ref="0x7f929c8d3378"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f929d8b1020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):/home/kai/wsnpr/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/home/kai/wsnpr/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f929c8d4828"/>
            <typename><typedef-ref name="TMilli" ref="0x7f929c8d4b80"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f929d8b1020"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f929c8d3020"/>
            <typename><typedef-ref name="T32khz" ref="0x7f929c8d3378"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/home/kai/wsnpr/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/home/kai/wsnpr/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f929c8d4828"/>
            <typename><typedef-ref name="TMilli" ref="0x7f929c8d4b80"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/home/kai/wsnpr/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/home/kai/wsnpr/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f929c8d4828"/>
            <typename><typedef-ref name="TMilli" ref="0x7f929c8d4b80"/></typename>
          </type-tag>
          <value cst="I:5">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/home/kai/wsnpr/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/kai/wsnpr/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f929c8d4828"/>
            <typename><typedef-ref name="TMilli" ref="0x7f929c8d4b80"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):/home/kai/wsnpr/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/kai/wsnpr/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/home/kai/wsnpr/tinyos-main/tos/system/TimerMilliP.nc">
      <documentation loc="34:/home/kai/wsnpr/tinyos-main/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:/home/kai/wsnpr/tinyos-main/tos/system/RandomC.nc">
      <documentation loc="33:/home/kai/wsnpr/tinyos-main/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/home/kai/wsnpr/tinyos-main/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/home/kai/wsnpr/tinyos-main/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):/home/kai/wsnpr/tinyos-main/tos/system/StateC.nc">
      <documentation loc="32:/home/kai/wsnpr/tinyos-main/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):/home/kai/wsnpr/tinyos-main/tos/system/StateC.nc">
      <documentation loc="32:/home/kai/wsnpr/tinyos-main/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):/home/kai/wsnpr/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):/home/kai/wsnpr/tinyos-main/tos/system/StateC.nc">
      <documentation loc="32:/home/kai/wsnpr/tinyos-main/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:/home/kai/wsnpr/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:/home/kai/wsnpr/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:/home/kai/wsnpr/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:/home/kai/wsnpr/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:/home/kai/wsnpr/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="2:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC" loc="42(PlatformSerialC.UartC):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <documentation loc="31:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Uart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P" loc="39:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <documentation loc="32:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P.UartP" loc="41(Msp430Uart1P.UartP):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <documentation loc="32:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart1C" loc="74:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <documentation loc="31:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart1P" loc="73:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <documentation loc="62:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
        <short>&#10; Implementation of USART1 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART1 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @version $Revision: 1.7 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Counter32khz16C" loc="41:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Counter32khz16C.nc">
      <documentation loc="33:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Counter32khz16C.nc">
        <short>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC.UsartC" loc="40(PlatformSerialC.UartC.UsartC):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <documentation loc="32:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P" loc="38:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <documentation loc="32:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.UsartShareP" loc="37(Msp430UsartShare1P.UsartShareP):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC" loc="89(Msp430UsartShare1P.ArbiterC):/home/kai/wsnpr/tinyos-main/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/home/kai/wsnpr/tinyos-main/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart1.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Queue" loc="42(Msp430UsartShare1P.ArbiterC.Queue):/home/kai/wsnpr/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <instance number="2">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Arbiter" loc="52(Msp430UsartShare1P.ArbiterC.Arbiter):/home/kai/wsnpr/tinyos-main/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/kai/wsnpr/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC" loc="67(Msp430UsartShare1P.PowerManagerC):/home/kai/wsnpr/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:/home/kai/wsnpr/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC.PowerManager" loc="58(Msp430UsartShare1P.PowerManagerC.PowerManager):/home/kai/wsnpr/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:/home/kai/wsnpr/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="TelosSerialP" loc="1:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/TelosSerialP.nc">
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:/home/kai/wsnpr/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RssiBaseAppC.LaserTimer" loc="44(RssiBaseAppC.LaserTimer):/home/kai/wsnpr/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/kai/wsnpr/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RssiBaseAppC.LaserSensor" loc="40(RssiBaseAppC.LaserSensor):/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/chips/s1087/HamamatsuS1087ParC.nc">
      <documentation loc="32:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/chips/s1087/HamamatsuS1087ParC.nc">
        <short>&#10; HamamatsuS1087ParC is a driver for a photosynthetically-active&#10; radiation sensor available on the telosb platform.</short>
        <long>&#10; HamamatsuS1087ParC is a driver for a photosynthetically-active&#10; radiation sensor available on the telosb platform. &#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HamamatsuS1087ParC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RssiBaseAppC.LaserSensor.AdcReadClientC" loc="47(RssiBaseAppC.LaserSensor.AdcReadClientC):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/AdcReadClientC.nc">
      <instance number="0">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AdcP" loc="36:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/AdcP.nc" safe="">
      <module/>
    </component>
    <component qname="RssiBaseAppC.LaserSensor.AdcReadClientC.Msp430AdcClient" loc="43(RssiBaseAppC.LaserSensor.AdcReadClientC.Msp430AdcClient):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <documentation loc="33:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
        <short> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.</short>
        <long> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.&#10; Reference voltage is enabled automatically as required by the configuration.&#10; &#10; @author Jan Hauer &#10;&#10; @see  Please refer to the README.txt and TEP 101 for more information about&#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Adc12ClientAutoRVGC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Adc12P" loc="37:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <configuration/>
    </component>
    <component qname="Msp430Adc12ImplP" loc="37:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc" safe="">
      <module/>
    </component>
    <component qname="HplAdc12P" loc="45:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/HplAdc12P.nc">
      <documentation loc="36:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/HplAdc12P.nc">
        <short>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.</short>
        <long>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.&#10;&#10; @author Jan Hauer&#10; @see  Please refer to TEP 101 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Msp430Adc12P.Arbiter" loc="83(Msp430Adc12P.Arbiter):/home/kai/wsnpr/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc">
      <documentation loc="62:/home/kai/wsnpr/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleRoundRobinArbiterC"/>
        <arguments>
          <value cst="S:Msp430Adc12C.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Adc12P.Arbiter.Queue" loc="42(Msp430Adc12P.Arbiter.Queue):/home/kai/wsnpr/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="33:/home/kai/wsnpr/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430Adc12P.Arbiter.Arbiter" loc="49(Msp430Adc12P.Arbiter.Arbiter):/home/kai/wsnpr/tinyos-main/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/home/kai/wsnpr/tinyos-main/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430RefVoltArbiterP" loc="50:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <documentation loc="36:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
        <short> &#10; This component is meant to intercept requests to the &#60;code>Resource&#60;/code>&#10; interface on their way to the adc arbiter.</short>
        <long> &#10; This component is meant to intercept requests to the &#60;code>Resource&#60;/code>&#10; interface on their way to the adc arbiter. It checks whether the client's&#10; adc configuration requires the internal reference voltage generator of the&#10; MSP430 to be enabled during the conversion by inspecting the client's&#10; configuration data (using the &#60;code>AdcConfigure&#60;/code> interface). If so it&#10; makes sure that Resource.granted() is held back until the reference voltage&#10; is stable. Clients SHOULD NOT wire to &#60;code>Msp430RefVoltArbiterP&#60;/code> but&#10; to the Resource interface provided by&#10; &#60;code>Msp430Adc12ClientAutoRVGC&#60;/code>.&#10; &#10; @author Jan Hauer&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430RefVoltGeneratorP" loc="36:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <module/>
    </component>
    <component qname="Msp430RefVoltArbiterImplP" loc="36:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <module/>
    </component>
    <component qname="Msp430RefVoltArbiterP.SwitchOnDelayTimer" loc="44(Msp430RefVoltArbiterP.SwitchOnDelayTimer):/home/kai/wsnpr/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/kai/wsnpr/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430RefVoltArbiterP.SwitchOffDelayTimer" loc="44(Msp430RefVoltArbiterP.SwitchOffDelayTimer):/home/kai/wsnpr/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/kai/wsnpr/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430RefVoltArbiterP.SwitchOffSettleTimer" loc="44(Msp430RefVoltArbiterP.SwitchOffSettleTimer):/home/kai/wsnpr/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/kai/wsnpr/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RssiBaseAppC.LaserSensor.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC" loc="42(RssiBaseAppC.LaserSensor.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <documentation loc="33:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
        <short> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.</short>
        <long> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.&#10; (nesC optimizes all of its code away).&#10;&#10; @author: Jan Hauer&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Adc12ConfAlertC"/>
      </instance>
      <module/>
    </component>
    <component qname="RssiBaseAppC.LaserSensor.AdcReadStreamClientC" loc="47(RssiBaseAppC.LaserSensor.AdcReadStreamClientC):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <documentation loc="36:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
        <short> &#10; This component virtualizes the HIL of ADC12 on MSP430.</short>
        <long> &#10; This component virtualizes the HIL of ADC12 on MSP430. A client must wire&#10; &#60;code>AdcConfigure&#60;/code> to a component that returns the client's adc&#10; configuration data.&#10;&#10; @author Jan Hauer &#10; @see  Please refer to the README.txt and TEP 101 for more information about &#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadStreamClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcStreamP" loc="19:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <documentation loc="10:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/WireAdcStreamP.nc">
        <short>&#10; Support component for AdcReadStreamClientC.</short>
        <long>&#10; Support component for AdcReadStreamClientC.&#10;&#10; @author David Gay&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AdcStreamP" loc="46:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/AdcStreamP.nc" safe="">
      <documentation loc="39:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/AdcStreamP.nc">
        <short>&#10; Convert MSP430 HAL A/D interface to the HIL interfaces (adapted atmega code).</short>
        <long>&#10; Convert MSP430 HAL A/D interface to the HIL interfaces (adapted atmega code).&#10; @author David Gay&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="WireAdcStreamP.Alarm" loc="41(WireAdcStreamP.Alarm):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcStreamP.Alarm.AlarmFrom" loc="41(WireAdcStreamP.Alarm.AlarmFrom):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer" loc="37(WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm" loc="43(WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f929c8d3020"/>
            <typename><typedef-ref name="T32khz" ref="0x7f929c8d3378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="WireAdcStreamP.Alarm.Transform" loc="51(WireAdcStreamP.Alarm.Transform):/home/kai/wsnpr/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/home/kai/wsnpr/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f929c8d4828"/>
            <typename><typedef-ref name="TMilli" ref="0x7f929c8d4b80"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f929d8b1020"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f929c8d3020"/>
            <typename><typedef-ref name="T32khz" ref="0x7f929c8d3378"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="WireAdcStreamP.ArbitrateReadStream" loc="23(WireAdcStreamP.ArbitrateReadStream):/home/kai/wsnpr/tinyos-main/tos/system/ArbitratedReadStreamC.nc">
      <documentation loc="10:/home/kai/wsnpr/tinyos-main/tos/system/ArbitratedReadStreamC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using&#10; ArbitratedReadStreamC in a safe way.&#10;&#10; @param width_t Width of the underlying ReadStream interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbitratedReadStreamC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RssiBaseAppC.LaserSensor.AdcReadStreamClientC.Msp430AdcClient" loc="43(RssiBaseAppC.LaserSensor.AdcReadStreamClientC.Msp430AdcClient):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <documentation loc="33:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
        <short> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.</short>
        <long> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.&#10; Reference voltage is enabled automatically as required by the configuration.&#10; &#10; @author Jan Hauer &#10;&#10; @see  Please refer to the README.txt and TEP 101 for more information about&#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Adc12ClientAutoRVGC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RssiBaseAppC.LaserSensor.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC" loc="42(RssiBaseAppC.LaserSensor.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC):/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <documentation loc="33:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
        <short> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.</short>
        <long> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.&#10; (nesC optimizes all of its code away).&#10;&#10; @author: Jan Hauer&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Adc12ConfAlertC"/>
      </instance>
      <module/>
    </component>
    <component qname="HamamatsuS1087ParP" loc="42:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/chips/s1087/HamamatsuS1087ParP.nc">
      <documentation loc="34:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/chips/s1087/HamamatsuS1087ParP.nc">
        <short>&#10; HamamatsuS1087ParP is a driver for a photosynthetically-active&#10; radiation sensor available on the telosb platform.</short>
        <long>&#10; HamamatsuS1087ParP is a driver for a photosynthetically-active&#10; radiation sensor available on the telosb platform. &#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Msp430TimerP" loc="39:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x7f929c9f6d08" loc="40:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x7f929c9f30c8" loc="41:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x7f929c9f3450" loc="42:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x7f929c9f37a8" loc="43:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x7f929c9f3b00" loc="44:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x7f929c9f3e50" loc="45:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x7f929c9f21e0" loc="46:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x7f929c9f2548" loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x7f929c9f28f8" loc="48:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f929cf6b1d0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="39:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="33:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x7f929c9b8940" loc="40:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x7f929c9b8cf0" loc="41:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="39:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="2:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x7f929c721998" loc="40:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x7f929c721d20" loc="41:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x7f929c720108" loc="42:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x7f929c720490" loc="43:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x7f929c7207e0" loc="44:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="40:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="32:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="41:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Alarm32khz32C.nc" abstract="">
      <documentation loc="33:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="43:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f929c3bb7d8" loc="43:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f929c3bb7d8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f929c37a370" loc="42:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f929c37a370"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/home/kai/wsnpr/tinyos-main/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/kai/wsnpr/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f929c381cf8" loc="55:/home/kai/wsnpr/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f929c381cf8"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f929c3674a0" loc="56:/home/kai/wsnpr/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f929c3674a0"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f929c367868" loc="57:/home/kai/wsnpr/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f929c367868"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f929c365020" loc="58:/home/kai/wsnpr/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f929c365020"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f929c3653c8" loc="59:/home/kai/wsnpr/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7f929c365b58" loc="60:/home/kai/wsnpr/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7f929c365b58"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:/home/kai/wsnpr/tinyos-main/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/kai/wsnpr/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f929c389b00" loc="52:/home/kai/wsnpr/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f929c389b00"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f929c3452b0" loc="53:/home/kai/wsnpr/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f929c3452b0"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f929c345678" loc="54:/home/kai/wsnpr/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f929c345678"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f929c345df0" loc="55:/home/kai/wsnpr/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f929c345df0"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f929c3441d8" loc="56:/home/kai/wsnpr/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="GpioCaptureC" loc="38:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="33:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430InterruptC" loc="43:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430InterruptC.nc" abstract="" safe="">
      <documentation loc="33:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:/home/kai/wsnpr/tinyos-main/tos/system/StateC.nc" abstract="">
      <documentation loc="32:/home/kai/wsnpr/tinyos-main/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="40:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Spi0C" loc="79:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDmaP" loc="73:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc" abstract="">
      <documentation loc="66:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart0C" loc="39:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc" abstract="">
      <documentation loc="32:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="89:/home/kai/wsnpr/tinyos-main/tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:/home/kai/wsnpr/tinyos-main/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f929beec998" loc="89:/home/kai/wsnpr/tinyos-main/tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/home/kai/wsnpr/tinyos-main/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7f929bedd510" loc="42:/home/kai/wsnpr/tinyos-main/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:/home/kai/wsnpr/tinyos-main/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/home/kai/wsnpr/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7f929bec4a90" loc="52:/home/kai/wsnpr/tinyos-main/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="BusyWaitCounterC" loc="52:/home/kai/wsnpr/tinyos-main/tos/lib/timer/BusyWaitCounterC.nc" abstract="">
      <documentation loc="36:/home/kai/wsnpr/tinyos-main/tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f929bc99c48" loc="52:/home/kai/wsnpr/tinyos-main/tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f929bc99c48"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f929bc96398" loc="52:/home/kai/wsnpr/tinyos-main/tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f929bc96398"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/home/kai/wsnpr/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/home/kai/wsnpr/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f929ba84110" loc="46:/home/kai/wsnpr/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f929ba84110"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmMilli32C" loc="41:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/home/kai/wsnpr/tinyos-main/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/home/kai/wsnpr/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f929ba3b068" loc="46:/home/kai/wsnpr/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f929ba3b068"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/home/kai/wsnpr/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/home/kai/wsnpr/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f929ba0a4c0" loc="46:/home/kai/wsnpr/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f929ba0a4c0"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7f929ba0a7d0" loc="46:/home/kai/wsnpr/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/home/kai/wsnpr/tinyos-main/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/home/kai/wsnpr/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:/home/kai/wsnpr/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:/home/kai/wsnpr/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Uart1C" loc="42:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc" abstract="">
      <documentation loc="31:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UartP" loc="41:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc" abstract="">
      <documentation loc="32:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart1C" loc="40:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc" abstract="">
      <documentation loc="32:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:/home/kai/wsnpr/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/home/kai/wsnpr/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:/home/kai/wsnpr/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:/home/kai/wsnpr/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HamamatsuS1087ParC" loc="40:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/chips/s1087/HamamatsuS1087ParC.nc" abstract="">
      <documentation loc="32:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/chips/s1087/HamamatsuS1087ParC.nc">
        <short>&#10; HamamatsuS1087ParC is a driver for a photosynthetically-active&#10; radiation sensor available on the telosb platform.</short>
        <long>&#10; HamamatsuS1087ParC is a driver for a photosynthetically-active&#10; radiation sensor available on the telosb platform. &#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AdcReadClientC" loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/AdcReadClientC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Adc12ClientAutoRVGC" loc="43:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc" abstract="">
      <documentation loc="33:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
        <short> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.</short>
        <long> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.&#10; Reference voltage is enabled automatically as required by the configuration.&#10; &#10; @author Jan Hauer &#10;&#10; @see  Please refer to the README.txt and TEP 101 for more information about&#10; this component and its intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleRoundRobinArbiterC" loc="83:/home/kai/wsnpr/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc" abstract="">
      <documentation loc="62:/home/kai/wsnpr/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f929b2761c8" loc="83:/home/kai/wsnpr/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc">
          <component-ref qname="SimpleRoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="42:/home/kai/wsnpr/tinyos-main/tos/system/RoundRobinResourceQueueC.nc" abstract="" safe="">
      <documentation loc="33:/home/kai/wsnpr/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x7f929b271b08" loc="42:/home/kai/wsnpr/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/home/kai/wsnpr/tinyos-main/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/home/kai/wsnpr/tinyos-main/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Adc12ConfAlertC" loc="42:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc" abstract="">
      <documentation loc="33:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
        <short> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.</short>
        <long> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.&#10; (nesC optimizes all of its code away).&#10;&#10; @author: Jan Hauer&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AdcReadStreamClientC" loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/AdcReadStreamClientC.nc" abstract="">
      <documentation loc="36:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
        <short> &#10; This component virtualizes the HIL of ADC12 on MSP430.</short>
        <long> &#10; This component virtualizes the HIL of ADC12 on MSP430. A client must wire&#10; &#60;code>AdcConfigure&#60;/code> to a component that returns the client's adc&#10; configuration data.&#10;&#10; @author Jan Hauer &#10; @see  Please refer to the README.txt and TEP 101 for more information about &#10; this component and its intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ArbitratedReadStreamC" loc="23:/home/kai/wsnpr/tinyos-main/tos/system/ArbitratedReadStreamC.nc" abstract="">
      <documentation loc="10:/home/kai/wsnpr/tinyos-main/tos/system/ArbitratedReadStreamC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using&#10; ArbitratedReadStreamC in a safe way.&#10;&#10; @param width_t Width of the underlying ReadStream interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <constant name="nClients" ref="0x7f929b0afc10" loc="23:/home/kai/wsnpr/tinyos-main/tos/system/ArbitratedReadStreamC.nc">
          <component-ref qname="ArbitratedReadStreamC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
          </type-int>
        </constant>
        <typedef name="val_t" ref="0x7f929b0ac020" loc="23:/home/kai/wsnpr/tinyos-main/tos/system/ArbitratedReadStreamC.nc">
          <component-ref qname="ArbitratedReadStreamC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f929b0ac020"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7f929ca9ea40" loc="58:/home/kai/wsnpr/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7f929ca9ea40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f929ca9ed90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f929caa0618" loc="57:/home/kai/wsnpr/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f929caa0618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f929caa0968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f929caa1980" loc="42:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f929caa1980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f929caa1cd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7f929ca99878" loc="6:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x7f929ca99878"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f929ca99bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f929ca9cae0" loc="4:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f929ca9cae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f929ca9ce30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x7f929ca991d8" loc="5:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7f929ca991d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f929ca99528"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x7f929ca98020" loc="7:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x7f929ca98020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f929ca98370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f929ca9b888" loc="2:/home/kai/wsnpr/tinyos-main/tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f929ca9b888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f929ca9bbd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x7f929ca7c0e8" loc="39:/home/kai/wsnpr/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7f929ca7c0e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f929ca7c438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7f929ca712b8" loc="40:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f929ca712b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f929ca781a8"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f929ca71790"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f929ca71918"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f929ca71aa0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f929ca71608"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f929ca71c28"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f929ca71db0"/>
        <function-ref name="initClocks" scoped="" ref="0x7f929ca78020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f929ca79020" loc="39:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f929ca79020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f929ca79370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7f929ca613c0" loc="46:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f929ca613c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f929ca60330"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f929ca61898"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f929ca61a20"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f929ca61ba8"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f929ca61710"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f929ca61d30"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f929ca60020"/>
        <function-ref name="initClocks" scoped="" ref="0x7f929ca601a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7f929ca60660" loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f929ca60660"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f929ca609b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f929ca63d10" loc="45:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f929ca63d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f929ca610a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x7f929ca1f060" loc="42:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x7f929ca1f060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f929ca1f3b0"/>
        <function-ref name="getControl" scoped="" ref="0x7f929ca1f538"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f929ca1f6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f929ca1f848"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f929ca1f9d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f929ca1fb58"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f929ca1fce0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f929ca1fe68"/>
        <function-ref name="setControl" scoped="" ref="0x7f929ca1e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x7f929ca0e060" loc="51:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x7f929ca0e060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f929ca0e3b0"/>
        <function-ref name="getControl" scoped="" ref="0x7f929ca0e538"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f929ca0e6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f929ca0e848"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f929ca0e9d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f929ca0eb58"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f929ca0ece0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f929ca0ee68"/>
        <function-ref name="setControl" scoped="" ref="0x7f929ca0d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x7f929ca17868" loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x7f929ca17868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f929ca17bb8"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f929ca17d40"/>
        <function-ref name="captured" scoped="" ref="0x7f929ca16020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f929ca161a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f929ca16330"/>
        <function-ref name="setEdge" scoped="" ref="0x7f929ca164b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x7f929c9fb3d0" loc="68:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x7f929c9fb3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f929c9fb720"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f929c9fb8a8"/>
        <function-ref name="captured" scoped="" ref="0x7f929c9fba30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f929c9fbbb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f929c9fbd40"/>
        <function-ref name="setEdge" scoped="" ref="0x7f929c9fa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x7f929ca1d0c0" loc="44:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x7f929ca1d0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f929ca1d410"/>
        <function-ref name="setEvent" scoped="" ref="0x7f929ca1d598"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f929ca1d720"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f929ca1d8a8"/>
        <function-ref name="fired" scoped="" ref="0x7f929ca1da30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x7f929ca03868" loc="61:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x7f929ca03868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f929ca03bb8"/>
        <function-ref name="setEvent" scoped="" ref="0x7f929ca03d40"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f929ca02020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f929ca021a8"/>
        <function-ref name="fired" scoped="" ref="0x7f929ca02330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x7f929c9f83d0" loc="71:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x7f929c9f83d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f929c9f8720"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f929c9f88a8"/>
        <function-ref name="captured" scoped="" ref="0x7f929c9f8a30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f929c9f8bb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f929c9f8d40"/>
        <function-ref name="setEdge" scoped="" ref="0x7f929c9f7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x7f929ca09120" loc="55:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x7f929ca09120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f929ca09470"/>
        <function-ref name="getControl" scoped="" ref="0x7f929ca095f8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f929ca09780"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f929ca09908"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f929ca09a90"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f929ca09c18"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f929ca09da0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f929ca08020"/>
        <function-ref name="setControl" scoped="" ref="0x7f929ca081a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x7f929ca20818" loc="40:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x7f929ca20818"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f929ca20b68"/>
        <function-ref name="getControl" scoped="" ref="0x7f929ca20cf0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f929ca20e78"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f929ca27030"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f929ca271b8"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f929ca27340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f929ca274c8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f929ca27650"/>
        <function-ref name="setControl" scoped="" ref="0x7f929ca277d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x7f929c9fd3d0" loc="66:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x7f929c9fd3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f929c9fd720"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f929c9fd8a8"/>
        <function-ref name="captured" scoped="" ref="0x7f929c9fda30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f929c9fdbb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f929c9fdd40"/>
        <function-ref name="setEdge" scoped="" ref="0x7f929c9fc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x7f929ca05d40" loc="59:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x7f929ca05d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f929ca040d8"/>
        <function-ref name="setEvent" scoped="" ref="0x7f929ca04260"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f929ca043e8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f929ca04570"/>
        <function-ref name="fired" scoped="" ref="0x7f929ca046f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x7f929ca0d400" loc="52:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x7f929ca0d400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f929ca0d850"/>
        <function-ref name="getControl" scoped="" ref="0x7f929ca0d9d8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f929ca0db60"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f929ca0dce8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f929ca0de70"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f929ca0c020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f929ca0c1a8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f929ca0c330"/>
        <function-ref name="setControl" scoped="" ref="0x7f929ca0c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x7f929ca16868" loc="48:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x7f929ca16868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f929ca16bb8"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f929ca16d40"/>
        <function-ref name="captured" scoped="" ref="0x7f929ca10020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f929ca101a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f929ca10330"/>
        <function-ref name="setEdge" scoped="" ref="0x7f929ca104b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x7f929c9fa3d0" loc="69:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x7f929c9fa3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f929c9fa720"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f929c9fa8a8"/>
        <function-ref name="captured" scoped="" ref="0x7f929c9faa30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f929c9fabb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f929c9fad40"/>
        <function-ref name="setEdge" scoped="" ref="0x7f929c9f9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x7f929ca0c898" loc="53:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x7f929ca0c898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f929ca0cbe8"/>
        <function-ref name="getControl" scoped="" ref="0x7f929ca0cd70"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f929ca0b020"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f929ca0b1a8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f929ca0b330"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f929ca0b4b8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f929ca0b640"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f929ca0b7c8"/>
        <function-ref name="setControl" scoped="" ref="0x7f929ca0b950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x7f929ca1dde0" loc="45:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x7f929ca1dde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f929ca1c170"/>
        <function-ref name="setEvent" scoped="" ref="0x7f929ca1c2f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f929ca1c480"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f929ca1c608"/>
        <function-ref name="fired" scoped="" ref="0x7f929ca1c790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x7f929ca28378" loc="39:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7f929ca28378"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f929ca286c8"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f929ca28850"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f929ca289d8"/>
        <function-ref name="get" scoped="" ref="0x7f929ca28b60"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f929ca28ce8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f929ca28e70"/>
        <function-ref name="getMode" scoped="" ref="0x7f929ca30020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f929ca301a8"/>
        <function-ref name="overflow" scoped="" ref="0x7f929ca30330"/>
        <function-ref name="setMode" scoped="" ref="0x7f929ca304b8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f929ca30640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x7f929ca026e0" loc="62:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x7f929ca026e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f929ca02a30"/>
        <function-ref name="setEvent" scoped="" ref="0x7f929ca02bb8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f929ca02d40"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f929ca01020"/>
        <function-ref name="fired" scoped="" ref="0x7f929ca011a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x7f929ca27bb8" loc="41:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x7f929ca27bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f929ca26020"/>
        <function-ref name="getControl" scoped="" ref="0x7f929ca261a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f929ca26330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f929ca264b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f929ca26640"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f929ca267c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f929ca26950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f929ca26ad8"/>
        <function-ref name="setControl" scoped="" ref="0x7f929ca26c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x7f929ca08588" loc="56:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x7f929ca08588"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f929ca088d8"/>
        <function-ref name="getControl" scoped="" ref="0x7f929ca08a60"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f929ca08be8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f929ca08d70"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f929ca07020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f929ca071a8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f929ca07330"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f929ca074b8"/>
        <function-ref name="setControl" scoped="" ref="0x7f929ca07640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x7f929ca11960" loc="46:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x7f929ca11960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f929ca11cb0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f929ca11e38"/>
        <function-ref name="captured" scoped="" ref="0x7f929ca17020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f929ca171a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f929ca17330"/>
        <function-ref name="setEdge" scoped="" ref="0x7f929ca174b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x7f929c9fc3d0" loc="67:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x7f929c9fc3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f929c9fc720"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f929c9fc8a8"/>
        <function-ref name="captured" scoped="" ref="0x7f929c9fca30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f929c9fcbb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f929c9fcd40"/>
        <function-ref name="setEdge" scoped="" ref="0x7f929c9fb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x7f929ca18378" loc="43:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x7f929ca18378"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f929ca186c8"/>
        <function-ref name="setEvent" scoped="" ref="0x7f929ca18850"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f929ca189d8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f929ca18b60"/>
        <function-ref name="fired" scoped="" ref="0x7f929ca18ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x7f929ca04aa8" loc="60:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x7f929ca04aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f929ca04df8"/>
        <function-ref name="setEvent" scoped="" ref="0x7f929ca03020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f929ca031a8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f929ca03330"/>
        <function-ref name="fired" scoped="" ref="0x7f929ca034b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x7f929c9f93d0" loc="70:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x7f929c9f93d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f929c9f9720"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f929c9f98a8"/>
        <function-ref name="captured" scoped="" ref="0x7f929c9f9a30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f929c9f9bb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f929c9f9d40"/>
        <function-ref name="setEdge" scoped="" ref="0x7f929c9f8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x7f929ca0bd30" loc="54:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x7f929ca0bd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f929ca0a0d8"/>
        <function-ref name="getControl" scoped="" ref="0x7f929ca0a260"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f929ca0a3e8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f929ca0a570"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f929ca0a6f8"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f929ca0a880"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f929ca0aa08"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f929ca0ab90"/>
        <function-ref name="setControl" scoped="" ref="0x7f929ca0ad18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x7f929ca10830" loc="50:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x7f929ca10830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f929ca10b80"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f929ca10d08"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f929ca0f020"/>
        <function-ref name="get" scoped="" ref="0x7f929ca0f1a8"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f929ca0f330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f929ca0f4b8"/>
        <function-ref name="getMode" scoped="" ref="0x7f929ca0f640"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f929ca0f7c8"/>
        <function-ref name="overflow" scoped="" ref="0x7f929ca0f950"/>
        <function-ref name="setMode" scoped="" ref="0x7f929ca0fad8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f929ca0fc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x7f929ca01558" loc="63:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x7f929ca01558"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f929ca018a8"/>
        <function-ref name="setEvent" scoped="" ref="0x7f929ca01a30"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f929ca01bb8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f929ca01d40"/>
        <function-ref name="fired" scoped="" ref="0x7f929ca00020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x7f929c9ff3d0" loc="65:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x7f929c9ff3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f929c9ff720"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f929c9ff8a8"/>
        <function-ref name="captured" scoped="" ref="0x7f929c9ffa30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f929c9ffbb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f929c9ffd40"/>
        <function-ref name="setEdge" scoped="" ref="0x7f929c9fd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x7f929ca003d0" loc="64:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x7f929ca003d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f929ca00920"/>
        <function-ref name="setEvent" scoped="" ref="0x7f929ca00aa8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f929ca00c30"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f929ca00db8"/>
        <function-ref name="fired" scoped="" ref="0x7f929c9ff020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x7f929ca05020" loc="58:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x7f929ca05020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f929ca05370"/>
        <function-ref name="setEvent" scoped="" ref="0x7f929ca054f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f929ca05680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f929ca05808"/>
        <function-ref name="fired" scoped="" ref="0x7f929ca05990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x7f929ca07a20" loc="57:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x7f929ca07a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f929ca07d70"/>
        <function-ref name="getControl" scoped="" ref="0x7f929ca06020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f929ca061a8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f929ca06330"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f929ca064b8"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f929ca06640"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f929ca067c8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f929ca06950"/>
        <function-ref name="setControl" scoped="" ref="0x7f929ca06ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7f929c9c2d18" loc="53:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7f929c9c2d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f929c9c10a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7f929c9c2700" loc="52:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f929c9c2700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f929c9c2a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7f929c9c1368" loc="54:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7f929c9c1368"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f929c9c16b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7f929c9c20c8" loc="51:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f929c9c20c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f929c9c2438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f929c9c4960" loc="50:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f929c9c4960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f929c9c4cb0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f929c9c4e38"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f929c9c3020"/>
        <function-ref name="get" scoped="" ref="0x7f929c9c31a8"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f929c9c3330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f929c9c34b8"/>
        <function-ref name="getMode" scoped="" ref="0x7f929c9c3640"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f929c9c37c8"/>
        <function-ref name="overflow" scoped="" ref="0x7f929c9c3950"/>
        <function-ref name="setMode" scoped="" ref="0x7f929c9c3ad8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f929c9c3c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7f929c9bb638" loc="53:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7f929c9bb638"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f929c9bb988"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7f929c9bb020" loc="52:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f929c9bb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f929c9bb370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7f929c9bbc50" loc="54:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7f929c9bbc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f929c9b9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7f929c9bc8a0" loc="51:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f929c9bc8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f929c9bcc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f929c9bd1e8" loc="50:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f929c9bd1e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f929c9bd538"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f929c9bd6c0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f929c9bd848"/>
        <function-ref name="get" scoped="" ref="0x7f929c9bd9d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f929c9bdb58"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f929c9bdce0"/>
        <function-ref name="getMode" scoped="" ref="0x7f929c9bde68"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f929c9bc020"/>
        <function-ref name="overflow" scoped="" ref="0x7f929c9bc1a8"/>
        <function-ref name="setMode" scoped="" ref="0x7f929c9bc330"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f929c9bc4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f929c972c58" loc="46:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f929c972c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f929c971020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f929c9711a8"/>
        <function-ref name="captured" scoped="" ref="0x7f929c971330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f929c9714b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f929c971640"/>
        <function-ref name="setEdge" scoped="" ref="0x7f929c9717c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f929c9b6c80" loc="44:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f929c9b6c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f929c973020"/>
        <function-ref name="getControl" scoped="" ref="0x7f929c9731a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f929c973330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f929c9734b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f929c973640"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f929c9737c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f929c973950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f929c973ad8"/>
        <function-ref name="setControl" scoped="" ref="0x7f929c973c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f929c96e100" loc="48:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f929c96e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f929c96e450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f929c972020" loc="45:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f929c972020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f929c972370"/>
        <function-ref name="setEvent" scoped="" ref="0x7f929c9724f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f929c972680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f929c972808"/>
        <function-ref name="fired" scoped="" ref="0x7f929c972990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f929c971a90" loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f929c971a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f929c971de0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f929c96f020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f929c96f1a8"/>
        <function-ref name="get" scoped="" ref="0x7f929c96f330"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f929c96f4b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f929c96f640"/>
        <function-ref name="getMode" scoped="" ref="0x7f929c96f7c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f929c96f950"/>
        <function-ref name="overflow" scoped="" ref="0x7f929c96fad8"/>
        <function-ref name="setMode" scoped="" ref="0x7f929c96fc60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f929c96fde8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f929c96ac58" loc="46:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f929c96ac58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f929c969020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f929c9691a8"/>
        <function-ref name="captured" scoped="" ref="0x7f929c969330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f929c9694b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f929c969640"/>
        <function-ref name="setEdge" scoped="" ref="0x7f929c9697c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f929c96cc80" loc="44:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f929c96cc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f929c96b020"/>
        <function-ref name="getControl" scoped="" ref="0x7f929c96b1a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f929c96b330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f929c96b4b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f929c96b640"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f929c96b7c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f929c96b950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f929c96bad8"/>
        <function-ref name="setControl" scoped="" ref="0x7f929c96bc60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f929c967100" loc="48:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f929c967100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f929c967450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f929c96a020" loc="45:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f929c96a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f929c96a370"/>
        <function-ref name="setEvent" scoped="" ref="0x7f929c96a4f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f929c96a680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f929c96a808"/>
        <function-ref name="fired" scoped="" ref="0x7f929c96a990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f929c969a90" loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f929c969a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f929c969de0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f929c968020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f929c9681a8"/>
        <function-ref name="get" scoped="" ref="0x7f929c968330"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f929c9684b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f929c968640"/>
        <function-ref name="getMode" scoped="" ref="0x7f929c9687c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f929c968950"/>
        <function-ref name="overflow" scoped="" ref="0x7f929c968ad8"/>
        <function-ref name="setMode" scoped="" ref="0x7f929c968c60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f929c968de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f929c963c58" loc="46:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f929c963c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f929c962020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f929c9621a8"/>
        <function-ref name="captured" scoped="" ref="0x7f929c962330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f929c9624b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f929c962640"/>
        <function-ref name="setEdge" scoped="" ref="0x7f929c9627c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f929c965c80" loc="44:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f929c965c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f929c964020"/>
        <function-ref name="getControl" scoped="" ref="0x7f929c9641a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f929c964330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f929c9644b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f929c964640"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f929c9647c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f929c964950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f929c964ad8"/>
        <function-ref name="setControl" scoped="" ref="0x7f929c964c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f929c95f100" loc="48:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f929c95f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f929c95f450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f929c963020" loc="45:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f929c963020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f929c963370"/>
        <function-ref name="setEvent" scoped="" ref="0x7f929c9634f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f929c963680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f929c963808"/>
        <function-ref name="fired" scoped="" ref="0x7f929c963990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f929c962a90" loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f929c962a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f929c962de0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f929c960020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f929c9601a8"/>
        <function-ref name="get" scoped="" ref="0x7f929c960330"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f929c9604b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f929c960640"/>
        <function-ref name="getMode" scoped="" ref="0x7f929c9607c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f929c960950"/>
        <function-ref name="overflow" scoped="" ref="0x7f929c960ad8"/>
        <function-ref name="setMode" scoped="" ref="0x7f929c960c60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f929c960de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f929c95bc58" loc="46:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f929c95bc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f929c95a020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f929c95a1a8"/>
        <function-ref name="captured" scoped="" ref="0x7f929c95a330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f929c95a4b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f929c95a640"/>
        <function-ref name="setEdge" scoped="" ref="0x7f929c95a7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f929c95dc80" loc="44:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f929c95dc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f929c95c020"/>
        <function-ref name="getControl" scoped="" ref="0x7f929c95c1a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f929c95c330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f929c95c4b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f929c95c640"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f929c95c7c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f929c95c950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f929c95cad8"/>
        <function-ref name="setControl" scoped="" ref="0x7f929c95cc60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f929c958100" loc="48:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f929c958100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f929c958450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f929c95b020" loc="45:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f929c95b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f929c95b370"/>
        <function-ref name="setEvent" scoped="" ref="0x7f929c95b4f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f929c95b680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f929c95b808"/>
        <function-ref name="fired" scoped="" ref="0x7f929c95b990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f929c95aa90" loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f929c95aa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f929c95ade0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f929c959020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f929c9591a8"/>
        <function-ref name="get" scoped="" ref="0x7f929c959330"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f929c9594b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f929c959640"/>
        <function-ref name="getMode" scoped="" ref="0x7f929c9597c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f929c959950"/>
        <function-ref name="overflow" scoped="" ref="0x7f929c959ad8"/>
        <function-ref name="setMode" scoped="" ref="0x7f929c959c60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f929c959de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f929c954c58" loc="46:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f929c954c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f929c953020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f929c9531a8"/>
        <function-ref name="captured" scoped="" ref="0x7f929c953330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f929c9534b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f929c953640"/>
        <function-ref name="setEdge" scoped="" ref="0x7f929c9537c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f929c956c80" loc="44:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f929c956c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f929c955020"/>
        <function-ref name="getControl" scoped="" ref="0x7f929c9551a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f929c955330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f929c9554b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f929c955640"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f929c9557c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f929c955950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f929c955ad8"/>
        <function-ref name="setControl" scoped="" ref="0x7f929c955c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f929c951100" loc="48:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f929c951100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f929c951450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f929c954020" loc="45:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f929c954020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f929c954370"/>
        <function-ref name="setEvent" scoped="" ref="0x7f929c9544f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f929c954680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f929c954808"/>
        <function-ref name="fired" scoped="" ref="0x7f929c954990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f929c953a90" loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f929c953a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f929c953de0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f929c952020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f929c9521a8"/>
        <function-ref name="get" scoped="" ref="0x7f929c952330"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f929c9524b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f929c952640"/>
        <function-ref name="getMode" scoped="" ref="0x7f929c9527c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f929c952950"/>
        <function-ref name="overflow" scoped="" ref="0x7f929c952ad8"/>
        <function-ref name="setMode" scoped="" ref="0x7f929c952c60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f929c952de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f929c94cc58" loc="46:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f929c94cc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f929c94b020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f929c94b1a8"/>
        <function-ref name="captured" scoped="" ref="0x7f929c94b330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f929c94b4b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f929c94b640"/>
        <function-ref name="setEdge" scoped="" ref="0x7f929c94b7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f929c94ec80" loc="44:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f929c94ec80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f929c94d020"/>
        <function-ref name="getControl" scoped="" ref="0x7f929c94d1a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f929c94d330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f929c94d4b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f929c94d640"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f929c94d7c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f929c94d950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f929c94dad8"/>
        <function-ref name="setControl" scoped="" ref="0x7f929c94dc60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f929c949100" loc="48:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f929c949100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f929c949450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f929c94c020" loc="45:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f929c94c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f929c94c370"/>
        <function-ref name="setEvent" scoped="" ref="0x7f929c94c4f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f929c94c680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f929c94c808"/>
        <function-ref name="fired" scoped="" ref="0x7f929c94c990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f929c94ba90" loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f929c94ba90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f929c94bde0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f929c94a020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f929c94a1a8"/>
        <function-ref name="get" scoped="" ref="0x7f929c94a330"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f929c94a4b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f929c94a640"/>
        <function-ref name="getMode" scoped="" ref="0x7f929c94a7c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f929c94a950"/>
        <function-ref name="overflow" scoped="" ref="0x7f929c94aad8"/>
        <function-ref name="setMode" scoped="" ref="0x7f929c94ac60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f929c94ade8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f929c945c58" loc="46:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f929c945c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f929c944020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f929c9441a8"/>
        <function-ref name="captured" scoped="" ref="0x7f929c944330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f929c9444b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f929c944640"/>
        <function-ref name="setEdge" scoped="" ref="0x7f929c9447c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f929c947c80" loc="44:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f929c947c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f929c946020"/>
        <function-ref name="getControl" scoped="" ref="0x7f929c9461a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f929c946330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f929c9464b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f929c946640"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f929c9467c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f929c946950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f929c946ad8"/>
        <function-ref name="setControl" scoped="" ref="0x7f929c946c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f929c942100" loc="48:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f929c942100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f929c942450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f929c945020" loc="45:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f929c945020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f929c945370"/>
        <function-ref name="setEvent" scoped="" ref="0x7f929c9454f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f929c945680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f929c945808"/>
        <function-ref name="fired" scoped="" ref="0x7f929c945990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f929c944a90" loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f929c944a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f929c944de0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f929c943020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f929c9431a8"/>
        <function-ref name="get" scoped="" ref="0x7f929c943330"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f929c9434b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f929c943640"/>
        <function-ref name="getMode" scoped="" ref="0x7f929c9437c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f929c943950"/>
        <function-ref name="overflow" scoped="" ref="0x7f929c943ad8"/>
        <function-ref name="setMode" scoped="" ref="0x7f929c943c60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f929c943de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f929c93dc58" loc="46:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f929c93dc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f929c93c020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f929c93c1a8"/>
        <function-ref name="captured" scoped="" ref="0x7f929c93c330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f929c93c4b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f929c93c640"/>
        <function-ref name="setEdge" scoped="" ref="0x7f929c93c7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f929c93fc80" loc="44:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f929c93fc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f929c93e020"/>
        <function-ref name="getControl" scoped="" ref="0x7f929c93e1a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f929c93e330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f929c93e4b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f929c93e640"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f929c93e7c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f929c93e950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f929c93ead8"/>
        <function-ref name="setControl" scoped="" ref="0x7f929c93ec60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f929c93a100" loc="48:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f929c93a100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f929c93a450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f929c93d020" loc="45:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f929c93d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f929c93d370"/>
        <function-ref name="setEvent" scoped="" ref="0x7f929c93d4f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f929c93d680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f929c93d808"/>
        <function-ref name="fired" scoped="" ref="0x7f929c93d990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f929c93ca90" loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f929c93ca90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f929c93cde0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f929c93b020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f929c93b1a8"/>
        <function-ref name="get" scoped="" ref="0x7f929c93b330"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f929c93b4b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f929c93b640"/>
        <function-ref name="getMode" scoped="" ref="0x7f929c93b7c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f929c93b950"/>
        <function-ref name="overflow" scoped="" ref="0x7f929c93bad8"/>
        <function-ref name="setMode" scoped="" ref="0x7f929c93bc60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f929c93bde8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f929c936c58" loc="46:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f929c936c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f929c935020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f929c9351a8"/>
        <function-ref name="captured" scoped="" ref="0x7f929c935330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f929c9354b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f929c935640"/>
        <function-ref name="setEdge" scoped="" ref="0x7f929c9357c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f929c938c80" loc="44:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f929c938c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f929c937020"/>
        <function-ref name="getControl" scoped="" ref="0x7f929c9371a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f929c937330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f929c9374b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f929c937640"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f929c9377c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f929c937950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f929c937ad8"/>
        <function-ref name="setControl" scoped="" ref="0x7f929c937c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f929c933100" loc="48:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f929c933100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f929c933450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f929c936020" loc="45:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f929c936020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f929c936370"/>
        <function-ref name="setEvent" scoped="" ref="0x7f929c9364f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f929c936680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f929c936808"/>
        <function-ref name="fired" scoped="" ref="0x7f929c936990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f929c935a90" loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f929c935a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f929c935de0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f929c934020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f929c9341a8"/>
        <function-ref name="get" scoped="" ref="0x7f929c934330"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f929c9344b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f929c934640"/>
        <function-ref name="getMode" scoped="" ref="0x7f929c9347c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f929c934950"/>
        <function-ref name="overflow" scoped="" ref="0x7f929c934ad8"/>
        <function-ref name="setMode" scoped="" ref="0x7f929c934c60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f929c934de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f929c92ec58" loc="46:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f929c92ec58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f929c92d020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f929c92d1a8"/>
        <function-ref name="captured" scoped="" ref="0x7f929c92d330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f929c92d4b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f929c92d640"/>
        <function-ref name="setEdge" scoped="" ref="0x7f929c92d7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f929c930c80" loc="44:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f929c930c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f929c92f020"/>
        <function-ref name="getControl" scoped="" ref="0x7f929c92f1a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f929c92f330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f929c92f4b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f929c92f640"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f929c92f7c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f929c92f950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f929c92fad8"/>
        <function-ref name="setControl" scoped="" ref="0x7f929c92fc60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f929c92b100" loc="48:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f929c92b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f929c92b450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f929c92e020" loc="45:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f929c92e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f929c92e370"/>
        <function-ref name="setEvent" scoped="" ref="0x7f929c92e4f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f929c92e680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f929c92e808"/>
        <function-ref name="fired" scoped="" ref="0x7f929c92e990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f929c92da90" loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f929c92da90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f929c92dde0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f929c92c020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f929c92c1a8"/>
        <function-ref name="get" scoped="" ref="0x7f929c92c330"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f929c92c4b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f929c92c640"/>
        <function-ref name="getMode" scoped="" ref="0x7f929c92c7c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f929c92c950"/>
        <function-ref name="overflow" scoped="" ref="0x7f929c92cad8"/>
        <function-ref name="setMode" scoped="" ref="0x7f929c92cc60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f929c92cde8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x7f929c926b60" loc="7:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x7f929c926b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f929c925020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x7f929c927520" loc="4:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x7f929c927520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f929c927870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x7f929c927c68" loc="5:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x7f929c927c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f929c926020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x7f929c926418" loc="6:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x7f929c926418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f929c926768"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7f929cb9fcc0" loc="55:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f929cb9fcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f929ce0b0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7f929cf69e10" loc="51:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7f929cf69e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7f929cee51a8"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7f929cee5330"/>
        <function-ref name="sleep" scoped="" ref="0x7f929cee54b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7f929cc6f580" loc="52:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x7f929cc6f580"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f929cc6f8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x7f929ca7baa8" loc="39:/home/kai/wsnpr/tinyos-main/tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f929ca7baa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f929c8f2950"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f929c8f2020"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f929c8f21a8"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f929c8f2330"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f929ca7bdf8"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f929c8f24b8"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f929c8f2640"/>
        <function-ref name="initClocks" scoped="" ref="0x7f929c8f27c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7f929c8e6418" loc="60:/home/kai/wsnpr/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7f929c8e6418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f929c8e6768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f929ca9fc40" loc="57:/home/kai/wsnpr/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f929ca9fc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f929c8f3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7f929c8f3ce0" loc="59:/home/kai/wsnpr/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x7f929c8f3ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f929c8e60a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7f929c8f3308" loc="58:/home/kai/wsnpr/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f929c8f3308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f929c8f3658"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f929c8f37e0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f929c8f3968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f929cf9c1c8" loc="48:/home/kai/wsnpr/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7f929cf9c1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f929cf9c518"/>
        <function-ref name="runTask" scoped="" ref="0x7f929cf9c6a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f929cf67390" loc="47:/home/kai/wsnpr/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f929cf67390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f929cf676e0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f929cf67868"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f929cf679f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f929cb2a7f8" loc="56:/home/kai/wsnpr/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7f929cb2a7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f929cb2ab48"/>
        <function-ref name="runTask" scoped="" ref="0x7f929cb2acd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7f929cb23b48" loc="57:/home/kai/wsnpr/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7f929cb23b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7f929cb27020"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7f929cb271a8"/>
        <function-ref name="sleep" scoped="" ref="0x7f929cb27330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f929cb2c940" loc="55:/home/kai/wsnpr/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f929cb2c940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f929cb2cc90"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f929cb2ce18"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f929cb2a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f929caa3b28" loc="5:RssiBaseC.nc">
      <component-ref qname="RssiBaseC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f929caa3b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f929caa3e78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LaserTimer" ref="0x7f929c8cadf8" loc="7:RssiBaseC.nc">
      <component-ref qname="RssiBaseC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LaserTimer" scoped="" ref="0x7f929c8cadf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f929c8d4828"/>
            <typename><typedef-ref name="TMilli" ref="0x7f929c8d4b80"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f929c8c70c0"/>
        <function-ref name="fired" scoped="" ref="0x7f929c8c9798"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f929c8c84d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f929c8c8088"/>
        <function-ref name="getdt" scoped="" ref="0x7f929c8c7960"/>
        <function-ref name="gett0" scoped="" ref="0x7f929c8c7510"/>
        <function-ref name="isRunning" scoped="" ref="0x7f929c8c9be8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f929c8da9e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f929c8c8aa8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f929c8dae80"/>
        <function-ref name="stop" scoped="" ref="0x7f929c8c9348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiMsgIntercept" ref="0x7f929c8d54e0" loc="6:RssiBaseC.nc">
      <component-ref qname="RssiBaseC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RssiMsgIntercept" scoped="" ref="0x7f929c8d54e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x7f929c8d5830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LaserSensorStream" ref="0x7f929c8bad60" loc="9:RssiBaseC.nc">
      <component-ref qname="RssiBaseC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LaserSensorStream" scoped="" ref="0x7f929c8bad60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7f929c8c06d8"/>
        <function-ref name="postBuffer" scoped="" ref="0x7f929c8c18f0"/>
        <function-ref name="read" scoped="" ref="0x7f929c8c0238"/>
        <function-ref name="readDone" scoped="" ref="0x7f929c8b8158"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f929c8af888" loc="12:RssiBaseC.nc">
      <component-ref qname="RssiBaseC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f929c8af888"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f929c8afbd8"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f929c8afd60"/>
        <function-ref name="getRssi" scoped="" ref="0x7f929c8b7020"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f929c8b71a8"/>
        <function-ref name="getPower" scoped="" ref="0x7f929c8b7330"/>
        <function-ref name="getLqi" scoped="" ref="0x7f929c8b74b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="checkLaser" ref="0x7f929c8abaf0" loc="49:RssiBaseC.nc">
      <component-ref qname="RssiBaseC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="checkLaser" scoped="" ref="0x7f929c8abaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f929c8abe40"/>
        <function-ref name="runTask" scoped="" ref="0x7f929c8aa020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LaserSensor" ref="0x7f929c8c5020" loc="8:RssiBaseC.nc">
      <component-ref qname="RssiBaseC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LaserSensor" scoped="" ref="0x7f929c8c5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929c8c5b68"/>
        <function-ref name="readDone" scoped="" ref="0x7f929c8c4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialIntercept" ref="0x7f929c88c8e8" loc="79:../InterceptBase/BaseStationC.nc">
      <component-ref qname="BaseStationC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialIntercept" scoped="" ref="0x7f929c88c8e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f929cab6908"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x7f929c88cc38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioIntercept" ref="0x7f929c88dc78" loc="78:../InterceptBase/BaseStationC.nc">
      <component-ref qname="BaseStationC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioIntercept" scoped="" ref="0x7f929c88dc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f929cab6908"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x7f929c88c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f929c88adf0" loc="60:../InterceptBase/BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f929c88adf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f929c887170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7f929c882510" loc="61:../InterceptBase/BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x7f929c882510"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f929c882860"/>
        <function-ref name="stopDone" scoped="" ref="0x7f929c8829e8"/>
        <function-ref name="start" scoped="" ref="0x7f929c882b70"/>
        <function-ref name="stop" scoped="" ref="0x7f929c882cf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartReceive" ref="0x7f929c8813c8" loc="65:../InterceptBase/BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartReceive" scoped="" ref="0x7f929c8813c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f929cab6908"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f929c881718"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAMPacket" ref="0x7f929c855060" loc="73:../InterceptBase/BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioAMPacket" scoped="" ref="0x7f929c855060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f929c8553b0"/>
        <function-ref name="source" scoped="" ref="0x7f929c855538"/>
        <function-ref name="address" scoped="" ref="0x7f929c8556c0"/>
        <function-ref name="destination" scoped="" ref="0x7f929c855848"/>
        <function-ref name="setSource" scoped="" ref="0x7f929c8559d0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f929c855b58"/>
        <function-ref name="type" scoped="" ref="0x7f929c855ce0"/>
        <function-ref name="setType" scoped="" ref="0x7f929c855e68"/>
        <function-ref name="isForMe" scoped="" ref="0x7f929c854020"/>
        <function-ref name="setGroup" scoped="" ref="0x7f929c8541a8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f929c854330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="uartSendTask" ref="0x7f929c843cc0" loc="99:../InterceptBase/BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="uartSendTask" scoped="" ref="0x7f929c843cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f929c8420a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f929c842228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x7f929c8860e0" loc="62:../InterceptBase/BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioControl" scoped="" ref="0x7f929c8860e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f929c886430"/>
        <function-ref name="stopDone" scoped="" ref="0x7f929c8865b8"/>
        <function-ref name="start" scoped="" ref="0x7f929c886740"/>
        <function-ref name="stop" scoped="" ref="0x7f929c8868c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0x7f929c857358" loc="72:../InterceptBase/BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioPacket" scoped="" ref="0x7f929c857358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f929c8576a8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f929c857830"/>
        <function-ref name="getPayload" scoped="" ref="0x7f929c8579b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f929c857b40"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f929c857cc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x7f929c858020" loc="70:../InterceptBase/BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioReceive" scoped="" ref="0x7f929c858020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f929cab6908"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f929c858370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="radioSendTask" ref="0x7f929c842b80" loc="100:../InterceptBase/BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="radioSendTask" scoped="" ref="0x7f929c842b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f929c841020"/>
        <function-ref name="runTask" scoped="" ref="0x7f929c8411a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialIntercept" ref="0x7f929c848700" loc="79:../InterceptBase/BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialIntercept" scoped="" ref="0x7f929c848700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f929cab6908"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x7f929c848a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioIntercept" ref="0x7f929c852a88" loc="78:../InterceptBase/BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioIntercept" scoped="" ref="0x7f929c852a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f929cab6908"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x7f929c852dd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f929c849c38" loc="75:../InterceptBase/BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f929c849c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f929c8530d8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f929c853260"/>
        <function-ref name="led1On" scoped="" ref="0x7f929c8533e8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f929c853570"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f929c8536f8"/>
        <function-ref name="get" scoped="" ref="0x7f929c853880"/>
        <function-ref name="led1Off" scoped="" ref="0x7f929c853a08"/>
        <function-ref name="led2Off" scoped="" ref="0x7f929c8521a8"/>
        <function-ref name="set" scoped="" ref="0x7f929c853b90"/>
        <function-ref name="led0On" scoped="" ref="0x7f929c853d18"/>
        <function-ref name="led2On" scoped="" ref="0x7f929c852020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartPacket" ref="0x7f929c869840" loc="66:../InterceptBase/BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartPacket" scoped="" ref="0x7f929c869840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f929c869b90"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f929c869d18"/>
        <function-ref name="getPayload" scoped="" ref="0x7f929c878020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f929c8781a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f929c878330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x7f929c874cd0" loc="69:../InterceptBase/BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioSend" scoped="" ref="0x7f929c874cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f929cab6908"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f929c86a0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f929c86a228"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f929c86a3b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f929c86a538"/>
        <function-ref name="sendDone" scoped="" ref="0x7f929c86a6c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartSend" ref="0x7f929c877720" loc="64:../InterceptBase/BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartSend" scoped="" ref="0x7f929c877720"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f929cab6908"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f929c877a70"/>
        <function-ref name="getPayload" scoped="" ref="0x7f929c877bf8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f929c877d80"/>
        <function-ref name="cancel" scoped="" ref="0x7f929c885020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f929c8851a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartAMPacket" ref="0x7f929c8591d0" loc="67:../InterceptBase/BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartAMPacket" scoped="" ref="0x7f929c8591d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f929c859520"/>
        <function-ref name="source" scoped="" ref="0x7f929c8596a8"/>
        <function-ref name="address" scoped="" ref="0x7f929c859830"/>
        <function-ref name="destination" scoped="" ref="0x7f929c8599b8"/>
        <function-ref name="setSource" scoped="" ref="0x7f929c859b40"/>
        <function-ref name="setDestination" scoped="" ref="0x7f929c859cc8"/>
        <function-ref name="type" scoped="" ref="0x7f929c859e50"/>
        <function-ref name="setType" scoped="" ref="0x7f929c874020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f929c8741a8"/>
        <function-ref name="setGroup" scoped="" ref="0x7f929c874330"/>
        <function-ref name="localGroup" scoped="" ref="0x7f929c8744b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSnoop" ref="0x7f929c858b98" loc="71:../InterceptBase/BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioSnoop" scoped="" ref="0x7f929c858b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f929cab6908"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f929c857020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f929c7f6900" loc="46:/home/kai/wsnpr/tinyos-main/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f929c7f6900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f929c7f6c50"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f929c7f6dd8"/>
        <function-ref name="led1On" scoped="" ref="0x7f929c7f3020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f929c7f31a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f929c7f3330"/>
        <function-ref name="get" scoped="" ref="0x7f929c7f34b8"/>
        <function-ref name="led1Off" scoped="" ref="0x7f929c7f3640"/>
        <function-ref name="led2Off" scoped="" ref="0x7f929c7f3c60"/>
        <function-ref name="set" scoped="" ref="0x7f929c7f37c8"/>
        <function-ref name="led0On" scoped="" ref="0x7f929c7f3950"/>
        <function-ref name="led2On" scoped="" ref="0x7f929c7f3ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7f929c7e7348" loc="50:/home/kai/wsnpr/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7f929c7e7348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c7e7698"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c7e7820"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c7e79a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c7e7b30"/>
        <function-ref name="get" scoped="" ref="0x7f929c7e7cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c7e7e40"/>
        <function-ref name="set" scoped="" ref="0x7f929c7ed020"/>
        <function-ref name="clr" scoped="" ref="0x7f929c7ed1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f929c7f2b10" loc="46:/home/kai/wsnpr/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f929c7f2b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f929c7f2e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7f929c7ed4c0" loc="51:/home/kai/wsnpr/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7f929c7ed4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c7ed810"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c7ed998"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c7edb20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c7edca8"/>
        <function-ref name="get" scoped="" ref="0x7f929c7ede30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c7ec020"/>
        <function-ref name="set" scoped="" ref="0x7f929c7ec1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f929c7ec330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f929c7ef110" loc="47:/home/kai/wsnpr/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f929c7ef110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f929c7ef460"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f929c7ef5e8"/>
        <function-ref name="led1On" scoped="" ref="0x7f929c7ef770"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f929c7ef8f8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f929c7efa80"/>
        <function-ref name="get" scoped="" ref="0x7f929c7efc08"/>
        <function-ref name="led1Off" scoped="" ref="0x7f929c7efd90"/>
        <function-ref name="led2Off" scoped="" ref="0x7f929c7ee4b8"/>
        <function-ref name="set" scoped="" ref="0x7f929c7ee020"/>
        <function-ref name="led0On" scoped="" ref="0x7f929c7ee1a8"/>
        <function-ref name="led2On" scoped="" ref="0x7f929c7ee330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7f929c7ec648" loc="52:/home/kai/wsnpr/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7f929c7ec648"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c7ec998"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c7ecb20"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c7ecca8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c7ece30"/>
        <function-ref name="get" scoped="" ref="0x7f929c7e6020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c7e61a8"/>
        <function-ref name="set" scoped="" ref="0x7f929c7e6330"/>
        <function-ref name="clr" scoped="" ref="0x7f929c7e64b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7f929c7f0aa0" loc="41:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7f929c7f0aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c7f0df0"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c7ca020"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c7ca1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c7ca330"/>
        <function-ref name="get" scoped="" ref="0x7f929c7ca4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c7ca640"/>
        <function-ref name="set" scoped="" ref="0x7f929c7ca7c8"/>
        <function-ref name="clr" scoped="" ref="0x7f929c7ca950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7f929c7caca8" loc="42:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7f929c7caca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c7c9020"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c7c91a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c7c9330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c7c94b8"/>
        <function-ref name="get" scoped="" ref="0x7f929c7c9640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c7c97c8"/>
        <function-ref name="set" scoped="" ref="0x7f929c7c9950"/>
        <function-ref name="clr" scoped="" ref="0x7f929c7c9ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7f929c7c7020" loc="44:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f929c7c7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f929c7c7370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7f929c7c9e30" loc="43:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7f929c7c9e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c7c81a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c7c8330"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c7c84b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c7c8640"/>
        <function-ref name="get" scoped="" ref="0x7f929c7c87c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c7c8950"/>
        <function-ref name="set" scoped="" ref="0x7f929c7c8ad8"/>
        <function-ref name="clr" scoped="" ref="0x7f929c7c8c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f929c7b3b00" loc="53:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f929c7b3b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c7b3e50"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c7b2020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c7b21a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c7b2330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c7b24b8"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c7b2640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c7b27c8"/>
        <function-ref name="get" scoped="" ref="0x7f929c7b2950"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c7b2ad8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c7b2c60"/>
        <function-ref name="set" scoped="" ref="0x7f929c7b2de8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c7b1020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c7b11a8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c7b1430"/>
        <function-ref name="clr" scoped="" ref="0x7f929c7b15b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f929c79e568" loc="66:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f929c79e568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c79e8b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c79ea40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c79ebc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c79ed50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c79d020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c79d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c79d330"/>
        <function-ref name="get" scoped="" ref="0x7f929c79d4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c79d640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c79d7c8"/>
        <function-ref name="set" scoped="" ref="0x7f929c79d950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c79dad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c79dc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c79c020"/>
        <function-ref name="clr" scoped="" ref="0x7f929c79c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x7f929c7557d0" loc="145:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x7f929c7557d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c755b20"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c755ca8"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c755e30"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c754020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c7541a8"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c754330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c7544b8"/>
        <function-ref name="get" scoped="" ref="0x7f929c754640"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c7547c8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c754950"/>
        <function-ref name="set" scoped="" ref="0x7f929c754ad8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c754c60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c754de8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c753120"/>
        <function-ref name="clr" scoped="" ref="0x7f929c7532a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x7f929c730558" loc="165:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x7f929c730558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c7308a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c730a30"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c730bb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c730d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c72f020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c72f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c72f330"/>
        <function-ref name="get" scoped="" ref="0x7f929c72f4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c72f640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c72f7c8"/>
        <function-ref name="set" scoped="" ref="0x7f929c72f950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c72fad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c72fc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c72e020"/>
        <function-ref name="clr" scoped="" ref="0x7f929c72e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x7f929c753660" loc="146:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x7f929c753660"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c7539b0"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c753b38"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c753cc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c753e48"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c752020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c7521a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c752330"/>
        <function-ref name="get" scoped="" ref="0x7f929c7524b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c752640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c7527c8"/>
        <function-ref name="set" scoped="" ref="0x7f929c752950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c752ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c752c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c751020"/>
        <function-ref name="clr" scoped="" ref="0x7f929c7511a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x7f929c79a568" loc="71:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x7f929c79a568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c79a8b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c79aa40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c79abc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c79ad50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c799020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c7991a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c799330"/>
        <function-ref name="get" scoped="" ref="0x7f929c7994b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c799640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c7997c8"/>
        <function-ref name="set" scoped="" ref="0x7f929c799950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c799ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c799c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c798020"/>
        <function-ref name="clr" scoped="" ref="0x7f929c7981a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x7f929c786568" loc="84:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x7f929c786568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c7868b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c786a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c786bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c786d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c785020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c7851a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c785330"/>
        <function-ref name="get" scoped="" ref="0x7f929c7854b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c785640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c7857c8"/>
        <function-ref name="set" scoped="" ref="0x7f929c785950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c785ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c785c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c784020"/>
        <function-ref name="clr" scoped="" ref="0x7f929c7841a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x7f929c771568" loc="97:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x7f929c771568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c7718b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c771a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c771bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c771d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c770020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c7701a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c770330"/>
        <function-ref name="get" scoped="" ref="0x7f929c7704b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c770640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c7707c8"/>
        <function-ref name="set" scoped="" ref="0x7f929c770950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c770ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c770c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c76f020"/>
        <function-ref name="clr" scoped="" ref="0x7f929c76f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x7f929c761568" loc="108:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7f929c761568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c7618b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c761a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c761bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c761d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c760020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c7601a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c760330"/>
        <function-ref name="get" scoped="" ref="0x7f929c7604b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c760640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c7607c8"/>
        <function-ref name="set" scoped="" ref="0x7f929c760950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c760ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c760c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c75f020"/>
        <function-ref name="clr" scoped="" ref="0x7f929c75f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x7f929c74d560" loc="149:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x7f929c74d560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c74d8b0"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c74da38"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c74dbc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c74dd48"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c74b020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c74b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c74b330"/>
        <function-ref name="get" scoped="" ref="0x7f929c74b4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c74b640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c74b7c8"/>
        <function-ref name="set" scoped="" ref="0x7f929c74b950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c74bad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c74bc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c74a020"/>
        <function-ref name="clr" scoped="" ref="0x7f929c74a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x7f929c73c558" loc="159:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x7f929c73c558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c73c8a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c73ca30"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c73cbb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c73cd40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c73b020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c73b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c73b330"/>
        <function-ref name="get" scoped="" ref="0x7f929c73b4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c73b640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c73b7c8"/>
        <function-ref name="set" scoped="" ref="0x7f929c73b950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c73bad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c73bc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c73a020"/>
        <function-ref name="clr" scoped="" ref="0x7f929c73a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x7f929c728560" loc="171:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x7f929c728560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c7288b0"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c728a38"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c728bc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c728d48"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c727020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c7271a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c727330"/>
        <function-ref name="get" scoped="" ref="0x7f929c7274b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c727640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c7277c8"/>
        <function-ref name="set" scoped="" ref="0x7f929c727950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c727ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c727c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c726020"/>
        <function-ref name="clr" scoped="" ref="0x7f929c7261a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f929c7ad668" loc="56:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f929c7ad668"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c7ad9b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c7adb40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c7adcc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c7ade50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c7ac020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c7ac1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c7ac330"/>
        <function-ref name="get" scoped="" ref="0x7f929c7ac4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c7ac640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c7ac7c8"/>
        <function-ref name="set" scoped="" ref="0x7f929c7ac950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c7acad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c7acc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c7ab020"/>
        <function-ref name="clr" scoped="" ref="0x7f929c7ab1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x7f929c74a560" loc="150:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x7f929c74a560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c74a8b0"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c74aa38"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c74abc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c74ad48"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c749020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c7491a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c749330"/>
        <function-ref name="get" scoped="" ref="0x7f929c7494b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c749640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c7497c8"/>
        <function-ref name="set" scoped="" ref="0x7f929c749950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c749ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c749c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c748020"/>
        <function-ref name="clr" scoped="" ref="0x7f929c7481a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f929c7a8568" loc="61:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f929c7a8568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c7a88b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c7a8a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c7a8bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c7a8d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c7a7020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c7a71a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c7a7330"/>
        <function-ref name="get" scoped="" ref="0x7f929c7a74b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c7a7640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c7a77c8"/>
        <function-ref name="set" scoped="" ref="0x7f929c7a7950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c7a7ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c7a7c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c7a6020"/>
        <function-ref name="clr" scoped="" ref="0x7f929c7a61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x7f929c794568" loc="74:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x7f929c794568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c7948b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c794a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c794bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c794d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c793020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c7931a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c793330"/>
        <function-ref name="get" scoped="" ref="0x7f929c7934b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c793640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c7937c8"/>
        <function-ref name="set" scoped="" ref="0x7f929c793950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c793ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c793c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c792020"/>
        <function-ref name="clr" scoped="" ref="0x7f929c7921a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x7f929c780568" loc="87:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x7f929c780568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c7808b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c780a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c780bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c780d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c77f020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c77f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c77f330"/>
        <function-ref name="get" scoped="" ref="0x7f929c77f4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c77f640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c77f7c8"/>
        <function-ref name="set" scoped="" ref="0x7f929c77f950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c77fad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c77fc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c77e020"/>
        <function-ref name="clr" scoped="" ref="0x7f929c77e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x7f929c76b568" loc="100:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x7f929c76b568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c76b8b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c76ba40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c76bbc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c76bd50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c76a020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c76a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c76a330"/>
        <function-ref name="get" scoped="" ref="0x7f929c76a4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c76a640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c76a7c8"/>
        <function-ref name="set" scoped="" ref="0x7f929c76a950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c76aad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c76ac60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c769020"/>
        <function-ref name="clr" scoped="" ref="0x7f929c7691a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x7f929c75b568" loc="111:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7f929c75b568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c75b8b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c75ba40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c75bbc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c75bd50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c75a020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c75a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c75a330"/>
        <function-ref name="get" scoped="" ref="0x7f929c75a4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c75a640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c75a7c8"/>
        <function-ref name="set" scoped="" ref="0x7f929c75a950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c75aad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c75ac60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c759020"/>
        <function-ref name="clr" scoped="" ref="0x7f929c7591a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f929c7b7e10" loc="51:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f929c7b7e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c7b61a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c7b6330"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c7b64b8"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c7b6640"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c7b67c8"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c7b6950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c7b6ad8"/>
        <function-ref name="get" scoped="" ref="0x7f929c7b6c60"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c7b6de8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c7b5020"/>
        <function-ref name="set" scoped="" ref="0x7f929c7b51a8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c7b5330"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c7b54b8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c7b5740"/>
        <function-ref name="clr" scoped="" ref="0x7f929c7b58c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f929c7a2568" loc="64:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f929c7a2568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c7a29b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c7a2b40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c7a2cc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c7a2e50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c7a1020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c7a11a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c7a1330"/>
        <function-ref name="get" scoped="" ref="0x7f929c7a14b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c7a1640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c7a17c8"/>
        <function-ref name="set" scoped="" ref="0x7f929c7a1950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c7a1ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c7a1c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c7a0020"/>
        <function-ref name="clr" scoped="" ref="0x7f929c7a01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x7f929c78e568" loc="77:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x7f929c78e568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c78e8b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c78ea40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c78ebc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c78ed50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c78d020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c78d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c78d330"/>
        <function-ref name="get" scoped="" ref="0x7f929c78d4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c78d640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c78d7c8"/>
        <function-ref name="set" scoped="" ref="0x7f929c78d950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c78dad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c78dc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c78c020"/>
        <function-ref name="clr" scoped="" ref="0x7f929c78c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x7f929c757970" loc="144:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x7f929c757970"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c757cc0"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c757e48"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c756020"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c7561a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c756330"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c7564b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c756640"/>
        <function-ref name="get" scoped="" ref="0x7f929c7567c8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c756950"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c756ad8"/>
        <function-ref name="set" scoped="" ref="0x7f929c756c60"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c756de8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c755020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c7552a8"/>
        <function-ref name="clr" scoped="" ref="0x7f929c755430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x7f929c736558" loc="162:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x7f929c736558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c7368a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c736a30"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c736bb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c736d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c735020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c7351a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c735330"/>
        <function-ref name="get" scoped="" ref="0x7f929c7354b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c735640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c7357c8"/>
        <function-ref name="set" scoped="" ref="0x7f929c735950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c735ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c735c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c734020"/>
        <function-ref name="clr" scoped="" ref="0x7f929c7341a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x7f929c72a558" loc="169:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x7f929c72a558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c72a8a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c72aa30"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c72abb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c72ad40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c729020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c7291a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c729330"/>
        <function-ref name="get" scoped="" ref="0x7f929c7294b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c729640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c7297c8"/>
        <function-ref name="set" scoped="" ref="0x7f929c729950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c729ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c729c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c728020"/>
        <function-ref name="clr" scoped="" ref="0x7f929c7281a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x7f929c742560" loc="155:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x7f929c742560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c7428b0"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c742a38"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c742bc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c742d48"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c741020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c7411a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c741330"/>
        <function-ref name="get" scoped="" ref="0x7f929c7414b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c741640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c7417c8"/>
        <function-ref name="set" scoped="" ref="0x7f929c741950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c741ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c741c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c740020"/>
        <function-ref name="clr" scoped="" ref="0x7f929c7401a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x7f929c78a568" loc="82:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x7f929c78a568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c78aab8"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c78ac40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c78adc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c789020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c7891a8"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c789330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c7894b8"/>
        <function-ref name="get" scoped="" ref="0x7f929c789640"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c7897c8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c789950"/>
        <function-ref name="set" scoped="" ref="0x7f929c789ad8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c789c60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c789de8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c788120"/>
        <function-ref name="clr" scoped="" ref="0x7f929c7882a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x7f929c775568" loc="95:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x7f929c775568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c7758b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c775a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c775bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c775d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c774020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c7741a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c774330"/>
        <function-ref name="get" scoped="" ref="0x7f929c7744b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c774640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c7747c8"/>
        <function-ref name="set" scoped="" ref="0x7f929c774950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c774ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c774c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c773020"/>
        <function-ref name="clr" scoped="" ref="0x7f929c7731a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x7f929c765568" loc="106:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7f929c765568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c7658b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c765a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c765bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c765d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c764020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c7641a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c764330"/>
        <function-ref name="get" scoped="" ref="0x7f929c7644b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c764640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c7647c8"/>
        <function-ref name="set" scoped="" ref="0x7f929c764950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c764ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c764c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c763020"/>
        <function-ref name="clr" scoped="" ref="0x7f929c7631a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x7f929c734558" loc="163:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x7f929c734558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c7348a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c734a30"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c734bb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c734d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c733020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c7331a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c733330"/>
        <function-ref name="get" scoped="" ref="0x7f929c7334b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c733640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c7337c8"/>
        <function-ref name="set" scoped="" ref="0x7f929c733950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c733ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c733c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c732020"/>
        <function-ref name="clr" scoped="" ref="0x7f929c7321a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x7f929c748558" loc="152:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x7f929c748558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c7488a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c748a30"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c748bb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c748d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c747020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c7471a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c747330"/>
        <function-ref name="get" scoped="" ref="0x7f929c7474b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c747640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c7477c8"/>
        <function-ref name="set" scoped="" ref="0x7f929c747950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c747ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c747c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c746020"/>
        <function-ref name="clr" scoped="" ref="0x7f929c7461a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f929c7b1978" loc="54:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f929c7b1978"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c7b1cc8"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c7b1e50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c7b0020"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c7b01a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c7b0330"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c7b04b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c7b0640"/>
        <function-ref name="get" scoped="" ref="0x7f929c7b07c8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c7b0950"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c7b0ad8"/>
        <function-ref name="set" scoped="" ref="0x7f929c7b0c60"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c7b0de8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c7af020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c7af2a8"/>
        <function-ref name="clr" scoped="" ref="0x7f929c7af430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f929c79c568" loc="67:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f929c79c568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c79c8b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c79ca40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c79cbc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c79cd50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c79b020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c79b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c79b330"/>
        <function-ref name="get" scoped="" ref="0x7f929c79b4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c79b640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c79b7c8"/>
        <function-ref name="set" scoped="" ref="0x7f929c79b950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c79bad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c79bc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c79a020"/>
        <function-ref name="clr" scoped="" ref="0x7f929c79a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x7f929c769568" loc="104:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7f929c769568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c7698b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c769a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c769bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c769d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c768020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c7681a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c768330"/>
        <function-ref name="get" scoped="" ref="0x7f929c7684b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c768640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c7687c8"/>
        <function-ref name="set" scoped="" ref="0x7f929c768950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c768ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c768c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c767020"/>
        <function-ref name="clr" scoped="" ref="0x7f929c7671a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x7f929c798568" loc="72:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x7f929c798568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c7988b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c798a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c798bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c798d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c797020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c7971a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c797330"/>
        <function-ref name="get" scoped="" ref="0x7f929c7974b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c797640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c7977c8"/>
        <function-ref name="set" scoped="" ref="0x7f929c797950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c797ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c797c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c796020"/>
        <function-ref name="clr" scoped="" ref="0x7f929c7961a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x7f929c784568" loc="85:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x7f929c784568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c7848b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c784a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c784bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c784d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c783020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c7831a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c783330"/>
        <function-ref name="get" scoped="" ref="0x7f929c7834b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c783640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c7837c8"/>
        <function-ref name="set" scoped="" ref="0x7f929c783950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c783ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c783c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c782020"/>
        <function-ref name="clr" scoped="" ref="0x7f929c7821a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x7f929c76f568" loc="98:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x7f929c76f568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c76f8b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c76fa40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c76fbc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c76fd50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c76e020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c76e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c76e330"/>
        <function-ref name="get" scoped="" ref="0x7f929c76e4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c76e640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c76e7c8"/>
        <function-ref name="set" scoped="" ref="0x7f929c76e950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c76ead8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c76ec60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c76d020"/>
        <function-ref name="clr" scoped="" ref="0x7f929c76d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x7f929c75f568" loc="109:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7f929c75f568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c75f8b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c75fa40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c75fbc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c75fd50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c75e020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c75e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c75e330"/>
        <function-ref name="get" scoped="" ref="0x7f929c75e4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c75e640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c75e7c8"/>
        <function-ref name="set" scoped="" ref="0x7f929c75e950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c75ead8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c75ec60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c75d020"/>
        <function-ref name="clr" scoped="" ref="0x7f929c75d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x7f929c744560" loc="154:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x7f929c744560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c7448b0"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c744a38"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c744bc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c744d48"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c743020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c7431a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c743330"/>
        <function-ref name="get" scoped="" ref="0x7f929c7434b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c743640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c7437c8"/>
        <function-ref name="set" scoped="" ref="0x7f929c743950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c743ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c743c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c742020"/>
        <function-ref name="clr" scoped="" ref="0x7f929c7421a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f929c7c30a0" loc="49:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f929c7c30a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c7c33f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c7c3578"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c7c3700"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c7c3888"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c7c3a10"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c7c3b98"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c7c3d20"/>
        <function-ref name="get" scoped="" ref="0x7f929c7c2020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c7c21a8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c7c2330"/>
        <function-ref name="set" scoped="" ref="0x7f929c7c24b8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c7c2640"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c7c27c8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c7c2a50"/>
        <function-ref name="clr" scoped="" ref="0x7f929c7c2bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f929c7a6568" loc="62:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f929c7a6568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c7a68b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c7a6a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c7a6bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c7a6d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c7a5020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c7a51a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c7a5330"/>
        <function-ref name="get" scoped="" ref="0x7f929c7a54b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c7a5640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c7a57c8"/>
        <function-ref name="set" scoped="" ref="0x7f929c7a5950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c7a5ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c7a5c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c7a4020"/>
        <function-ref name="clr" scoped="" ref="0x7f929c7a41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x7f929c792568" loc="75:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x7f929c792568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c7928b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c792a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c792bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c792d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c791020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c7911a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c791330"/>
        <function-ref name="get" scoped="" ref="0x7f929c7914b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c791640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c7917c8"/>
        <function-ref name="set" scoped="" ref="0x7f929c791950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c791ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c791c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c790020"/>
        <function-ref name="clr" scoped="" ref="0x7f929c7901a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x7f929c77e568" loc="88:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x7f929c77e568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c77e8b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c77ea40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c77ebc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c77ed50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c77d020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c77d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c77d330"/>
        <function-ref name="get" scoped="" ref="0x7f929c77d4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c77d640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c77d7c8"/>
        <function-ref name="set" scoped="" ref="0x7f929c77d950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c77dad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c77dc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c77c020"/>
        <function-ref name="clr" scoped="" ref="0x7f929c77c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x7f929c740560" loc="156:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x7f929c740560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c7408b0"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c740a38"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c740bc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c740d48"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c73f020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c73f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c73f330"/>
        <function-ref name="get" scoped="" ref="0x7f929c73f4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c73f640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c73f7c8"/>
        <function-ref name="set" scoped="" ref="0x7f929c73f950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c73fad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c73fc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c73e020"/>
        <function-ref name="clr" scoped="" ref="0x7f929c73e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x7f929c73a558" loc="160:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x7f929c73a558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c73a8a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c73aa30"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c73abb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c73ad40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c739020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c7391a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c739330"/>
        <function-ref name="get" scoped="" ref="0x7f929c7394b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c739640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c7397c8"/>
        <function-ref name="set" scoped="" ref="0x7f929c739950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c739ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c739c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c738020"/>
        <function-ref name="clr" scoped="" ref="0x7f929c7381a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x7f929c72e558" loc="166:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x7f929c72e558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c72e8a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c72ea30"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c72ebb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c72ed40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c72d020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c72d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c72d330"/>
        <function-ref name="get" scoped="" ref="0x7f929c72d4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c72d640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c72d7c8"/>
        <function-ref name="set" scoped="" ref="0x7f929c72d950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c72dad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c72dc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c72c020"/>
        <function-ref name="clr" scoped="" ref="0x7f929c72c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x7f929c779568" loc="93:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x7f929c779568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c7798b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c779a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c779bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c779d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c778020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c7781a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c778330"/>
        <function-ref name="get" scoped="" ref="0x7f929c7784b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c778640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c7787c8"/>
        <function-ref name="set" scoped="" ref="0x7f929c778950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c778ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c778c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c777020"/>
        <function-ref name="clr" scoped="" ref="0x7f929c7771a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x7f929c73e560" loc="157:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x7f929c73e560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c73e8b0"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c73ea38"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c73ebc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c73ed48"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c73d020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c73d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c73d330"/>
        <function-ref name="get" scoped="" ref="0x7f929c73d4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c73d640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c73d7c8"/>
        <function-ref name="set" scoped="" ref="0x7f929c73d950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c73dad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c73dc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c73c020"/>
        <function-ref name="clr" scoped="" ref="0x7f929c73c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f929c7b5c88" loc="52:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f929c7b5c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c7b4020"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c7b41a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c7b4330"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c7b44b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c7b4640"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c7b47c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c7b4950"/>
        <function-ref name="get" scoped="" ref="0x7f929c7b4ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c7b4c60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c7b4de8"/>
        <function-ref name="set" scoped="" ref="0x7f929c7b3020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c7b31a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c7b3330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c7b35b8"/>
        <function-ref name="clr" scoped="" ref="0x7f929c7b3740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f929c7a0568" loc="65:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f929c7a0568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c7a08b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c7a0a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c7a0bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c7a0d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c79f020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c79f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c79f330"/>
        <function-ref name="get" scoped="" ref="0x7f929c79f4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c79f640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c79f7c8"/>
        <function-ref name="set" scoped="" ref="0x7f929c79f950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c79fad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c79fc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c79e020"/>
        <function-ref name="clr" scoped="" ref="0x7f929c79e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x7f929c78c568" loc="78:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x7f929c78c568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c78c8b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c78ca40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c78cbc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c78cd50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c78b020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c78b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c78b330"/>
        <function-ref name="get" scoped="" ref="0x7f929c78b4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c78b640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c78b7c8"/>
        <function-ref name="set" scoped="" ref="0x7f929c78b950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c78bad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c78bc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c78a020"/>
        <function-ref name="clr" scoped="" ref="0x7f929c78a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x7f929c746560" loc="153:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x7f929c746560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c7468b0"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c746a38"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c746bc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c746d48"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c745020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c7451a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c745330"/>
        <function-ref name="get" scoped="" ref="0x7f929c7454b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c745640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c7457c8"/>
        <function-ref name="set" scoped="" ref="0x7f929c745950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c745ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c745c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c744020"/>
        <function-ref name="clr" scoped="" ref="0x7f929c7441a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x7f929c732558" loc="164:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x7f929c732558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c7328a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c732a30"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c732bb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c732d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c731020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c7311a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c731330"/>
        <function-ref name="get" scoped="" ref="0x7f929c7314b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c731640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c7317c8"/>
        <function-ref name="set" scoped="" ref="0x7f929c731950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c731ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c731c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c730020"/>
        <function-ref name="clr" scoped="" ref="0x7f929c7301a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x7f929c788668" loc="83:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x7f929c788668"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c7889b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c788b40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c788cc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c788e50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c787020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c7871a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c787330"/>
        <function-ref name="get" scoped="" ref="0x7f929c7874b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c787640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c7877c8"/>
        <function-ref name="set" scoped="" ref="0x7f929c787950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c787ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c787c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c786020"/>
        <function-ref name="clr" scoped="" ref="0x7f929c7861a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x7f929c773568" loc="96:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x7f929c773568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c7738b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c773a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c773bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c773d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c772020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c7721a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c772330"/>
        <function-ref name="get" scoped="" ref="0x7f929c7724b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c772640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c7727c8"/>
        <function-ref name="set" scoped="" ref="0x7f929c772950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c772ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c772c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c771020"/>
        <function-ref name="clr" scoped="" ref="0x7f929c7711a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x7f929c763568" loc="107:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7f929c763568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c7638b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c763a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c763bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c763d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c762020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c7621a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c762330"/>
        <function-ref name="get" scoped="" ref="0x7f929c7624b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c762640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c7627c8"/>
        <function-ref name="set" scoped="" ref="0x7f929c762950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c762ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c762c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c761020"/>
        <function-ref name="clr" scoped="" ref="0x7f929c7611a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f929c7af7f0" loc="55:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f929c7af7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c7afb40"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c7afcc8"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c7afe50"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c7ae020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c7ae1a8"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c7ae330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c7ae4b8"/>
        <function-ref name="get" scoped="" ref="0x7f929c7ae640"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c7ae7c8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c7ae950"/>
        <function-ref name="set" scoped="" ref="0x7f929c7aead8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c7aec60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c7aede8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c7ad120"/>
        <function-ref name="clr" scoped="" ref="0x7f929c7ad2a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x7f929c767568" loc="105:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7f929c767568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c7678b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c767a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c767bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c767d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c766020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c7661a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c766330"/>
        <function-ref name="get" scoped="" ref="0x7f929c7664b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c766640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c7667c8"/>
        <function-ref name="set" scoped="" ref="0x7f929c766950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c766ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c766c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c765020"/>
        <function-ref name="clr" scoped="" ref="0x7f929c7651a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f929c7ab568" loc="60:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f929c7ab568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c7ab8b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c7aba40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c7abbc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c7abd50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c7a9020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c7a91a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c7a9330"/>
        <function-ref name="get" scoped="" ref="0x7f929c7a94b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c7a9640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c7a97c8"/>
        <function-ref name="set" scoped="" ref="0x7f929c7a9950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c7a9ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c7a9c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c7a8020"/>
        <function-ref name="clr" scoped="" ref="0x7f929c7a81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x7f929c796568" loc="73:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x7f929c796568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c7968b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c796a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c796bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c796d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c795020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c7951a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c795330"/>
        <function-ref name="get" scoped="" ref="0x7f929c7954b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c795640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c7957c8"/>
        <function-ref name="set" scoped="" ref="0x7f929c795950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c795ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c795c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c794020"/>
        <function-ref name="clr" scoped="" ref="0x7f929c7941a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x7f929c782568" loc="86:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x7f929c782568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c7828b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c782a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c782bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c782d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c781020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c7811a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c781330"/>
        <function-ref name="get" scoped="" ref="0x7f929c7814b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c781640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c7817c8"/>
        <function-ref name="set" scoped="" ref="0x7f929c781950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c781ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c781c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c780020"/>
        <function-ref name="clr" scoped="" ref="0x7f929c7801a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x7f929c76d568" loc="99:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x7f929c76d568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c76d8b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c76da40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c76dbc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c76dd50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c76c020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c76c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c76c330"/>
        <function-ref name="get" scoped="" ref="0x7f929c76c4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c76c640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c76c7c8"/>
        <function-ref name="set" scoped="" ref="0x7f929c76c950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c76cad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c76cc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c76b020"/>
        <function-ref name="clr" scoped="" ref="0x7f929c76b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x7f929c75d568" loc="110:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7f929c75d568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c75d8b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c75da40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c75dbc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c75dd50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c75c020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c75c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c75c330"/>
        <function-ref name="get" scoped="" ref="0x7f929c75c4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c75c640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c75c7c8"/>
        <function-ref name="set" scoped="" ref="0x7f929c75c950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c75cad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c75cc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c75b020"/>
        <function-ref name="clr" scoped="" ref="0x7f929c75b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f929c7b8020" loc="50:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f929c7b8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c7b8370"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c7b84f8"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c7b8680"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c7b8808"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c7b8990"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c7b8b18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c7b8ca0"/>
        <function-ref name="get" scoped="" ref="0x7f929c7b8e28"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c7b7020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c7b71a8"/>
        <function-ref name="set" scoped="" ref="0x7f929c7b7330"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c7b74b8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c7b7640"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c7b78c8"/>
        <function-ref name="clr" scoped="" ref="0x7f929c7b7a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f929c7a4568" loc="63:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f929c7a4568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c7a48b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c7a4a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c7a4bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c7a4d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c7a3020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c7a31a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c7a3330"/>
        <function-ref name="get" scoped="" ref="0x7f929c7a34b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c7a3640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c7a37c8"/>
        <function-ref name="set" scoped="" ref="0x7f929c7a3950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c7a3ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c7a3c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c7a2020"/>
        <function-ref name="clr" scoped="" ref="0x7f929c7a21a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x7f929c790568" loc="76:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x7f929c790568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c7908b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c790a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c790bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c790d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c78f020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c78f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c78f330"/>
        <function-ref name="get" scoped="" ref="0x7f929c78f4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c78f640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c78f7c8"/>
        <function-ref name="set" scoped="" ref="0x7f929c78f950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c78fad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c78fc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c78e020"/>
        <function-ref name="clr" scoped="" ref="0x7f929c78e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x7f929c77c568" loc="89:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x7f929c77c568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c77c8b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c77ca40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c77cbc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c77cd50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c77a020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c77a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c77a330"/>
        <function-ref name="get" scoped="" ref="0x7f929c77a4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c77a640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c77a7c8"/>
        <function-ref name="set" scoped="" ref="0x7f929c77a950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c77aad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c77ac60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c779020"/>
        <function-ref name="clr" scoped="" ref="0x7f929c7791a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x7f929c74f548" loc="148:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x7f929c74f548"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c74f898"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c74fa20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c74fba8"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c74fd30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c74e020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c74e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c74e330"/>
        <function-ref name="get" scoped="" ref="0x7f929c74e4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c74e640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c74e7c8"/>
        <function-ref name="set" scoped="" ref="0x7f929c74e950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c74ead8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c74ec60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c74d020"/>
        <function-ref name="clr" scoped="" ref="0x7f929c74d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x7f929c738558" loc="161:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x7f929c738558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c7388a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c738a30"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c738bb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c738d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c737020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c7371a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c737330"/>
        <function-ref name="get" scoped="" ref="0x7f929c7374b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c737640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c7377c8"/>
        <function-ref name="set" scoped="" ref="0x7f929c737950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c737ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c737c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c736020"/>
        <function-ref name="clr" scoped="" ref="0x7f929c7361a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x7f929c751560" loc="147:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x7f929c751560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c7518b0"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c751a38"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c751bc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c751d48"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c750020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c7501a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c750330"/>
        <function-ref name="get" scoped="" ref="0x7f929c7504b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c750640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c7507c8"/>
        <function-ref name="set" scoped="" ref="0x7f929c750950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c750ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c750c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c74f020"/>
        <function-ref name="clr" scoped="" ref="0x7f929c74f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x7f929c777568" loc="94:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x7f929c777568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c7778b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c777a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c777bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c777d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c776020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c7761a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c776330"/>
        <function-ref name="get" scoped="" ref="0x7f929c7764b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c776640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c7767c8"/>
        <function-ref name="set" scoped="" ref="0x7f929c776950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c776ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c776c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c775020"/>
        <function-ref name="clr" scoped="" ref="0x7f929c7751a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x7f929c72c558" loc="168:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x7f929c72c558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c72c8a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c72ca30"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c72cbb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c72cd40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c72b020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c72b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c72b330"/>
        <function-ref name="get" scoped="" ref="0x7f929c72b4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c72b640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c72b7c8"/>
        <function-ref name="set" scoped="" ref="0x7f929c72b950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c72bad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c72bc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c72a020"/>
        <function-ref name="clr" scoped="" ref="0x7f929c72a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x7f929c726568" loc="172:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x7f929c726568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c7268b8"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c726a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c726bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c726d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c725020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c7251a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c725330"/>
        <function-ref name="get" scoped="" ref="0x7f929c7254b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c725640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c7257c8"/>
        <function-ref name="set" scoped="" ref="0x7f929c725950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c725ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c725c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c724020"/>
        <function-ref name="clr" scoped="" ref="0x7f929c7241a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x7f929c7595b8" loc="143:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x7f929c7595b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c759d08"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c758020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c7581a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c758330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c7584b8"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c758640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c7587c8"/>
        <function-ref name="get" scoped="" ref="0x7f929c758950"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c758ad8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c758c60"/>
        <function-ref name="set" scoped="" ref="0x7f929c758de8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c757020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c7571a8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c757430"/>
        <function-ref name="clr" scoped="" ref="0x7f929c7575b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f929c722e18" loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f929c722e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c6fb1a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c6fb330"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c6fb4b8"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c6fb640"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c6fb7c8"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c6fb950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c6fbad8"/>
        <function-ref name="get" scoped="" ref="0x7f929c6fbc60"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c6fbde8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c6fa020"/>
        <function-ref name="set" scoped="" ref="0x7f929c6fa1a8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c6fa330"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c6fa4b8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c6fa740"/>
        <function-ref name="clr" scoped="" ref="0x7f929c6fa8c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f929c6f7478" loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f929c6f7478"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c6f77c8"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c6f7950"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c6f7ad8"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c6f7c60"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c6f7de8"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c6f6020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c6f61a8"/>
        <function-ref name="get" scoped="" ref="0x7f929c6f6330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c6f64b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c6f6640"/>
        <function-ref name="set" scoped="" ref="0x7f929c6f67c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c6f6950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c6f6ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c6f6d60"/>
        <function-ref name="clr" scoped="" ref="0x7f929c6f5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f929c6f3ca0" loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f929c6f3ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c6f2020"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c6f21a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c6f2330"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c6f24b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c6f2640"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c6f27c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c6f2950"/>
        <function-ref name="get" scoped="" ref="0x7f929c6f2ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c6f2c60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c6f2de8"/>
        <function-ref name="set" scoped="" ref="0x7f929c6f1020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c6f11a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c6f1330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c6f15b8"/>
        <function-ref name="clr" scoped="" ref="0x7f929c6f1740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f929c6ee3d8" loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f929c6ee3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c6ee728"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c6ee8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c6eea38"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c6eebc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c6eed48"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c6ed020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c6ed1a8"/>
        <function-ref name="get" scoped="" ref="0x7f929c6ed330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c6ed4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c6ed640"/>
        <function-ref name="set" scoped="" ref="0x7f929c6ed7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c6ed950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c6edad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c6edd60"/>
        <function-ref name="clr" scoped="" ref="0x7f929c6ec020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f929c6eaca0" loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f929c6eaca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c6e9020"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c6e91a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c6e9330"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c6e94b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c6e9640"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c6e97c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c6e9950"/>
        <function-ref name="get" scoped="" ref="0x7f929c6e9ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c6e9c60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c6e9de8"/>
        <function-ref name="set" scoped="" ref="0x7f929c6e8020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c6e81a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c6e8330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c6e85b8"/>
        <function-ref name="clr" scoped="" ref="0x7f929c6e8740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f929c6e53d8" loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f929c6e53d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c6e5728"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c6e58b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c6e5a38"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c6e5bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c6e5d48"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c6e4020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c6e41a8"/>
        <function-ref name="get" scoped="" ref="0x7f929c6e4330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c6e44b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c6e4640"/>
        <function-ref name="set" scoped="" ref="0x7f929c6e47c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c6e4950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c6e4ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c6e4d60"/>
        <function-ref name="clr" scoped="" ref="0x7f929c6e3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f929c6e1ca0" loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f929c6e1ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c6e0020"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c6e01a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c6e0330"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c6e04b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c6e0640"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c6e07c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c6e0950"/>
        <function-ref name="get" scoped="" ref="0x7f929c6e0ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c6e0c60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c6e0de8"/>
        <function-ref name="set" scoped="" ref="0x7f929c6df020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c6df1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c6df330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c6df5b8"/>
        <function-ref name="clr" scoped="" ref="0x7f929c6df740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f929c6dc3d8" loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f929c6dc3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c6dc728"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c6dc8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c6dca38"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c6dcbc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c6dcd48"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c6db020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c6db1a8"/>
        <function-ref name="get" scoped="" ref="0x7f929c6db330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c6db4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c6db640"/>
        <function-ref name="set" scoped="" ref="0x7f929c6db7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c6db950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c6dbad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c6dbd60"/>
        <function-ref name="clr" scoped="" ref="0x7f929c6da020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f929c6d7ca0" loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f929c6d7ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c6d6020"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c6d61a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c6d6330"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c6d64b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c6d6640"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c6d67c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c6d6950"/>
        <function-ref name="get" scoped="" ref="0x7f929c6d6ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c6d6c60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c6d6de8"/>
        <function-ref name="set" scoped="" ref="0x7f929c6d5020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c6d51a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c6d5330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c6d55b8"/>
        <function-ref name="clr" scoped="" ref="0x7f929c6d5740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f929c6d23d8" loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f929c6d23d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c6d2728"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c6d28b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c6d2a38"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c6d2bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c6d2d48"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c6d1020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c6d11a8"/>
        <function-ref name="get" scoped="" ref="0x7f929c6d1330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c6d14b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c6d1640"/>
        <function-ref name="set" scoped="" ref="0x7f929c6d17c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c6d1950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c6d1ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c6d1d60"/>
        <function-ref name="clr" scoped="" ref="0x7f929c6d0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f929c6ceca0" loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f929c6ceca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c6cd020"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c6cd1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c6cd330"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c6cd4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c6cd640"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c6cd7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c6cd950"/>
        <function-ref name="get" scoped="" ref="0x7f929c6cdad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c6cdc60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c6cdde8"/>
        <function-ref name="set" scoped="" ref="0x7f929c6cc020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c6cc1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c6cc330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c6cc5b8"/>
        <function-ref name="clr" scoped="" ref="0x7f929c6cc740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f929c6c93d8" loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f929c6c93d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c6c9728"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c6c98b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c6c9a38"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c6c9bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c6c9d48"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c6c8020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c6c81a8"/>
        <function-ref name="get" scoped="" ref="0x7f929c6c8330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c6c84b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c6c8640"/>
        <function-ref name="set" scoped="" ref="0x7f929c6c87c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c6c8950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c6c8ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c6c8d60"/>
        <function-ref name="clr" scoped="" ref="0x7f929c6c7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f929c6c5d08" loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f929c6c5d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c6c40a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c6c4228"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c6c43b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c6c4538"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c6c46c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c6c4848"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c6c49d0"/>
        <function-ref name="get" scoped="" ref="0x7f929c6c4b58"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c6c4ce0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c6c4e68"/>
        <function-ref name="set" scoped="" ref="0x7f929c6c3020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c6c31a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c6c3330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c6c35b8"/>
        <function-ref name="clr" scoped="" ref="0x7f929c6c3740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f929c6c03d8" loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f929c6c03d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c6c0728"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c6c08b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c6c0a38"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c6c0bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c6c0d48"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c6bf020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c6bf1a8"/>
        <function-ref name="get" scoped="" ref="0x7f929c6bf330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c6bf4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c6bf640"/>
        <function-ref name="set" scoped="" ref="0x7f929c6bf7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c6bf950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c6bfad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c6bfd60"/>
        <function-ref name="clr" scoped="" ref="0x7f929c6be020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f929c6bcca0" loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f929c6bcca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c6bb020"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c6bb1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c6bb330"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c6bb4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c6bb640"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c6bb7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c6bb950"/>
        <function-ref name="get" scoped="" ref="0x7f929c6bbad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c6bbc60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c6bbde8"/>
        <function-ref name="set" scoped="" ref="0x7f929c6ba020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c6ba1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c6ba330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c6ba5b8"/>
        <function-ref name="clr" scoped="" ref="0x7f929c6ba740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f929c6b73d8" loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f929c6b73d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c6b7728"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c6b78b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c6b7a38"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c6b7bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c6b7d48"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c6b5020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c6b51a8"/>
        <function-ref name="get" scoped="" ref="0x7f929c6b5330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c6b54b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c6b5640"/>
        <function-ref name="set" scoped="" ref="0x7f929c6b57c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c6b5950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c6b5ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c6b5d60"/>
        <function-ref name="clr" scoped="" ref="0x7f929c6b4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f929c6b2ca0" loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f929c6b2ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c6b1020"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c6b11a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c6b1330"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c6b14b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c6b1640"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c6b17c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c6b1950"/>
        <function-ref name="get" scoped="" ref="0x7f929c6b1ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c6b1c60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c6b1de8"/>
        <function-ref name="set" scoped="" ref="0x7f929c6b0020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c6b01a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c6b0330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c6b05b8"/>
        <function-ref name="clr" scoped="" ref="0x7f929c6b0740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f929c6ad3d8" loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f929c6ad3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c6ad728"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c6ad8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c6ada38"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c6adbc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c6add48"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c6ac020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c6ac1a8"/>
        <function-ref name="get" scoped="" ref="0x7f929c6ac330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c6ac4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c6ac640"/>
        <function-ref name="set" scoped="" ref="0x7f929c6ac7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c6ac950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c6acad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c6acd60"/>
        <function-ref name="clr" scoped="" ref="0x7f929c6ab020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f929c6a9ca0" loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f929c6a9ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c6a8020"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c6a81a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c6a8330"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c6a84b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c6a8640"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c6a87c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c6a8950"/>
        <function-ref name="get" scoped="" ref="0x7f929c6a8ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c6a8c60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c6a8de8"/>
        <function-ref name="set" scoped="" ref="0x7f929c6a7020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c6a71a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c6a7330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c6a75b8"/>
        <function-ref name="clr" scoped="" ref="0x7f929c6a7740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f929c6a43d8" loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f929c6a43d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c6a4728"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c6a48b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c6a4a38"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c6a4bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c6a4d48"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c6a3020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c6a31a8"/>
        <function-ref name="get" scoped="" ref="0x7f929c6a3330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c6a34b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c6a3640"/>
        <function-ref name="set" scoped="" ref="0x7f929c6a37c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c6a3950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c6a3ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c6a3d60"/>
        <function-ref name="clr" scoped="" ref="0x7f929c6a2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f929c6a0ca0" loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f929c6a0ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c69f020"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c69f1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c69f330"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c69f4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c69f640"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c69f7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c69f950"/>
        <function-ref name="get" scoped="" ref="0x7f929c69fad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c69fc60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c69fde8"/>
        <function-ref name="set" scoped="" ref="0x7f929c69e020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c69e1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c69e330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c69e5b8"/>
        <function-ref name="clr" scoped="" ref="0x7f929c69e740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f929c69b3d8" loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f929c69b3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c69b728"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c69b8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c69ba38"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c69bbc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c69bd48"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c69a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c69a1a8"/>
        <function-ref name="get" scoped="" ref="0x7f929c69a330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c69a4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c69a640"/>
        <function-ref name="set" scoped="" ref="0x7f929c69a7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c69a950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c69aad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c69ad60"/>
        <function-ref name="clr" scoped="" ref="0x7f929c699020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f929c697ca0" loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f929c697ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c696020"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c6961a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c696330"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c6964b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c696640"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c6967c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c696950"/>
        <function-ref name="get" scoped="" ref="0x7f929c696ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c696c60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c696de8"/>
        <function-ref name="set" scoped="" ref="0x7f929c695020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c6951a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c695330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c6955b8"/>
        <function-ref name="clr" scoped="" ref="0x7f929c695740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f929c6923d8" loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f929c6923d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c692728"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c6928b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c692a38"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c692bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c692d48"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c690020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c6901a8"/>
        <function-ref name="get" scoped="" ref="0x7f929c690330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c6904b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c690640"/>
        <function-ref name="set" scoped="" ref="0x7f929c6907c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c690950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c690ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c690d60"/>
        <function-ref name="clr" scoped="" ref="0x7f929c68f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f929c68ddd8" loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f929c68ddd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c68c170"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c68c2f8"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c68c480"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c68c608"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c68c790"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c68c918"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c68caa0"/>
        <function-ref name="get" scoped="" ref="0x7f929c68cc28"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c68cdb0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c68b020"/>
        <function-ref name="set" scoped="" ref="0x7f929c68b1a8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c68b330"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c68b4b8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c68b740"/>
        <function-ref name="clr" scoped="" ref="0x7f929c68b8c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f929c688478" loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f929c688478"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c6887c8"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c688950"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c688ad8"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c688c60"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c688de8"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c687020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c6871a8"/>
        <function-ref name="get" scoped="" ref="0x7f929c687330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c6874b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c687640"/>
        <function-ref name="set" scoped="" ref="0x7f929c6877c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c687950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c687ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c687d60"/>
        <function-ref name="clr" scoped="" ref="0x7f929c686020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f929c684ca0" loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f929c684ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c683020"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c6831a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c683330"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c6834b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c683640"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c6837c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c683950"/>
        <function-ref name="get" scoped="" ref="0x7f929c683ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c683c60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c683de8"/>
        <function-ref name="set" scoped="" ref="0x7f929c682020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c6821a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c682330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c6825b8"/>
        <function-ref name="clr" scoped="" ref="0x7f929c682740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f929c67f3d8" loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f929c67f3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c67f728"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c67f8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c67fa38"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c67fbc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c67fd48"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c67e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c67e1a8"/>
        <function-ref name="get" scoped="" ref="0x7f929c67e330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c67e4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c67e640"/>
        <function-ref name="set" scoped="" ref="0x7f929c67e7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c67e950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c67ead8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c67ed60"/>
        <function-ref name="clr" scoped="" ref="0x7f929c67d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f929c67bca0" loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f929c67bca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c67a020"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c67a1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c67a330"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c67a4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c67a640"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c67a7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c67a950"/>
        <function-ref name="get" scoped="" ref="0x7f929c67aad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c67ac60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c67ade8"/>
        <function-ref name="set" scoped="" ref="0x7f929c679020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c6791a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c679330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c6795b8"/>
        <function-ref name="clr" scoped="" ref="0x7f929c679740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f929c6763d8" loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f929c6763d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c676728"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c6768b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c676a38"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c676bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c676d48"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c675020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c6751a8"/>
        <function-ref name="get" scoped="" ref="0x7f929c675330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c6754b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c675640"/>
        <function-ref name="set" scoped="" ref="0x7f929c6757c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c675950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c675ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c675d60"/>
        <function-ref name="clr" scoped="" ref="0x7f929c674020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f929c672ca0" loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f929c672ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c671020"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c6711a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c671330"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c6714b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c671640"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c6717c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c671950"/>
        <function-ref name="get" scoped="" ref="0x7f929c671ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c671c60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c671de8"/>
        <function-ref name="set" scoped="" ref="0x7f929c670020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c6701a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c670330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c6705b8"/>
        <function-ref name="clr" scoped="" ref="0x7f929c670740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f929c66c3d8" loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f929c66c3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c66c728"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c66c8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c66ca38"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c66cbc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c66cd48"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c66b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c66b1a8"/>
        <function-ref name="get" scoped="" ref="0x7f929c66b330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c66b4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c66b640"/>
        <function-ref name="set" scoped="" ref="0x7f929c66b7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c66b950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c66bad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c66bd60"/>
        <function-ref name="clr" scoped="" ref="0x7f929c66a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f929c668ca0" loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f929c668ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c667020"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c6671a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c667330"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c6674b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c667640"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c6677c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c667950"/>
        <function-ref name="get" scoped="" ref="0x7f929c667ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c667c60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c667de8"/>
        <function-ref name="set" scoped="" ref="0x7f929c666020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c6661a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c666330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c6665b8"/>
        <function-ref name="clr" scoped="" ref="0x7f929c666740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f929c6633d8" loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f929c6633d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c663728"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c6638b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c663a38"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c663bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c663d48"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c662020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c6621a8"/>
        <function-ref name="get" scoped="" ref="0x7f929c662330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c6624b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c662640"/>
        <function-ref name="set" scoped="" ref="0x7f929c6627c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c662950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c662ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c662d60"/>
        <function-ref name="clr" scoped="" ref="0x7f929c661020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f929c65fca0" loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f929c65fca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c65e020"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c65e1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c65e330"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c65e4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c65e640"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c65e7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c65e950"/>
        <function-ref name="get" scoped="" ref="0x7f929c65ead8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c65ec60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c65ede8"/>
        <function-ref name="set" scoped="" ref="0x7f929c65d020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c65d1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c65d330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c65d5b8"/>
        <function-ref name="clr" scoped="" ref="0x7f929c65d740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f929c65a3d8" loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f929c65a3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c65a728"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c65a8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c65aa38"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c65abc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c65ad48"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c659020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c6591a8"/>
        <function-ref name="get" scoped="" ref="0x7f929c659330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c6594b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c659640"/>
        <function-ref name="set" scoped="" ref="0x7f929c6597c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c659950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c659ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c659d60"/>
        <function-ref name="clr" scoped="" ref="0x7f929c658020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f929c656ca0" loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f929c656ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c655020"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c6551a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c655330"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c6554b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c655640"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c6557c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c655950"/>
        <function-ref name="get" scoped="" ref="0x7f929c655ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c655c60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c655de8"/>
        <function-ref name="set" scoped="" ref="0x7f929c654020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c6541a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c654330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c6545b8"/>
        <function-ref name="clr" scoped="" ref="0x7f929c654740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f929c6513d8" loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f929c6513d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c651728"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c6518b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c651a38"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c651bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c651d48"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c650020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c6501a8"/>
        <function-ref name="get" scoped="" ref="0x7f929c650330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c6504b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c650640"/>
        <function-ref name="set" scoped="" ref="0x7f929c6507c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c650950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c650ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c650d60"/>
        <function-ref name="clr" scoped="" ref="0x7f929c64f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f929c64dca0" loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f929c64dca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c64b020"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c64b1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c64b330"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c64b4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c64b640"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c64b7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c64b950"/>
        <function-ref name="get" scoped="" ref="0x7f929c64bad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c64bc60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c64bde8"/>
        <function-ref name="set" scoped="" ref="0x7f929c64a020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c64a1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c64a330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c64a5b8"/>
        <function-ref name="clr" scoped="" ref="0x7f929c64a740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f929c6473d8" loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f929c6473d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c647728"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c6478b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c647a38"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c647bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c647d48"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c646020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c6461a8"/>
        <function-ref name="get" scoped="" ref="0x7f929c646330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c6464b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c646640"/>
        <function-ref name="set" scoped="" ref="0x7f929c6467c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c646950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c646ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c646d60"/>
        <function-ref name="clr" scoped="" ref="0x7f929c645020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f929c643ca0" loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f929c643ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c642020"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c6421a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c642330"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c6424b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c642640"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c6427c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c642950"/>
        <function-ref name="get" scoped="" ref="0x7f929c642ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c642c60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c642de8"/>
        <function-ref name="set" scoped="" ref="0x7f929c641020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c6411a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c641330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c6415b8"/>
        <function-ref name="clr" scoped="" ref="0x7f929c641740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f929c63e3d8" loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f929c63e3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c63e728"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c63e8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c63ea38"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c63ebc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c63ed48"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c63d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c63d1a8"/>
        <function-ref name="get" scoped="" ref="0x7f929c63d330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c63d4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c63d640"/>
        <function-ref name="set" scoped="" ref="0x7f929c63d7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c63d950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c63dad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c63dd60"/>
        <function-ref name="clr" scoped="" ref="0x7f929c63c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f929c63aca0" loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f929c63aca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c639020"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c6391a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c639330"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c6394b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c639640"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c6397c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c639950"/>
        <function-ref name="get" scoped="" ref="0x7f929c639ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c639c60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c639de8"/>
        <function-ref name="set" scoped="" ref="0x7f929c638020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c6381a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c638330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c6385b8"/>
        <function-ref name="clr" scoped="" ref="0x7f929c638740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f929c6353d8" loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f929c6353d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c635728"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c6358b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c635a38"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c635bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c635d48"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c634020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c6341a8"/>
        <function-ref name="get" scoped="" ref="0x7f929c634330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c6344b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c634640"/>
        <function-ref name="set" scoped="" ref="0x7f929c6347c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c634950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c634ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c634d60"/>
        <function-ref name="clr" scoped="" ref="0x7f929c633020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f929c631ca0" loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f929c631ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c630020"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c6301a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c630330"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c6304b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c630640"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c6307c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c630950"/>
        <function-ref name="get" scoped="" ref="0x7f929c630ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c630c60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c630de8"/>
        <function-ref name="set" scoped="" ref="0x7f929c62f020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c62f1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c62f330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c62f5b8"/>
        <function-ref name="clr" scoped="" ref="0x7f929c62f740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f929c62c3d8" loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f929c62c3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c62c728"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c62c8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c62ca38"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c62cbc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c62cd48"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c62b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c62b1a8"/>
        <function-ref name="get" scoped="" ref="0x7f929c62b330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c62b4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c62b640"/>
        <function-ref name="set" scoped="" ref="0x7f929c62b7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c62b950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c62bad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c62bd60"/>
        <function-ref name="clr" scoped="" ref="0x7f929c62a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f929c628ca0" loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f929c628ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c626020"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c6261a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c626330"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c6264b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c626640"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c6267c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c626950"/>
        <function-ref name="get" scoped="" ref="0x7f929c626ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c626c60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c626de8"/>
        <function-ref name="set" scoped="" ref="0x7f929c625020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c6251a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c625330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c6255b8"/>
        <function-ref name="clr" scoped="" ref="0x7f929c625740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f929c6223d8" loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f929c6223d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c622728"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c6228b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c622a38"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c622bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c622d48"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c621020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c6211a8"/>
        <function-ref name="get" scoped="" ref="0x7f929c621330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c6214b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c621640"/>
        <function-ref name="set" scoped="" ref="0x7f929c6217c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c621950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c621ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c621d60"/>
        <function-ref name="clr" scoped="" ref="0x7f929c620020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f929c5c3da0" loc="44:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f929c5c3da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c5b2170"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c5b22f8"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c5b2480"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c5b2608"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c5b2790"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c5b2918"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c5b2aa0"/>
        <function-ref name="get" scoped="" ref="0x7f929c5b2c28"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c5b2db0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c5b1020"/>
        <function-ref name="set" scoped="" ref="0x7f929c5b11a8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c5b1330"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c5b14b8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c5b1740"/>
        <function-ref name="clr" scoped="" ref="0x7f929c5b18c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f929c5c4c30" loc="43:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f929c5c4c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c5c3020"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c5c31a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c5c3330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c5c34b8"/>
        <function-ref name="get" scoped="" ref="0x7f929c5c3640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c5c37c8"/>
        <function-ref name="set" scoped="" ref="0x7f929c5c3950"/>
        <function-ref name="clr" scoped="" ref="0x7f929c5c3ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f929c5ae5f8" loc="44:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f929c5ae5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c5ae948"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c5aead0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c5aec58"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c5aede0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c5ad020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c5ad1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c5ad330"/>
        <function-ref name="get" scoped="" ref="0x7f929c5ad4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c5ad640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c5ad7c8"/>
        <function-ref name="set" scoped="" ref="0x7f929c5ad950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c5adad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c5adc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c5ac020"/>
        <function-ref name="clr" scoped="" ref="0x7f929c5ac1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f929c5af448" loc="43:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f929c5af448"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c5af798"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c5af920"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c5afaa8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c5afc30"/>
        <function-ref name="get" scoped="" ref="0x7f929c5afdb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c5ae020"/>
        <function-ref name="set" scoped="" ref="0x7f929c5ae1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f929c5ae330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f929c5aae20" loc="44:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f929c5aae20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c5a91a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c5a9330"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c5a94b8"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c5a9640"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c5a97c8"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c5a9950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c5a9ad8"/>
        <function-ref name="get" scoped="" ref="0x7f929c5a9c60"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c5a9de8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c5a8020"/>
        <function-ref name="set" scoped="" ref="0x7f929c5a81a8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c5a8330"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c5a84b8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c5a8740"/>
        <function-ref name="clr" scoped="" ref="0x7f929c5a88c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f929c5abcd0" loc="43:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f929c5abcd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c5aa0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c5aa228"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c5aa3b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c5aa538"/>
        <function-ref name="get" scoped="" ref="0x7f929c5aa6c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c5aa848"/>
        <function-ref name="set" scoped="" ref="0x7f929c5aa9d0"/>
        <function-ref name="clr" scoped="" ref="0x7f929c5aab58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f929c59b020" loc="61:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f929c59b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f929c59b370"/>
        <function-ref name="stopDone" scoped="" ref="0x7f929c59b4f8"/>
        <function-ref name="start" scoped="" ref="0x7f929c59b680"/>
        <function-ref name="stop" scoped="" ref="0x7f929c59b808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f929c59a020" loc="63:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f929c59a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f929cab6908"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f929c59a370"/>
        <function-ref name="getPayload" scoped="" ref="0x7f929c59a4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f929c59a680"/>
        <function-ref name="cancel" scoped="" ref="0x7f929c59a808"/>
        <function-ref name="sendDone" scoped="" ref="0x7f929c59a990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f929c599d10" loc="65:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f929c599d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f929cab6908"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f929c5980a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f929c598328" loc="67:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f929c598328"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f929c598678"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f929c598800"/>
        <function-ref name="getPayload" scoped="" ref="0x7f929c598988"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f929c598b10"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f929c598c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f929c594020" loc="70:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f929c594020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f929c8d3020"/>
            <typename><typedef-ref name="T32khz" ref="0x7f929c8d3378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f929d8b1020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f929c58f478"/>
        <function-ref name="clear" scoped="" ref="0x7f929c58fb58"/>
        <function-ref name="isValid" scoped="" ref="0x7f929c594d70"/>
        <function-ref name="set" scoped="" ref="0x7f929c586278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f929c57b848" loc="72:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f929c57b848"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f929c57bb98"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f929c57bd20"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f929c581020"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f929c5811a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f929c5991c8" loc="64:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f929c5991c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f929cab6908"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f929c599518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f929c595020" loc="69:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f929c595020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f929c595370"/>
        <function-ref name="noAck" scoped="" ref="0x7f929c5954f8"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f929c595680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f929c597020" loc="68:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f929c597020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f929c597370"/>
        <function-ref name="source" scoped="" ref="0x7f929c5974f8"/>
        <function-ref name="address" scoped="" ref="0x7f929c597680"/>
        <function-ref name="destination" scoped="" ref="0x7f929c597808"/>
        <function-ref name="setSource" scoped="" ref="0x7f929c597990"/>
        <function-ref name="setDestination" scoped="" ref="0x7f929c597b18"/>
        <function-ref name="type" scoped="" ref="0x7f929c597ca0"/>
        <function-ref name="setType" scoped="" ref="0x7f929c597e28"/>
        <function-ref name="isForMe" scoped="" ref="0x7f929c596020"/>
        <function-ref name="setGroup" scoped="" ref="0x7f929c5961a8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f929c596330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f929c586e48" loc="71:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f929c586e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f929c8d4828"/>
            <typename><typedef-ref name="TMilli" ref="0x7f929c8d4b80"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f929d8b1020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f929c584300"/>
        <function-ref name="clear" scoped="" ref="0x7f929c5849e0"/>
        <function-ref name="isValid" scoped="" ref="0x7f929c585be8"/>
        <function-ref name="set" scoped="" ref="0x7f929c5820f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f929c56f310" loc="55:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f929c56f310"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f929c56f660"/>
        <function-ref name="stopDone" scoped="" ref="0x7f929c56f7e8"/>
        <function-ref name="start" scoped="" ref="0x7f929c56f970"/>
        <function-ref name="stop" scoped="" ref="0x7f929c56faf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f929c55c700" loc="64:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f929c55c700"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f929cab6908"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f929c55ca50"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f929c55cbd8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f929c55cd60"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f929c565020"/>
        <function-ref name="setCca" scoped="" ref="0x7f929c5651a8"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f929c565330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f929c55a1c8" loc="67:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7f929c55a1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f929cab6908"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f929c55a618"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f929c56abd8" loc="60:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f929c56abd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f929c569020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f929c5691a8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f929c569330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f929c5694b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f929c569640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f929c56e2b0" loc="56:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f929c56e2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f929cab6908"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f929c56e600"/>
        <function-ref name="getPayload" scoped="" ref="0x7f929c56e788"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f929c56e910"/>
        <function-ref name="cancel" scoped="" ref="0x7f929c56ea98"/>
        <function-ref name="sendDone" scoped="" ref="0x7f929c56ec20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f929c56b020" loc="58:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f929c56b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f929cab6908"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f929c56b370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f929c569908" loc="61:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f929c569908"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f929c569c58"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f929c569de0"/>
        <function-ref name="getRssi" scoped="" ref="0x7f929c568020"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f929c5681a8"/>
        <function-ref name="getPower" scoped="" ref="0x7f929c568330"/>
        <function-ref name="getLqi" scoped="" ref="0x7f929c5684b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f929c565628" loc="65:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f929c565628"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f929c565978"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f929c565b00"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f929c565c88"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f929c565e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f929c56c3c8" loc="57:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f929c56c3c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f929cab6908"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f929c56c718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f929c5687e0" loc="62:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f929c5687e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f929c568b30"/>
        <function-ref name="noAck" scoped="" ref="0x7f929c568cb8"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f929c568e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f929c552450" loc="66:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f929c552450"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f929c5527a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7f929c552928"/>
        <function-ref name="getRetries" scoped="" ref="0x7f929c552ab0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f929c552c38"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f929c552dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f929c56b610" loc="59:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f929c56b610"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f929c56b960"/>
        <function-ref name="source" scoped="" ref="0x7f929c56bae8"/>
        <function-ref name="address" scoped="" ref="0x7f929c56bc70"/>
        <function-ref name="destination" scoped="" ref="0x7f929c56bdf8"/>
        <function-ref name="setSource" scoped="" ref="0x7f929c56a020"/>
        <function-ref name="setDestination" scoped="" ref="0x7f929c56a1a8"/>
        <function-ref name="type" scoped="" ref="0x7f929c56a330"/>
        <function-ref name="setType" scoped="" ref="0x7f929c56a4b8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f929c56a640"/>
        <function-ref name="setGroup" scoped="" ref="0x7f929c56a7c8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f929c56a950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f929c5647b0" loc="63:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f929c5647b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f929c564b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f929c54c020" loc="43:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f929c54c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f929c54c370"/>
        <function-ref name="stopDone" scoped="" ref="0x7f929c54c4f8"/>
        <function-ref name="start" scoped="" ref="0x7f929c54c680"/>
        <function-ref name="stop" scoped="" ref="0x7f929c54c808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f929c539020" loc="55:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f929c539020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f929c539370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f929c538128" loc="57:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f929c538128"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f929c538478"/>
        <function-ref name="setRetries" scoped="" ref="0x7f929c538600"/>
        <function-ref name="getRetries" scoped="" ref="0x7f929c538788"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f929c538910"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f929c538a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f929c53c7e8" loc="53:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f929c53c7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f929c53cb38"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f929c53ccc0"/>
        <function-ref name="getRssi" scoped="" ref="0x7f929c53ce48"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f929c53a020"/>
        <function-ref name="getPower" scoped="" ref="0x7f929c53a1a8"/>
        <function-ref name="getLqi" scoped="" ref="0x7f929c53a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f929c5444c8" loc="50:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f929c5444c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f929c544818"/>
        <function-ref name="getPayload" scoped="" ref="0x7f929c5449a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f929c544b28"/>
        <function-ref name="cancel" scoped="" ref="0x7f929c544cb0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f929c544e38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f929c539668" loc="56:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f929c539668"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f929c5399b8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f929c539b40"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f929c539cc8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f929c539e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f929c545020" loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7f929c545020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f929c545370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f929c53a658" loc="54:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f929c53a658"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f929c53a9a8"/>
        <function-ref name="noAck" scoped="" ref="0x7f929c53ab30"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f929c53acb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f929c54b340" loc="45:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f929c54b340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f929c54b690"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f929c54b818"/>
        <function-ref name="request" scoped="" ref="0x7f929c54b9a0"/>
        <function-ref name="granted" scoped="" ref="0x7f929c54bb28"/>
        <function-ref name="isOwner" scoped="" ref="0x7f929c54bcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f929c53b330" loc="46:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7f929c53b330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f929c53b680"/>
        <function-ref name="getPayload" scoped="" ref="0x7f929c53b808"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f929c53b990"/>
        <function-ref name="cancel" scoped="" ref="0x7f929c53bb18"/>
        <function-ref name="sendDone" scoped="" ref="0x7f929c53bca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f929c5456a0" loc="48:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f929c5456a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f929c5459f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f929c545b78"/>
        <function-ref name="getPayload" scoped="" ref="0x7f929c545d00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f929c544020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f929c5441a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f929c53c1d0" loc="51:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f929c53c1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f929c53c520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f929c537780" loc="44:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f929c537780"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f929c537ad0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f929c537c58"/>
        <function-ref name="start" scoped="" ref="0x7f929c537de0"/>
        <function-ref name="stop" scoped="" ref="0x7f929c534020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f929c533678" loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f929c533678"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f929c5339c8"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f929c533b50"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f929c533cd8"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f929c533e60"/>
        <function-ref name="setCca" scoped="" ref="0x7f929c531020"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f929c5311a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f929c5342d8" loc="45:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f929c5342d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f929c534628"/>
        <function-ref name="getPayload" scoped="" ref="0x7f929c5347b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f929c534938"/>
        <function-ref name="cancel" scoped="" ref="0x7f929c534ac0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f929c534c48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f929c533020" loc="46:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f929c533020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f929c533370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f929c52e140" loc="39:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f929c52e140"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f929c52e490"/>
        <function-ref name="stopDone" scoped="" ref="0x7f929c52e618"/>
        <function-ref name="start" scoped="" ref="0x7f929c52e7a0"/>
        <function-ref name="stop" scoped="" ref="0x7f929c52e928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f929c52d948" loc="41:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f929c52d948"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f929c52dc98"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f929c52de20"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f929c52c020"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f929c52c1a8"/>
        <function-ref name="setCca" scoped="" ref="0x7f929c52c330"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f929c52c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7f929c529a70" loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7f929c529a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f929c529dc0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f929c523020"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f929c5231a8"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f929c523330"/>
        <function-ref name="setCca" scoped="" ref="0x7f929c5234b8"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f929c523640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f929c518c58" loc="50:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f929c518c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f929c516020"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f929c5161a8"/>
        <function-ref name="getRssi" scoped="" ref="0x7f929c516330"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f929c5164b8"/>
        <function-ref name="getPower" scoped="" ref="0x7f929c516640"/>
        <function-ref name="getLqi" scoped="" ref="0x7f929c5167c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x7f929c51bcc8" loc="46:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7f929c51bcc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f929c5290a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f929c529228"/>
        <function-ref name="modify" scoped="" ref="0x7f929c5293b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f929c529538"/>
        <function-ref name="resend" scoped="" ref="0x7f929c5296c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f929c52ebe0" loc="40:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f929c52ebe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f929c52d020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f929c52d1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f929c52d330"/>
        <function-ref name="cancel" scoped="" ref="0x7f929c52d4b8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f929c52d640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f929c517d58" loc="48:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f929c517d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f929c5190d8"/>
        <function-ref name="rand32" scoped="" ref="0x7f929c519260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f929c521500" loc="45:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7f929c521500"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f929c521850"/>
        <function-ref name="stop" scoped="" ref="0x7f929c5219d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f929c515020" loc="51:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f929c515020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f929c515370"/>
        <function-ref name="getHeader" scoped="" ref="0x7f929c5154f8"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f929c515680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x7f929c524a78" loc="44:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f929c524a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f929c524dc8"/>
        <function-ref name="rfOff" scoped="" ref="0x7f929c52a020"/>
        <function-ref name="rxOn" scoped="" ref="0x7f929c52a1a8"/>
        <function-ref name="startVReg" scoped="" ref="0x7f929c52a330"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f929c52a4b8"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f929c52a640"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f929c52a7c8"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f929c52a950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f929c519518" loc="49:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f929c519518"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f929c519868"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f929c5199f0"/>
        <function-ref name="led1On" scoped="" ref="0x7f929c519b78"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f929c519d00"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f929c518020"/>
        <function-ref name="get" scoped="" ref="0x7f929c5181a8"/>
        <function-ref name="led1Off" scoped="" ref="0x7f929c518330"/>
        <function-ref name="led2Off" scoped="" ref="0x7f929c518950"/>
        <function-ref name="set" scoped="" ref="0x7f929c5184b8"/>
        <function-ref name="led0On" scoped="" ref="0x7f929c518640"/>
        <function-ref name="led2On" scoped="" ref="0x7f929c5187c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f929c52c798" loc="43:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f929c52c798"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f929c52cae8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f929c52cc70"/>
        <function-ref name="request" scoped="" ref="0x7f929c52cdf8"/>
        <function-ref name="granted" scoped="" ref="0x7f929c52b020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f929c52b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x7f929c50a3e8" loc="52:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControlState" scoped="" ref="0x7f929c50a3e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f929c50a838"/>
        <function-ref name="toIdle" scoped="" ref="0x7f929c50a9c0"/>
        <function-ref name="isState" scoped="" ref="0x7f929c50ab48"/>
        <function-ref name="isIdle" scoped="" ref="0x7f929c50acd0"/>
        <function-ref name="requestState" scoped="" ref="0x7f929c50ae58"/>
        <function-ref name="forceState" scoped="" ref="0x7f929c514020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x7f929c506988" loc="76:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDone_task" scoped="" ref="0x7f929c506988"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f929c506cd8"/>
        <function-ref name="runTask" scoped="" ref="0x7f929c506e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x7f929c507b30" loc="75:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDone_task" scoped="" ref="0x7f929c507b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f929c507e80"/>
        <function-ref name="runTask" scoped="" ref="0x7f929c506030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x7f929c509c00" loc="74:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDone_task" scoped="" ref="0x7f929c509c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f929c507020"/>
        <function-ref name="runTask" scoped="" ref="0x7f929c5071a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7f929c4b2aa8" loc="45:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f929c4b2aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f929c4b2df8"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f929c4be020"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f929c4be1a8"/>
        <function-ref name="syncDone" scoped="" ref="0x7f929c4be330"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f929c4be4b8"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f929c4be640"/>
        <function-ref name="setChannel" scoped="" ref="0x7f929c4be7c8"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f929c4be950"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f929c4bead8"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f929c4bec60"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f929c4bede8"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f929c4bd020"/>
        <function-ref name="sync" scoped="" ref="0x7f929c4bd1a8"/>
        <function-ref name="getChannel" scoped="" ref="0x7f929c4bd430"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f929c4bd5b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7f929c4b0c78" loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7f929c4b0c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929c4af7e8"/>
        <function-ref name="readDone" scoped="" ref="0x7f929c4afc38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7f929c4bd8b0" loc="46:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f929c4bd8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f929c4bdc00"/>
        <function-ref name="rfOff" scoped="" ref="0x7f929c4bdd88"/>
        <function-ref name="rxOn" scoped="" ref="0x7f929c4b0020"/>
        <function-ref name="startVReg" scoped="" ref="0x7f929c4b01a8"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f929c4b0330"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f929c4b04b8"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f929c4b0640"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f929c4b07c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f929c4c2b80" loc="44:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f929c4c2b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f929c4bf020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f929c4bf1a8"/>
        <function-ref name="request" scoped="" ref="0x7f929c4bf330"/>
        <function-ref name="granted" scoped="" ref="0x7f929c4bf4b8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f929c4bf640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7f929c4aa328" loc="46:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f929c4aa328"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f929c4aa678"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f929c4aa800"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f929c4aa988"/>
        <function-ref name="syncDone" scoped="" ref="0x7f929c4aab10"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f929c4aac98"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f929c4aae20"/>
        <function-ref name="setChannel" scoped="" ref="0x7f929c4a9020"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f929c4a91a8"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f929c4a9330"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f929c4a94b8"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f929c4a9640"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f929c4a97c8"/>
        <function-ref name="sync" scoped="" ref="0x7f929c4a9950"/>
        <function-ref name="getChannel" scoped="" ref="0x7f929c4a9bd8"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f929c4a9d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x7f929c4839d0" loc="66:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f929c4839d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929c483d20"/>
        <function-ref name="write" scoped="" ref="0x7f929c482020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x7f929c4a27f0" loc="50:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f929c4a27f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f929c4a2b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x7f929c4a3060" loc="52:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StartupTimer" scoped="" ref="0x7f929c4a3060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f929c8d3020"/>
            <typename><typedef-ref name="T32khz" ref="0x7f929c8d3378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f929d8b1020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f929c49a690"/>
        <function-ref name="fired" scoped="" ref="0x7f929c4a0738"/>
        <function-ref name="startAt" scoped="" ref="0x7f929c49a088"/>
        <function-ref name="isRunning" scoped="" ref="0x7f929c4a0bc0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f929c49ab18"/>
        <function-ref name="start" scoped="" ref="0x7f929c4a3db0"/>
        <function-ref name="stop" scoped="" ref="0x7f929c4a02b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x7f929c4868a8" loc="64:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f929c4868a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929c486bf8"/>
        <function-ref name="write" scoped="" ref="0x7f929c486d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x7f929c4971b0" loc="54:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7f929c4971b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c497500"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c497688"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c497810"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c497998"/>
        <function-ref name="get" scoped="" ref="0x7f929c497b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c497ca8"/>
        <function-ref name="set" scoped="" ref="0x7f929c497e30"/>
        <function-ref name="clr" scoped="" ref="0x7f929c496020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7f929c4a74d0" loc="48:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7f929c4a74d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929c4a6088"/>
        <function-ref name="readDone" scoped="" ref="0x7f929c4a64d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x7f929c4713f0" loc="126:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="syncDone" scoped="" ref="0x7f929c4713f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f929c471740"/>
        <function-ref name="runTask" scoped="" ref="0x7f929c4718c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x7f929c4823a8" loc="67:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f929c4823a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929c4826f8"/>
        <function-ref name="write" scoped="" ref="0x7f929c482880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7f929c482c18" loc="68:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f929c482c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929c481020"/>
        <function-ref name="write" scoped="" ref="0x7f929c4811a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x7f929c487708" loc="62:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f929c487708"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929c487a58"/>
        <function-ref name="write" scoped="" ref="0x7f929c487be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f929c48c170" loc="57:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f929c48c170"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f929c48c4c0"/>
        <function-ref name="changed" scoped="" ref="0x7f929c48c648"/>
        <function-ref name="amGroup" scoped="" ref="0x7f929c48c7d0"/>
        <function-ref name="setAddress" scoped="" ref="0x7f929c48c958"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f929c498020" loc="53:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f929c498020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c498370"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c4984f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c498680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c498808"/>
        <function-ref name="get" scoped="" ref="0x7f929c498990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c498b18"/>
        <function-ref name="set" scoped="" ref="0x7f929c498ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f929c498e28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x7f929c4803c0" loc="71:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f929c4803c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f929c480910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x7f929c496378" loc="55:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7f929c496378"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c4966c8"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c496850"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c4969d8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c496b60"/>
        <function-ref name="get" scoped="" ref="0x7f929c496ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c496e70"/>
        <function-ref name="set" scoped="" ref="0x7f929c495020"/>
        <function-ref name="clr" scoped="" ref="0x7f929c4951a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f929c4ab020" loc="44:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f929c4ab020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f929c4ab370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7f929c483158" loc="65:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f929c483158"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929c4834a8"/>
        <function-ref name="write" scoped="" ref="0x7f929c483630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x7f929c480ca0" loc="72:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f929c480ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f929c47f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f929c47f3b0" loc="74:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f929c47f3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f929c47f700"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f929c47f888"/>
        <function-ref name="request" scoped="" ref="0x7f929c47fa10"/>
        <function-ref name="granted" scoped="" ref="0x7f929c47fb98"/>
        <function-ref name="isOwner" scoped="" ref="0x7f929c47fd20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x7f929c47de50" loc="76:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncResource" scoped="" ref="0x7f929c47de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f929c47c1e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f929c47c370"/>
        <function-ref name="request" scoped="" ref="0x7f929c47c4f8"/>
        <function-ref name="granted" scoped="" ref="0x7f929c47c680"/>
        <function-ref name="isOwner" scoped="" ref="0x7f929c47c808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7f929c4a8080" loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f929c4a8080"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f929c4a83d0"/>
        <function-ref name="rfOff" scoped="" ref="0x7f929c4a8558"/>
        <function-ref name="rxOn" scoped="" ref="0x7f929c4a86e0"/>
        <function-ref name="startVReg" scoped="" ref="0x7f929c4a8868"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f929c4a89f0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f929c4a8b78"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f929c4a8d00"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f929c4a7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x7f929c486020" loc="63:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f929c486020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929c486370"/>
        <function-ref name="write" scoped="" ref="0x7f929c4864f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x7f929c485e60" loc="61:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f929c485e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929c4871e8"/>
        <function-ref name="write" scoped="" ref="0x7f929c487370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x7f929c47e460" loc="69:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f929c47e460"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f929c47e7b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f929c47cac0" loc="78:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f929c47cac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f929c47ce10"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f929c47b020"/>
        <function-ref name="led1On" scoped="" ref="0x7f929c47b1a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f929c47b330"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f929c47b4b8"/>
        <function-ref name="get" scoped="" ref="0x7f929c47b640"/>
        <function-ref name="led1Off" scoped="" ref="0x7f929c47b7c8"/>
        <function-ref name="led2Off" scoped="" ref="0x7f929c47bde8"/>
        <function-ref name="set" scoped="" ref="0x7f929c47b950"/>
        <function-ref name="led0On" scoped="" ref="0x7f929c47bad8"/>
        <function-ref name="led2On" scoped="" ref="0x7f929c47bc60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x7f929c472598" loc="125:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sync" scoped="" ref="0x7f929c472598"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f929c4728e8"/>
        <function-ref name="runTask" scoped="" ref="0x7f929c472a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f929c4ab650" loc="45:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f929c4ab650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f929c4ab9a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f929c4abb28"/>
        <function-ref name="request" scoped="" ref="0x7f929c4abcb0"/>
        <function-ref name="granted" scoped="" ref="0x7f929c4abe38"/>
        <function-ref name="isOwner" scoped="" ref="0x7f929c4aa020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x7f929c493958" loc="60:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f929c493958"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929c493ca8"/>
        <function-ref name="write" scoped="" ref="0x7f929c493e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x7f929c493020" loc="59:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f929c493020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929c493470"/>
        <function-ref name="write" scoped="" ref="0x7f929c4935f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x7f929c491b78" loc="56:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7f929c491b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f929c494020"/>
        <function-ref name="disable" scoped="" ref="0x7f929c4941a8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f929c494330"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f929c4944b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x7f929c47d140" loc="75:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RssiResource" scoped="" ref="0x7f929c47d140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f929c47d490"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f929c47d618"/>
        <function-ref name="request" scoped="" ref="0x7f929c47d7a0"/>
        <function-ref name="granted" scoped="" ref="0x7f929c47d928"/>
        <function-ref name="isOwner" scoped="" ref="0x7f929c47dab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x7f929c47eb38" loc="70:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f929c47eb38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f929c480020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f929c3fd3e0" loc="45:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f929c3fd3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f929c3fd730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7f929c3fdd58" loc="46:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7f929c3fdd58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f929c8d3020"/>
            <typename><typedef-ref name="T32khz" ref="0x7f929c8d3378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f929d8b1020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f929c3fa410"/>
        <function-ref name="fired" scoped="" ref="0x7f929c3fb4a8"/>
        <function-ref name="startAt" scoped="" ref="0x7f929c3fbdb8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f929c3fb930"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f929c3fa898"/>
        <function-ref name="start" scoped="" ref="0x7f929c3fcaf8"/>
        <function-ref name="stop" scoped="" ref="0x7f929c3fb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f929c3f67d8" loc="42:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f929c3f67d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f929c3f6b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7f929c30b060" loc="43:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7f929c30b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f929c8d3020"/>
            <typename><typedef-ref name="T32khz" ref="0x7f929c8d3378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f929d8b1020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f929c308690"/>
        <function-ref name="fired" scoped="" ref="0x7f929c30a738"/>
        <function-ref name="startAt" scoped="" ref="0x7f929c308088"/>
        <function-ref name="isRunning" scoped="" ref="0x7f929c30abc0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f929c308b18"/>
        <function-ref name="start" scoped="" ref="0x7f929c30bdb0"/>
        <function-ref name="stop" scoped="" ref="0x7f929c30a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f929aba2b80" loc="44:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f929aba2b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f929c8d3020"/>
            <typename><typedef-ref name="T32khz" ref="0x7f929c8d3378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f929d8b1020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f929ab9f238"/>
        <function-ref name="fired" scoped="" ref="0x7f929aba02b0"/>
        <function-ref name="startAt" scoped="" ref="0x7f929aba0bc0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f929aba0738"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f929ab9f6c0"/>
        <function-ref name="start" scoped="" ref="0x7f929aba18f8"/>
        <function-ref name="stop" scoped="" ref="0x7f929aba1dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f929aba2398" loc="43:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f929aba2398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f929aba26e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f929ab9b608" loc="44:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f929ab9b608"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f929c8d3020"/>
            <typename><typedef-ref name="T32khz" ref="0x7f929c8d3378"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f929ab84c88"/>
        <function-ref name="fired" scoped="" ref="0x7f929ab9ad08"/>
        <function-ref name="startAt" scoped="" ref="0x7f929ab84680"/>
        <function-ref name="isRunning" scoped="" ref="0x7f929ab841f8"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f929ab83150"/>
        <function-ref name="start" scoped="" ref="0x7f929ab9a3a8"/>
        <function-ref name="stop" scoped="" ref="0x7f929ab9a880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f929ab9cd98" loc="43:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f929ab9cd98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f929ab9b170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f929ab6fbd8" loc="41:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f929ab6fbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f929ab6e020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f929ab6e1a8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f929ab6e330"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f929ab6e4b8"/>
        <function-ref name="fired" scoped="" ref="0x7f929ab6e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f929ab71288" loc="39:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f929ab71288"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f929ab715d8"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f929ab71760"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f929ab718e8"/>
        <function-ref name="get" scoped="" ref="0x7f929ab71a70"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f929ab71bf8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f929ab71d80"/>
        <function-ref name="getMode" scoped="" ref="0x7f929ab70020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f929ab701a8"/>
        <function-ref name="overflow" scoped="" ref="0x7f929ab70330"/>
        <function-ref name="setMode" scoped="" ref="0x7f929ab704b8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f929ab70640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f929ab708c8" loc="40:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f929ab708c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f929ab70c18"/>
        <function-ref name="getControl" scoped="" ref="0x7f929ab70da0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f929ab6f020"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f929ab6f1a8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f929ab6f330"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f929ab6f4b8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f929ab6f640"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f929ab6f7c8"/>
        <function-ref name="setControl" scoped="" ref="0x7f929ab6f950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f929c3d51c8" loc="52:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f929c3d51c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f929c3d5518"/>
        <function-ref name="setEvent" scoped="" ref="0x7f929c3d56a0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f929c3d5828"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f929c3d59b0"/>
        <function-ref name="fired" scoped="" ref="0x7f929c3d5b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f929c3dcba8" loc="50:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f929c3dcba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f929c3d9020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f929c3d91a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f929c3d9330"/>
        <function-ref name="get" scoped="" ref="0x7f929c3d94b8"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f929c3d9640"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f929c3d97c8"/>
        <function-ref name="getMode" scoped="" ref="0x7f929c3d9950"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f929c3d9ad8"/>
        <function-ref name="overflow" scoped="" ref="0x7f929c3d9c60"/>
        <function-ref name="setMode" scoped="" ref="0x7f929c3d9de8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f929c3d8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f929c3d8850" loc="51:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f929c3d8850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f929c3d8ba0"/>
        <function-ref name="getControl" scoped="" ref="0x7f929c3d8d28"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f929c3d6020"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f929c3d61a8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f929c3d6330"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f929c3d64b8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f929c3d6640"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f929c3d67c8"/>
        <function-ref name="setControl" scoped="" ref="0x7f929c3d6950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7f929ab65430" loc="49:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f929ab65430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f929ab65780"/>
        <function-ref name="setEvent" scoped="" ref="0x7f929ab65908"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f929ab65a90"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f929ab65c18"/>
        <function-ref name="fired" scoped="" ref="0x7f929ab65da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f929ab69ad8" loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f929ab69ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f929ab69e28"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f929ab67020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f929ab671a8"/>
        <function-ref name="get" scoped="" ref="0x7f929ab67330"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f929ab674b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f929ab67640"/>
        <function-ref name="getMode" scoped="" ref="0x7f929ab677c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f929ab67950"/>
        <function-ref name="overflow" scoped="" ref="0x7f929ab67ad8"/>
        <function-ref name="setMode" scoped="" ref="0x7f929ab67c60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f929ab67de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f929ab6cb58" loc="46:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f929ab6cb58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f929c8d3020"/>
            <typename><typedef-ref name="T32khz" ref="0x7f929c8d3378"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f929ab69238"/>
        <function-ref name="fired" scoped="" ref="0x7f929ab6a2b0"/>
        <function-ref name="startAt" scoped="" ref="0x7f929ab6abc0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f929ab6a738"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f929ab696c0"/>
        <function-ref name="start" scoped="" ref="0x7f929ab6b8f8"/>
        <function-ref name="stop" scoped="" ref="0x7f929ab6bdd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f929ab6c330" loc="45:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f929ab6c330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f929ab6c680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f929ab660c0" loc="48:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f929ab660c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f929ab66410"/>
        <function-ref name="getControl" scoped="" ref="0x7f929ab66598"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f929ab66720"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f929ab668a8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f929ab66a30"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f929ab66bb8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f929ab66d40"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f929ab65020"/>
        <function-ref name="setControl" scoped="" ref="0x7f929ab651a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f929c383630" loc="43:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f929c383630"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f929c8d3020"/>
            <typename><typedef-ref name="T32khz" ref="0x7f929c8d3378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f929d8b1020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f929c3883a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f929c388cb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f929c388830"/>
        <function-ref name="overflow" scoped="" ref="0x7f929c387190"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x7f929c380420" loc="43:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f929c380420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f929c8d3020"/>
            <typename><typedef-ref name="T32khz" ref="0x7f929c8d3378"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f929c37e1d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f929c37eae0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f929c37e658"/>
        <function-ref name="overflow" scoped="" ref="0x7f929c37d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f929c36d928" loc="45:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f929c36d928"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f929c36dc78"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f929c36de00"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f929c36c020"/>
        <function-ref name="get" scoped="" ref="0x7f929c36c1a8"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f929c36c330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f929c36c4b8"/>
        <function-ref name="getMode" scoped="" ref="0x7f929c36c640"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f929c36c7c8"/>
        <function-ref name="overflow" scoped="" ref="0x7f929c36c950"/>
        <function-ref name="setMode" scoped="" ref="0x7f929c36cad8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f929c36cc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f929c37c980" loc="44:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f929c37c980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f929c8d3020"/>
            <typename><typedef-ref name="T32khz" ref="0x7f929c8d3378"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f929c37b730"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f929c36d088"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f929c37bbb8"/>
        <function-ref name="overflow" scoped="" ref="0x7f929c36d510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f929c34cb10" loc="63:/home/kai/wsnpr/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7f929c34cb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f929c8d3020"/>
            <typename><typedef-ref name="T32khz" ref="0x7f929c8d3378"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f929c34b8f8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f929c349230"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f929c34bd80"/>
        <function-ref name="overflow" scoped="" ref="0x7f929c3496b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f929c368878" loc="62:/home/kai/wsnpr/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f929c368878"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f929c8d3020"/>
            <typename><typedef-ref name="T32khz" ref="0x7f929c8d3378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f929d8b1020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f929c34e660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f929c34c020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f929c34eae8"/>
        <function-ref name="overflow" scoped="" ref="0x7f929c34c4a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f929ab81420" loc="61:/home/kai/wsnpr/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f929ab81420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f929c8d3020"/>
            <typename><typedef-ref name="T32khz" ref="0x7f929c8d3378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f929d8b1020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f929ab7fab0"/>
        <function-ref name="fired" scoped="" ref="0x7f929ab80b30"/>
        <function-ref name="startAt" scoped="" ref="0x7f929ab7f4a8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f929ab7f020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f929ab7d020"/>
        <function-ref name="start" scoped="" ref="0x7f929ab801d0"/>
        <function-ref name="stop" scoped="" ref="0x7f929ab806a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f929ab7b860" loc="73:/home/kai/wsnpr/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7f929ab7b860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f929c8d3020"/>
            <typename><typedef-ref name="T32khz" ref="0x7f929c8d3378"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f929ab77020"/>
        <function-ref name="fired" scoped="" ref="0x7f929ab79020"/>
        <function-ref name="startAt" scoped="" ref="0x7f929ab79930"/>
        <function-ref name="isRunning" scoped="" ref="0x7f929ab794a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f929ab774a8"/>
        <function-ref name="start" scoped="" ref="0x7f929ab7a5e0"/>
        <function-ref name="stop" scoped="" ref="0x7f929ab7aab8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f929ab7d648" loc="68:/home/kai/wsnpr/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f929ab7d648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f929c8d3020"/>
            <typename><typedef-ref name="T32khz" ref="0x7f929c8d3378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f929d8b1020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f929ab7c3f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f929ab7cd00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f929ab7c878"/>
        <function-ref name="overflow" scoped="" ref="0x7f929ab7b1f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x7f929c302020" loc="44:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7f929c302020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c302370"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c3024f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c302680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c302808"/>
        <function-ref name="get" scoped="" ref="0x7f929c302990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c302b18"/>
        <function-ref name="set" scoped="" ref="0x7f929c302ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f929c302e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x7f929c3011b8" loc="45:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7f929c3011b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c301508"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c301690"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c301818"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c3019a0"/>
        <function-ref name="get" scoped="" ref="0x7f929c301b28"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c301cb0"/>
        <function-ref name="set" scoped="" ref="0x7f929c301e38"/>
        <function-ref name="clr" scoped="" ref="0x7f929c300020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x7f929c300378" loc="46:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7f929c300378"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c3006c8"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c300850"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c3009d8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c300b60"/>
        <function-ref name="get" scoped="" ref="0x7f929c300ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c300e70"/>
        <function-ref name="set" scoped="" ref="0x7f929c2ff020"/>
        <function-ref name="clr" scoped="" ref="0x7f929c2ff1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x7f929c304e20" loc="43:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f929c304e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c3031a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c303330"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c3034b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c303640"/>
        <function-ref name="get" scoped="" ref="0x7f929c3037c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c303950"/>
        <function-ref name="set" scoped="" ref="0x7f929c303ad8"/>
        <function-ref name="clr" scoped="" ref="0x7f929c303c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x7f929c2fe688" loc="48:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7f929c2fe688"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c2fe9d8"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c2feb60"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c2fece8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c2fee70"/>
        <function-ref name="get" scoped="" ref="0x7f929c2fd020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c2fd1a8"/>
        <function-ref name="set" scoped="" ref="0x7f929c2fd330"/>
        <function-ref name="clr" scoped="" ref="0x7f929c2fd4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x7f929c3fec20" loc="42:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7f929c3fec20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c304020"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c3041a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c304330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c3044b8"/>
        <function-ref name="get" scoped="" ref="0x7f929c304640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c3047c8"/>
        <function-ref name="set" scoped="" ref="0x7f929c304950"/>
        <function-ref name="clr" scoped="" ref="0x7f929c304ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x7f929c2ff4f0" loc="47:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7f929c2ff4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c2ff840"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c2ff9c8"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c2ffb50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c2ffcd8"/>
        <function-ref name="get" scoped="" ref="0x7f929c2ffe60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c2fe020"/>
        <function-ref name="set" scoped="" ref="0x7f929c2fe1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f929c2fe330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f929c2fb908" loc="44:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f929c2fb908"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c2fbc58"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c2fbde0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c2fa020"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c2fa1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c2fa330"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c2fa4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c2fa640"/>
        <function-ref name="get" scoped="" ref="0x7f929c2fa7c8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c2fa950"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c2faad8"/>
        <function-ref name="set" scoped="" ref="0x7f929c2fac60"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c2fade8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c2f9020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c2f92a8"/>
        <function-ref name="clr" scoped="" ref="0x7f929c2f9430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f929c2fc7d0" loc="43:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f929c2fc7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c2fcb20"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c2fcca8"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c2fce30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c2fb020"/>
        <function-ref name="get" scoped="" ref="0x7f929c2fb1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c2fb330"/>
        <function-ref name="set" scoped="" ref="0x7f929c2fb4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f929c2fb640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f929c2f5120" loc="44:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f929c2f5120"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c2f5470"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c2f55f8"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c2f5780"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c2f5908"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c2f5a90"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c2f5c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c2f5da0"/>
        <function-ref name="get" scoped="" ref="0x7f929c2f4020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c2f41a8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c2f4330"/>
        <function-ref name="set" scoped="" ref="0x7f929c2f44b8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c2f4640"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c2f47c8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c2f4a50"/>
        <function-ref name="clr" scoped="" ref="0x7f929c2f4bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f929c2f6020" loc="43:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f929c2f6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c2f6370"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c2f64f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c2f6680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c2f6808"/>
        <function-ref name="get" scoped="" ref="0x7f929c2f6990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c2f6b18"/>
        <function-ref name="set" scoped="" ref="0x7f929c2f6ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f929c2f6e28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f929c2f1908" loc="44:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f929c2f1908"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c2f1c58"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c2f1de0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c2f0020"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c2f01a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c2f0330"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c2f04b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c2f0640"/>
        <function-ref name="get" scoped="" ref="0x7f929c2f07c8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c2f0950"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c2f0ad8"/>
        <function-ref name="set" scoped="" ref="0x7f929c2f0c60"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c2f0de8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c2ef020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c2ef2a8"/>
        <function-ref name="clr" scoped="" ref="0x7f929c2ef430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f929c2f2720" loc="43:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f929c2f2720"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c2f2a70"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c2f2bf8"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c2f2d80"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c2f1020"/>
        <function-ref name="get" scoped="" ref="0x7f929c2f11a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c2f1330"/>
        <function-ref name="set" scoped="" ref="0x7f929c2f14b8"/>
        <function-ref name="clr" scoped="" ref="0x7f929c2f1640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f929c2ec120" loc="44:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f929c2ec120"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c2ec470"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c2ec5f8"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c2ec780"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c2ec908"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c2eca90"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c2ecc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c2ecda0"/>
        <function-ref name="get" scoped="" ref="0x7f929c2eb020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c2eb1a8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c2eb330"/>
        <function-ref name="set" scoped="" ref="0x7f929c2eb4b8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c2eb640"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c2eb7c8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c2eba50"/>
        <function-ref name="clr" scoped="" ref="0x7f929c2ebbd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f929c2ed020" loc="43:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f929c2ed020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c2ed370"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c2ed4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c2ed680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c2ed808"/>
        <function-ref name="get" scoped="" ref="0x7f929c2ed990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c2edb18"/>
        <function-ref name="set" scoped="" ref="0x7f929c2edca0"/>
        <function-ref name="clr" scoped="" ref="0x7f929c2ede28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f929c2e8908" loc="44:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f929c2e8908"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c2e8c58"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c2e8de0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c2e7020"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c2e71a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c2e7330"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c2e74b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c2e7640"/>
        <function-ref name="get" scoped="" ref="0x7f929c2e77c8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c2e7950"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c2e7ad8"/>
        <function-ref name="set" scoped="" ref="0x7f929c2e7c60"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c2e7de8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c2e6020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c2e62a8"/>
        <function-ref name="clr" scoped="" ref="0x7f929c2e6430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f929c2e9720" loc="43:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f929c2e9720"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c2e9a70"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c2e9bf8"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c2e9d80"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c2e8020"/>
        <function-ref name="get" scoped="" ref="0x7f929c2e81a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c2e8330"/>
        <function-ref name="set" scoped="" ref="0x7f929c2e84b8"/>
        <function-ref name="clr" scoped="" ref="0x7f929c2e8640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f929c2e3120" loc="44:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f929c2e3120"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c2e3470"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c2e35f8"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c2e3780"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c2e3908"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c2e3a90"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c2e3c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c2e3da0"/>
        <function-ref name="get" scoped="" ref="0x7f929c2e1020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c2e11a8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c2e1330"/>
        <function-ref name="set" scoped="" ref="0x7f929c2e14b8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c2e1640"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c2e17c8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c2e1a50"/>
        <function-ref name="clr" scoped="" ref="0x7f929c2e1bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f929c2e4020" loc="43:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f929c2e4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c2e4370"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c2e44f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c2e4680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c2e4808"/>
        <function-ref name="get" scoped="" ref="0x7f929c2e4990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c2e4b18"/>
        <function-ref name="set" scoped="" ref="0x7f929c2e4ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f929c2e4e28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f929c2de908" loc="44:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f929c2de908"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c2dec58"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c2dede0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c2dd020"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c2dd1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c2dd330"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c2dd4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c2dd640"/>
        <function-ref name="get" scoped="" ref="0x7f929c2dd7c8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c2dd950"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c2ddad8"/>
        <function-ref name="set" scoped="" ref="0x7f929c2ddc60"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c2ddde8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c2dc020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c2dc2a8"/>
        <function-ref name="clr" scoped="" ref="0x7f929c2dc430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f929c2df720" loc="43:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f929c2df720"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c2dfa70"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c2dfbf8"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c2dfd80"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c2de020"/>
        <function-ref name="get" scoped="" ref="0x7f929c2de1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c2de330"/>
        <function-ref name="set" scoped="" ref="0x7f929c2de4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f929c2de640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x7f929c2c68d0" loc="42:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7f929c2c68d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f929c2c6c20"/>
        <function-ref name="disable" scoped="" ref="0x7f929c2c6da8"/>
        <function-ref name="captured" scoped="" ref="0x7f929c2c9020"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f929c2c91a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x7f929c2c9578" loc="43:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7f929c2c9578"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f929c2c98c8"/>
        <function-ref name="disable" scoped="" ref="0x7f929c2c9a50"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f929c2c9bd8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f929c2c9d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x7f929c2c5190" loc="44:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f929c2c5190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f929c2c54e0"/>
        <function-ref name="disable" scoped="" ref="0x7f929c2c5668"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f929c2c57f0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f929c2c5978"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Capture" ref="0x7f929c2ae2a8" loc="42:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Capture" scoped="" ref="0x7f929c2ae2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f929c2ae5f8"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f929c2ae780"/>
        <function-ref name="captured" scoped="" ref="0x7f929c2ae908"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f929c2aea90"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f929c2aec18"/>
        <function-ref name="setEdge" scoped="" ref="0x7f929c2aeda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f929c2c2450" loc="40:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f929c2c2450"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f929c2c27a0"/>
        <function-ref name="disable" scoped="" ref="0x7f929c2c2928"/>
        <function-ref name="captured" scoped="" ref="0x7f929c2c2ab0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f929c2c2c38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f929c2af020" loc="41:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f929c2af020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f929c2af370"/>
        <function-ref name="getControl" scoped="" ref="0x7f929c2af4f8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f929c2af680"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f929c2af808"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f929c2af990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f929c2afb18"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f929c2afca0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f929c2afe28"/>
        <function-ref name="setControl" scoped="" ref="0x7f929c2ae020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x7f929c2ad0a0" loc="43:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f929c2ad0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929c2ad3f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f929c2ad578"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929c2ad700"/>
        <function-ref name="toggle" scoped="" ref="0x7f929c2ad888"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929c2ada10"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929c2adb98"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929c2add20"/>
        <function-ref name="get" scoped="" ref="0x7f929c2ac020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929c2ac1a8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929c2ac330"/>
        <function-ref name="set" scoped="" ref="0x7f929c2ac4b8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929c2ac640"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929c2ac7c8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929c2aca50"/>
        <function-ref name="clr" scoped="" ref="0x7f929c2acbd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f929c29fb88" loc="46:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f929c29fb88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f929c29e020"/>
        <function-ref name="fired" scoped="" ref="0x7f929c29e1a8"/>
        <function-ref name="disable" scoped="" ref="0x7f929c29e330"/>
        <function-ref name="edge" scoped="" ref="0x7f929c29e4b8"/>
        <function-ref name="enable" scoped="" ref="0x7f929c29e640"/>
        <function-ref name="getValue" scoped="" ref="0x7f929c29e7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f929c294b88" loc="58:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f929c294b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f929c293020"/>
        <function-ref name="fired" scoped="" ref="0x7f929c2931a8"/>
        <function-ref name="disable" scoped="" ref="0x7f929c293330"/>
        <function-ref name="edge" scoped="" ref="0x7f929c2934b8"/>
        <function-ref name="enable" scoped="" ref="0x7f929c293640"/>
        <function-ref name="getValue" scoped="" ref="0x7f929c2937c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f929c29cb88" loc="49:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f929c29cb88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f929c29b020"/>
        <function-ref name="fired" scoped="" ref="0x7f929c29b1a8"/>
        <function-ref name="disable" scoped="" ref="0x7f929c29b330"/>
        <function-ref name="edge" scoped="" ref="0x7f929c29b4b8"/>
        <function-ref name="enable" scoped="" ref="0x7f929c29b640"/>
        <function-ref name="getValue" scoped="" ref="0x7f929c29b7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f929c29ab88" loc="53:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f929c29ab88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f929c299020"/>
        <function-ref name="fired" scoped="" ref="0x7f929c2991a8"/>
        <function-ref name="disable" scoped="" ref="0x7f929c299330"/>
        <function-ref name="edge" scoped="" ref="0x7f929c2994b8"/>
        <function-ref name="enable" scoped="" ref="0x7f929c299640"/>
        <function-ref name="getValue" scoped="" ref="0x7f929c2997c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f929c2a5b88" loc="44:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f929c2a5b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f929c2a0020"/>
        <function-ref name="fired" scoped="" ref="0x7f929c2a01a8"/>
        <function-ref name="disable" scoped="" ref="0x7f929c2a0330"/>
        <function-ref name="edge" scoped="" ref="0x7f929c2a04b8"/>
        <function-ref name="enable" scoped="" ref="0x7f929c2a0640"/>
        <function-ref name="getValue" scoped="" ref="0x7f929c2a07c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f929c296b88" loc="56:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f929c296b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f929c295020"/>
        <function-ref name="fired" scoped="" ref="0x7f929c2951a8"/>
        <function-ref name="disable" scoped="" ref="0x7f929c295330"/>
        <function-ref name="edge" scoped="" ref="0x7f929c2954b8"/>
        <function-ref name="enable" scoped="" ref="0x7f929c295640"/>
        <function-ref name="getValue" scoped="" ref="0x7f929c2957c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f929c29eb88" loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f929c29eb88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f929c29d020"/>
        <function-ref name="fired" scoped="" ref="0x7f929c29d1a8"/>
        <function-ref name="disable" scoped="" ref="0x7f929c29d330"/>
        <function-ref name="edge" scoped="" ref="0x7f929c29d4b8"/>
        <function-ref name="enable" scoped="" ref="0x7f929c29d640"/>
        <function-ref name="getValue" scoped="" ref="0x7f929c29d7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f929c293b88" loc="59:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f929c293b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f929c292020"/>
        <function-ref name="fired" scoped="" ref="0x7f929c2921a8"/>
        <function-ref name="disable" scoped="" ref="0x7f929c292330"/>
        <function-ref name="edge" scoped="" ref="0x7f929c2924b8"/>
        <function-ref name="enable" scoped="" ref="0x7f929c292640"/>
        <function-ref name="getValue" scoped="" ref="0x7f929c2927c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f929c2a1b40" loc="42:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f929c2a1b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f929c2a6020"/>
        <function-ref name="fired" scoped="" ref="0x7f929c2a61a8"/>
        <function-ref name="disable" scoped="" ref="0x7f929c2a6330"/>
        <function-ref name="edge" scoped="" ref="0x7f929c2a64b8"/>
        <function-ref name="enable" scoped="" ref="0x7f929c2a6640"/>
        <function-ref name="getValue" scoped="" ref="0x7f929c2a67c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f929c299b88" loc="54:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f929c299b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f929c297020"/>
        <function-ref name="fired" scoped="" ref="0x7f929c2971a8"/>
        <function-ref name="disable" scoped="" ref="0x7f929c297330"/>
        <function-ref name="edge" scoped="" ref="0x7f929c2974b8"/>
        <function-ref name="enable" scoped="" ref="0x7f929c297640"/>
        <function-ref name="getValue" scoped="" ref="0x7f929c2977c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f929c2a0b88" loc="45:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f929c2a0b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f929c29f020"/>
        <function-ref name="fired" scoped="" ref="0x7f929c29f1a8"/>
        <function-ref name="disable" scoped="" ref="0x7f929c29f330"/>
        <function-ref name="edge" scoped="" ref="0x7f929c29f4b8"/>
        <function-ref name="enable" scoped="" ref="0x7f929c29f640"/>
        <function-ref name="getValue" scoped="" ref="0x7f929c29f7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f929c295b88" loc="57:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f929c295b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f929c294020"/>
        <function-ref name="fired" scoped="" ref="0x7f929c2941a8"/>
        <function-ref name="disable" scoped="" ref="0x7f929c294330"/>
        <function-ref name="edge" scoped="" ref="0x7f929c2944b8"/>
        <function-ref name="enable" scoped="" ref="0x7f929c294640"/>
        <function-ref name="getValue" scoped="" ref="0x7f929c2947c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f929c29db88" loc="48:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f929c29db88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f929c29c020"/>
        <function-ref name="fired" scoped="" ref="0x7f929c29c1a8"/>
        <function-ref name="disable" scoped="" ref="0x7f929c29c330"/>
        <function-ref name="edge" scoped="" ref="0x7f929c29c4b8"/>
        <function-ref name="enable" scoped="" ref="0x7f929c29c640"/>
        <function-ref name="getValue" scoped="" ref="0x7f929c29c7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f929c29bb88" loc="52:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f929c29bb88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f929c29a020"/>
        <function-ref name="fired" scoped="" ref="0x7f929c29a1a8"/>
        <function-ref name="disable" scoped="" ref="0x7f929c29a330"/>
        <function-ref name="edge" scoped="" ref="0x7f929c29a4b8"/>
        <function-ref name="enable" scoped="" ref="0x7f929c29a640"/>
        <function-ref name="getValue" scoped="" ref="0x7f929c29a7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f929c2a6b88" loc="43:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f929c2a6b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f929c2a5020"/>
        <function-ref name="fired" scoped="" ref="0x7f929c2a51a8"/>
        <function-ref name="disable" scoped="" ref="0x7f929c2a5330"/>
        <function-ref name="edge" scoped="" ref="0x7f929c2a54b8"/>
        <function-ref name="enable" scoped="" ref="0x7f929c2a5640"/>
        <function-ref name="getValue" scoped="" ref="0x7f929c2a57c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f929c297b88" loc="55:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f929c297b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f929c296020"/>
        <function-ref name="fired" scoped="" ref="0x7f929c2961a8"/>
        <function-ref name="disable" scoped="" ref="0x7f929c296330"/>
        <function-ref name="edge" scoped="" ref="0x7f929c2964b8"/>
        <function-ref name="enable" scoped="" ref="0x7f929c296640"/>
        <function-ref name="getValue" scoped="" ref="0x7f929c2967c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f929c28b878" loc="43:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f929c28b878"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f929c28bbc8"/>
        <function-ref name="fired" scoped="" ref="0x7f929c28bd50"/>
        <function-ref name="disable" scoped="" ref="0x7f929c28a020"/>
        <function-ref name="edge" scoped="" ref="0x7f929c28a1a8"/>
        <function-ref name="enable" scoped="" ref="0x7f929c28a330"/>
        <function-ref name="getValue" scoped="" ref="0x7f929c28a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f929c281878" loc="55:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f929c281878"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f929c281bc8"/>
        <function-ref name="fired" scoped="" ref="0x7f929c281d50"/>
        <function-ref name="disable" scoped="" ref="0x7f929c280020"/>
        <function-ref name="edge" scoped="" ref="0x7f929c2801a8"/>
        <function-ref name="enable" scoped="" ref="0x7f929c280330"/>
        <function-ref name="getValue" scoped="" ref="0x7f929c2804b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f929c288878" loc="46:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f929c288878"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f929c288bc8"/>
        <function-ref name="fired" scoped="" ref="0x7f929c288d50"/>
        <function-ref name="disable" scoped="" ref="0x7f929c287020"/>
        <function-ref name="edge" scoped="" ref="0x7f929c2871a8"/>
        <function-ref name="enable" scoped="" ref="0x7f929c287330"/>
        <function-ref name="getValue" scoped="" ref="0x7f929c2874b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f929c286878" loc="50:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f929c286878"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f929c286bc8"/>
        <function-ref name="fired" scoped="" ref="0x7f929c286d50"/>
        <function-ref name="disable" scoped="" ref="0x7f929c285020"/>
        <function-ref name="edge" scoped="" ref="0x7f929c2851a8"/>
        <function-ref name="enable" scoped="" ref="0x7f929c285330"/>
        <function-ref name="getValue" scoped="" ref="0x7f929c2854b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f929c28d878" loc="41:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f929c28d878"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f929c28dbc8"/>
        <function-ref name="fired" scoped="" ref="0x7f929c28dd50"/>
        <function-ref name="disable" scoped="" ref="0x7f929c28c020"/>
        <function-ref name="edge" scoped="" ref="0x7f929c28c1a8"/>
        <function-ref name="enable" scoped="" ref="0x7f929c28c330"/>
        <function-ref name="getValue" scoped="" ref="0x7f929c28c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f929c283878" loc="53:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f929c283878"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f929c283cc8"/>
        <function-ref name="fired" scoped="" ref="0x7f929c283e50"/>
        <function-ref name="disable" scoped="" ref="0x7f929c282020"/>
        <function-ref name="edge" scoped="" ref="0x7f929c2821a8"/>
        <function-ref name="enable" scoped="" ref="0x7f929c282330"/>
        <function-ref name="getValue" scoped="" ref="0x7f929c2824b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f929c28a878" loc="44:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f929c28a878"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f929c28abc8"/>
        <function-ref name="fired" scoped="" ref="0x7f929c28ad50"/>
        <function-ref name="disable" scoped="" ref="0x7f929c289020"/>
        <function-ref name="edge" scoped="" ref="0x7f929c2891a8"/>
        <function-ref name="enable" scoped="" ref="0x7f929c289330"/>
        <function-ref name="getValue" scoped="" ref="0x7f929c2894b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f929c280878" loc="56:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f929c280878"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f929c280bc8"/>
        <function-ref name="fired" scoped="" ref="0x7f929c280d50"/>
        <function-ref name="disable" scoped="" ref="0x7f929c27f020"/>
        <function-ref name="edge" scoped="" ref="0x7f929c27f1a8"/>
        <function-ref name="enable" scoped="" ref="0x7f929c27f330"/>
        <function-ref name="getValue" scoped="" ref="0x7f929c27f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f929c291928" loc="39:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f929c291928"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f929c291c78"/>
        <function-ref name="fired" scoped="" ref="0x7f929c291e00"/>
        <function-ref name="disable" scoped="" ref="0x7f929c28e020"/>
        <function-ref name="edge" scoped="" ref="0x7f929c28e1a8"/>
        <function-ref name="enable" scoped="" ref="0x7f929c28e330"/>
        <function-ref name="getValue" scoped="" ref="0x7f929c28e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f929c285878" loc="51:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f929c285878"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f929c285bc8"/>
        <function-ref name="fired" scoped="" ref="0x7f929c285d50"/>
        <function-ref name="disable" scoped="" ref="0x7f929c284020"/>
        <function-ref name="edge" scoped="" ref="0x7f929c2841a8"/>
        <function-ref name="enable" scoped="" ref="0x7f929c284330"/>
        <function-ref name="getValue" scoped="" ref="0x7f929c2844b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f929c28c878" loc="42:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f929c28c878"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f929c28cbc8"/>
        <function-ref name="fired" scoped="" ref="0x7f929c28cd50"/>
        <function-ref name="disable" scoped="" ref="0x7f929c28b020"/>
        <function-ref name="edge" scoped="" ref="0x7f929c28b1a8"/>
        <function-ref name="enable" scoped="" ref="0x7f929c28b330"/>
        <function-ref name="getValue" scoped="" ref="0x7f929c28b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f929c282878" loc="54:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f929c282878"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f929c282bc8"/>
        <function-ref name="fired" scoped="" ref="0x7f929c282d50"/>
        <function-ref name="disable" scoped="" ref="0x7f929c281020"/>
        <function-ref name="edge" scoped="" ref="0x7f929c2811a8"/>
        <function-ref name="enable" scoped="" ref="0x7f929c281330"/>
        <function-ref name="getValue" scoped="" ref="0x7f929c2814b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f929c289878" loc="45:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f929c289878"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f929c289bc8"/>
        <function-ref name="fired" scoped="" ref="0x7f929c289d50"/>
        <function-ref name="disable" scoped="" ref="0x7f929c288020"/>
        <function-ref name="edge" scoped="" ref="0x7f929c2881a8"/>
        <function-ref name="enable" scoped="" ref="0x7f929c288330"/>
        <function-ref name="getValue" scoped="" ref="0x7f929c2884b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f929c287878" loc="49:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f929c287878"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f929c287bc8"/>
        <function-ref name="fired" scoped="" ref="0x7f929c287d50"/>
        <function-ref name="disable" scoped="" ref="0x7f929c286020"/>
        <function-ref name="edge" scoped="" ref="0x7f929c2861a8"/>
        <function-ref name="enable" scoped="" ref="0x7f929c286330"/>
        <function-ref name="getValue" scoped="" ref="0x7f929c2864b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f929c28e878" loc="40:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f929c28e878"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f929c28ebc8"/>
        <function-ref name="fired" scoped="" ref="0x7f929c28ed50"/>
        <function-ref name="disable" scoped="" ref="0x7f929c28d020"/>
        <function-ref name="edge" scoped="" ref="0x7f929c28d1a8"/>
        <function-ref name="enable" scoped="" ref="0x7f929c28d330"/>
        <function-ref name="getValue" scoped="" ref="0x7f929c28d4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f929c284878" loc="52:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f929c284878"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f929c284bc8"/>
        <function-ref name="fired" scoped="" ref="0x7f929c284d50"/>
        <function-ref name="disable" scoped="" ref="0x7f929c283020"/>
        <function-ref name="edge" scoped="" ref="0x7f929c2831a8"/>
        <function-ref name="enable" scoped="" ref="0x7f929c283330"/>
        <function-ref name="getValue" scoped="" ref="0x7f929c2834b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7f929c1b4780" loc="46:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7f929c1b4780"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f929c1b4ad0"/>
        <function-ref name="fired" scoped="" ref="0x7f929c1b4c58"/>
        <function-ref name="disable" scoped="" ref="0x7f929c1b4de0"/>
        <function-ref name="edge" scoped="" ref="0x7f929c1a7020"/>
        <function-ref name="enable" scoped="" ref="0x7f929c1a71a8"/>
        <function-ref name="getValue" scoped="" ref="0x7f929c1a7330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f929c1b5b58" loc="45:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7f929c1b5b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f929c1b4020"/>
        <function-ref name="disable" scoped="" ref="0x7f929c1b41a8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f929c1b4330"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f929c1b44b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7f929c1a55f8" loc="46:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7f929c1a55f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f929c1a5948"/>
        <function-ref name="fired" scoped="" ref="0x7f929c1a5ad0"/>
        <function-ref name="disable" scoped="" ref="0x7f929c1a5c58"/>
        <function-ref name="edge" scoped="" ref="0x7f929c1a5de0"/>
        <function-ref name="enable" scoped="" ref="0x7f929c1a4020"/>
        <function-ref name="getValue" scoped="" ref="0x7f929c1a41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f929c1a6a78" loc="45:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7f929c1a6a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f929c1a6dc8"/>
        <function-ref name="disable" scoped="" ref="0x7f929c1a5020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f929c1a51a8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f929c1a5330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f929bd7e470" loc="69:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f929bd7e470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd7e9c0"/>
        <function-ref name="write" scoped="" ref="0x7f929bd7eb48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f929bd8b9b8" loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f929bd8b9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f929bd8bd08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f929bd84470" loc="63:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f929bd84470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd847c0"/>
        <function-ref name="write" scoped="" ref="0x7f929bd84948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f929bd7dd98" loc="72:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f929bd7dd98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd7c170"/>
        <function-ref name="write" scoped="" ref="0x7f929bd7c2f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f929bd75470" loc="86:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f929bd75470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd757c0"/>
        <function-ref name="write" scoped="" ref="0x7f929bd75948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f929bd7c5c0" loc="73:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f929bd7c5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd7c910"/>
        <function-ref name="write" scoped="" ref="0x7f929bd7ca98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f929bd697c0" loc="108:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f929bd697c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd69b10"/>
        <function-ref name="write" scoped="" ref="0x7f929bd69c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f929bd6b7c0" loc="104:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f929bd6b7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd6bb10"/>
        <function-ref name="write" scoped="" ref="0x7f929bd6bc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f929bd8ac50" loc="50:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f929bd8ac50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f929bd88020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f929bd71c10" loc="93:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f929bd71c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd70020"/>
        <function-ref name="write" scoped="" ref="0x7f929bd701a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f929bd6d7c0" loc="102:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f929bd6d7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd6db10"/>
        <function-ref name="write" scoped="" ref="0x7f929bd6dc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f929bd82470" loc="65:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f929bd82470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd827c0"/>
        <function-ref name="write" scoped="" ref="0x7f929bd82948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f929bd7f470" loc="67:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f929bd7f470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd7f7c0"/>
        <function-ref name="write" scoped="" ref="0x7f929bd7f948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f929bd77c10" loc="83:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f929bd77c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd76020"/>
        <function-ref name="write" scoped="" ref="0x7f929bd761a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f929bd78470" loc="79:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f929bd78470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd787c0"/>
        <function-ref name="write" scoped="" ref="0x7f929bd78948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f929bd7cd60" loc="74:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f929bd7cd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd7b0d8"/>
        <function-ref name="write" scoped="" ref="0x7f929bd7b260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f929bd8c430" loc="42:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f929bd8c430"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f929bd8c780"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f929bd8c908"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f929bd8ca90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f929bd87638" loc="54:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f929bd87638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f929bd87988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f929bd87c50" loc="55:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f929bd87c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f929bd860d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f929bd6f060" loc="95:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f929bd6f060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd6f3b0"/>
        <function-ref name="write" scoped="" ref="0x7f929bd6f538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f929bd863a0" loc="56:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f929bd863a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f929bd866f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f929bd6b020" loc="103:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f929bd6b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd6b370"/>
        <function-ref name="write" scoped="" ref="0x7f929bd6b4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f929bd88900" loc="52:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f929bd88900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f929bd88c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f929bd71470" loc="92:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f929bd71470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd717c0"/>
        <function-ref name="write" scoped="" ref="0x7f929bd71948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f929bd82c10" loc="66:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f929bd82c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd7f020"/>
        <function-ref name="write" scoped="" ref="0x7f929bd7f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f929bd84c10" loc="64:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f929bd84c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd82020"/>
        <function-ref name="write" scoped="" ref="0x7f929bd821a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f929bd8b3a0" loc="46:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f929bd8b3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f929bd8b6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f929bd72470" loc="90:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f929bd72470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd727c0"/>
        <function-ref name="write" scoped="" ref="0x7f929bd72948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f929bd75c10" loc="87:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f929bd75c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd73020"/>
        <function-ref name="write" scoped="" ref="0x7f929bd731a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f929bd72c10" loc="91:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f929bd72c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd71020"/>
        <function-ref name="write" scoped="" ref="0x7f929bd711a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f929bd69020" loc="107:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f929bd69020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd69370"/>
        <function-ref name="write" scoped="" ref="0x7f929bd694f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f929bd6a020" loc="105:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f929bd6a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd6a370"/>
        <function-ref name="write" scoped="" ref="0x7f929bd6a4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f929bd78c10" loc="80:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f929bd78c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd77020"/>
        <function-ref name="write" scoped="" ref="0x7f929bd771a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f929bd73470" loc="88:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f929bd73470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd737c0"/>
        <function-ref name="write" scoped="" ref="0x7f929bd73948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f929bd6d020" loc="101:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f929bd6d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd6d370"/>
        <function-ref name="write" scoped="" ref="0x7f929bd6d4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f929bd7bcc8" loc="76:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f929bd7bcc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd790a0"/>
        <function-ref name="write" scoped="" ref="0x7f929bd79228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f929bd68020" loc="111:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f929bd68020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f929bd68370"/>
        <function-ref name="writeDone" scoped="" ref="0x7f929bd684f8"/>
        <function-ref name="write" scoped="" ref="0x7f929bd68680"/>
        <function-ref name="beginRead" scoped="" ref="0x7f929bd68808"/>
        <function-ref name="readDone" scoped="" ref="0x7f929bd68990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f929bd8cd58" loc="45:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f929bd8cd58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f929bd8b0d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f929bd85c50" loc="62:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f929bd85c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd84020"/>
        <function-ref name="write" scoped="" ref="0x7f929bd841a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f929bd7fc10" loc="68:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f929bd7fc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd7e020"/>
        <function-ref name="write" scoped="" ref="0x7f929bd7e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f929bd76470" loc="84:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f929bd76470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd767c0"/>
        <function-ref name="write" scoped="" ref="0x7f929bd76948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f929bd7b528" loc="75:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f929bd7b528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd7b878"/>
        <function-ref name="write" scoped="" ref="0x7f929bd7ba00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f929bd76c10" loc="85:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f929bd76c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd75020"/>
        <function-ref name="write" scoped="" ref="0x7f929bd751a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f929bd7ee10" loc="70:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f929bd7ee10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd7d1a8"/>
        <function-ref name="write" scoped="" ref="0x7f929bd7d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f929bd8a020" loc="48:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f929bd8a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f929bd8a370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f929bd7d5f8" loc="71:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f929bd7d5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd7d948"/>
        <function-ref name="write" scoped="" ref="0x7f929bd7dad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f929bd8d7d0" loc="41:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f929bd8d7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f929bd8db20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f929bd8dca8"/>
        <function-ref name="request" scoped="" ref="0x7f929bd8de30"/>
        <function-ref name="granted" scoped="" ref="0x7f929bd8c020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f929bd8c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f929bd869b8" loc="57:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f929bd869b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f929bd86d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f929bd85638" loc="59:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f929bd85638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f929bd85988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f929bd6e7c0" loc="100:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f929bd6e7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd6eb10"/>
        <function-ref name="write" scoped="" ref="0x7f929bd6ec98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f929bd6e020" loc="99:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f929bd6e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd6e370"/>
        <function-ref name="write" scoped="" ref="0x7f929bd6e4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f929bd87020" loc="53:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f929bd87020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f929bd87370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f929bd6f800" loc="96:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f929bd6f800"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd6fb50"/>
        <function-ref name="write" scoped="" ref="0x7f929bd6fcd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f929bd6a7c0" loc="106:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f929bd6a7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd6ab10"/>
        <function-ref name="write" scoped="" ref="0x7f929bd6ac98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f929bd77470" loc="81:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f929bd77470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd777c0"/>
        <function-ref name="write" scoped="" ref="0x7f929bd77948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f929bd73c10" loc="89:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f929bd73c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd72020"/>
        <function-ref name="write" scoped="" ref="0x7f929bd721a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f929bd8a638" loc="49:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f929bd8a638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f929bd8a988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f929bd882e8" loc="51:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f929bd882e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f929bd88638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f929bd794f0" loc="77:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f929bd794f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd79840"/>
        <function-ref name="write" scoped="" ref="0x7f929bd799c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f929bd85020" loc="58:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f929bd85020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f929bd85370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f929bd79c90" loc="78:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f929bd79c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd78020"/>
        <function-ref name="write" scoped="" ref="0x7f929bd781a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f929bd70470" loc="94:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f929bd70470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd70bc0"/>
        <function-ref name="write" scoped="" ref="0x7f929bd70d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f929bd68c58" loc="112:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f929bd68c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f929bd67020"/>
        <function-ref name="writeDone" scoped="" ref="0x7f929bd671a8"/>
        <function-ref name="write" scoped="" ref="0x7f929bd67330"/>
        <function-ref name="beginRead" scoped="" ref="0x7f929bd674b8"/>
        <function-ref name="readDone" scoped="" ref="0x7f929bd67640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7f929c166c00" loc="41:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7f929c166c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f929c165020"/>
        <function-ref name="writeDone" scoped="" ref="0x7f929c1651a8"/>
        <function-ref name="write" scoped="" ref="0x7f929c165330"/>
        <function-ref name="beginRead" scoped="" ref="0x7f929c1654b8"/>
        <function-ref name="readDone" scoped="" ref="0x7f929c165640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f929c167cb0" loc="40:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f929c167cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f929c1660a0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f929c166228"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f929c1663b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7f929c164020" loc="42:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7f929c164020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929c164370"/>
        <function-ref name="write" scoped="" ref="0x7f929c1644f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7f929c164d60" loc="43:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7f929c164d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929c1630d8"/>
        <function-ref name="write" scoped="" ref="0x7f929c163260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f929c167020" loc="39:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f929c167020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f929c167370"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f929c1674f8"/>
        <function-ref name="request" scoped="" ref="0x7f929c167680"/>
        <function-ref name="granted" scoped="" ref="0x7f929c167808"/>
        <function-ref name="isOwner" scoped="" ref="0x7f929c167990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7f929c163ad8" loc="44:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7f929c163ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f929c163e28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x7f929c155020" loc="55:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f929c155020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f929c155370"/>
        <function-ref name="sendDone" scoped="" ref="0x7f929c1554f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7f929c15de50" loc="46:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7f929c15de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f929c15c1e8"/>
        <function-ref name="writeDone" scoped="" ref="0x7f929c15c370"/>
        <function-ref name="write" scoped="" ref="0x7f929c15c4f8"/>
        <function-ref name="beginRead" scoped="" ref="0x7f929c15c680"/>
        <function-ref name="readDone" scoped="" ref="0x7f929c15c808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f929c161df0" loc="44:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f929c161df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f929c15e170"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f929c15e2f8"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f929c15e480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x7f929c157d10" loc="54:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f929c157d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f929c1560a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x7f929c155838" loc="56:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="WorkingState" scoped="" ref="0x7f929c155838"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f929c155b88"/>
        <function-ref name="toIdle" scoped="" ref="0x7f929c155d10"/>
        <function-ref name="isState" scoped="" ref="0x7f929c154020"/>
        <function-ref name="isIdle" scoped="" ref="0x7f929c1541a8"/>
        <function-ref name="requestState" scoped="" ref="0x7f929c154330"/>
        <function-ref name="forceState" scoped="" ref="0x7f929c1544b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f929c1581e8" loc="53:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f929c1581e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f929c158538"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f929c1586c0"/>
        <function-ref name="request" scoped="" ref="0x7f929c158848"/>
        <function-ref name="granted" scoped="" ref="0x7f929c1589d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f929c158b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7f929c15b040" loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7f929c15b040"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929c15b390"/>
        <function-ref name="write" scoped="" ref="0x7f929c15b518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7f929c15bd40" loc="48:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7f929c15bd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929c1590d8"/>
        <function-ref name="write" scoped="" ref="0x7f929c159260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f929c154730" loc="57:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f929c154730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f929c154a80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f929c154c08"/>
        <function-ref name="led1On" scoped="" ref="0x7f929c154d90"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f929c14e020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f929c14e1a8"/>
        <function-ref name="get" scoped="" ref="0x7f929c14e330"/>
        <function-ref name="led1Off" scoped="" ref="0x7f929c14e4b8"/>
        <function-ref name="led2Off" scoped="" ref="0x7f929c14ead8"/>
        <function-ref name="set" scoped="" ref="0x7f929c14e640"/>
        <function-ref name="led0On" scoped="" ref="0x7f929c14e7c8"/>
        <function-ref name="led2On" scoped="" ref="0x7f929c14e950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f929c15ec10" loc="45:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f929c15ec10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f929c15d020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f929c15d1a8"/>
        <function-ref name="request" scoped="" ref="0x7f929c15d330"/>
        <function-ref name="granted" scoped="" ref="0x7f929c15d4b8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f929c15d640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x7f929c1495d0" loc="88:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grant" scoped="" ref="0x7f929c1495d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f929c149920"/>
        <function-ref name="runTask" scoped="" ref="0x7f929c149aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7f929c159a98" loc="49:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7f929c159a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f929c159de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f929c0f1100" loc="67:/home/kai/wsnpr/tinyos-main/tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f929c0f1100"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f929c0f1450"/>
        <function-ref name="toIdle" scoped="" ref="0x7f929c0f15d8"/>
        <function-ref name="isState" scoped="" ref="0x7f929c0f1760"/>
        <function-ref name="isIdle" scoped="" ref="0x7f929c0f18e8"/>
        <function-ref name="requestState" scoped="" ref="0x7f929c0f1a70"/>
        <function-ref name="forceState" scoped="" ref="0x7f929c0f1bf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f929c0ef858" loc="66:/home/kai/wsnpr/tinyos-main/tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f929c0ef858"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f929c0efba8"/>
        <function-ref name="toIdle" scoped="" ref="0x7f929c0efd30"/>
        <function-ref name="isState" scoped="" ref="0x7f929c0ec020"/>
        <function-ref name="isIdle" scoped="" ref="0x7f929c0ec1a8"/>
        <function-ref name="requestState" scoped="" ref="0x7f929c0ec330"/>
        <function-ref name="forceState" scoped="" ref="0x7f929c0ec4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f929c0e95d8" loc="66:/home/kai/wsnpr/tinyos-main/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f929c0e95d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f929c0e9928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f929c0e71c8" loc="67:/home/kai/wsnpr/tinyos-main/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f929c0e71c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f929c0e7518"/>
        <function-ref name="toIdle" scoped="" ref="0x7f929c0e76a0"/>
        <function-ref name="isState" scoped="" ref="0x7f929c0e7828"/>
        <function-ref name="isIdle" scoped="" ref="0x7f929c0e79b0"/>
        <function-ref name="requestState" scoped="" ref="0x7f929c0e7b38"/>
        <function-ref name="forceState" scoped="" ref="0x7f929c0e7cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f929bdb3020" loc="44:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f929bdb3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f929bdb3370"/>
        <function-ref name="sendDone" scoped="" ref="0x7f929bdb34f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f929c0d0948" loc="43:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f929c0d0948"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f929c0d0c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f929c0d1cf0" loc="42:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f929c0d1cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f929c0d00a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f929c0d0228"/>
        <function-ref name="request" scoped="" ref="0x7f929c0d03b0"/>
        <function-ref name="granted" scoped="" ref="0x7f929c0d0538"/>
        <function-ref name="isOwner" scoped="" ref="0x7f929c0d06c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f929aa91430" loc="82:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f929aa91430"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f929aa91780"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f929aa91908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f929aa8fd18" loc="87:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f929aa8fd18"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f929aa8e0a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f929aa8e228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f929aa8e4b0" loc="89:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f929aa8e4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f929aa8e800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f929aa91b90" loc="83:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f929aa91b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f929aa8f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f929aa927d0" loc="81:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f929aa927d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f929aa92b20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f929aa92ca8"/>
        <function-ref name="request" scoped="" ref="0x7f929aa92e30"/>
        <function-ref name="granted" scoped="" ref="0x7f929aa91020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f929aa911a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f929aa8f2a8" loc="85:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f929aa8f2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f929aa8f5f8"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f929aa8f780"/>
        <function-ref name="splitRead" scoped="" ref="0x7f929aa8f908"/>
        <function-ref name="write" scoped="" ref="0x7f929aa8fa90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f929c06bde0" loc="74:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f929c06bde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f929c06d170"/>
        <function-ref name="configure" scoped="" ref="0x7f929c06d2f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f929c06cc90" loc="77:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f929c06cc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f929c069020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f929c0691a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f929c068ce8" loc="80:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f929c068ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f929c0670a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f929c06d5c8" loc="75:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f929c06d5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f929c06d918"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f929c069a40" loc="79:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f929c069a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f929c069d90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f929c068020"/>
        <function-ref name="request" scoped="" ref="0x7f929c0681a8"/>
        <function-ref name="granted" scoped="" ref="0x7f929c068330"/>
        <function-ref name="isOwner" scoped="" ref="0x7f929c0684b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f929c06f4e8" loc="73:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f929c06f4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f929c06f838"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f929c06f9c0"/>
        <function-ref name="request" scoped="" ref="0x7f929c06fb48"/>
        <function-ref name="granted" scoped="" ref="0x7f929c06fcd0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f929c06fe58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f929c06dc10" loc="76:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f929c06dc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f929c06c020"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f929c06c1a8"/>
        <function-ref name="splitRead" scoped="" ref="0x7f929c06c330"/>
        <function-ref name="write" scoped="" ref="0x7f929c06c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f929c063b50" loc="81:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f929c063b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f929c066020"/>
        <function-ref name="txDone" scoped="" ref="0x7f929c0661a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f929bff7d58" loc="76:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f929bff7d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f929bff60f0"/>
        <function-ref name="configure" scoped="" ref="0x7f929bff6278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f929bff46d8" loc="79:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f929bff46d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f929bff4a48"/>
        <function-ref name="sendDone" scoped="" ref="0x7f929bff4bd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f929bff3d58" loc="82:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f929bff3d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f929bff20f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f929bff6500" loc="77:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f929bff6500"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f929bff6850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7f929bff23b8" loc="83:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f929bff23b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f929bff2708"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f929bff2890"/>
        <function-ref name="setUctl" scoped="" ref="0x7f929bff2a18"/>
        <function-ref name="enableUart" scoped="" ref="0x7f929bff2ba0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f929bff2d28"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f929bff1020"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f929bff11a8"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f929bff1330"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f929bff14b8"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f929bff1640"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f929bff17c8"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f929bff1950"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f929bff1ad8"/>
        <function-ref name="getUbr" scoped="" ref="0x7f929bff1d60"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f929bff0020"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f929bff01a8"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f929bff0330"/>
        <function-ref name="isUart" scoped="" ref="0x7f929bff04b8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f929bff0640"/>
        <function-ref name="isSpi" scoped="" ref="0x7f929bff07c8"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f929bff0950"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f929bff0ad8"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f929bff0c60"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f929bff0de8"/>
        <function-ref name="getMode" scoped="" ref="0x7f929bfef020"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f929bfef3a8"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f929bfef530"/>
        <function-ref name="setUbr" scoped="" ref="0x7f929bfef6b8"/>
        <function-ref name="tx" scoped="" ref="0x7f929bfef840"/>
        <function-ref name="getUctl" scoped="" ref="0x7f929bfef9c8"/>
        <function-ref name="disableUart" scoped="" ref="0x7f929bfefb50"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f929bfefcd8"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f929bfefe60"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f929bfee020"/>
        <function-ref name="rx" scoped="" ref="0x7f929bfee1a8"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f929bfee330"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f929bfee4b8"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f929bfee640"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f929bfee7c8"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f929bfee950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f929bfed430" loc="85:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f929bfed430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f929bfed780"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f929bfed908"/>
        <function-ref name="led1On" scoped="" ref="0x7f929bfeda90"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f929bfedc18"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f929bfedda0"/>
        <function-ref name="get" scoped="" ref="0x7f929bfec020"/>
        <function-ref name="led1Off" scoped="" ref="0x7f929bfec1a8"/>
        <function-ref name="led2On" scoped="" ref="0x7f929bfec7c8"/>
        <function-ref name="set" scoped="" ref="0x7f929bfec4b8"/>
        <function-ref name="led2Off" scoped="" ref="0x7f929bfec330"/>
        <function-ref name="led0On" scoped="" ref="0x7f929bfec640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f929bff3020" loc="81:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f929bff3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f929bff3390"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f929bff3518"/>
        <function-ref name="request" scoped="" ref="0x7f929bff36a0"/>
        <function-ref name="granted" scoped="" ref="0x7f929bff3828"/>
        <function-ref name="isOwner" scoped="" ref="0x7f929bff39b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f929bff7020" loc="75:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f929bff7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f929bff7390"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f929bff7518"/>
        <function-ref name="request" scoped="" ref="0x7f929bff76a0"/>
        <function-ref name="granted" scoped="" ref="0x7f929bff7828"/>
        <function-ref name="isOwner" scoped="" ref="0x7f929bff79b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f929bff6ad8" loc="78:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f929bff6ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f929bff6e28"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f929bff4020"/>
        <function-ref name="splitRead" scoped="" ref="0x7f929bff41a8"/>
        <function-ref name="write" scoped="" ref="0x7f929bff4330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f929bfeec18" loc="84:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f929bfeec18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f929bfed020"/>
        <function-ref name="txDone" scoped="" ref="0x7f929bfed1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalDone_task" ref="0x7f929bfeca90" loc="102:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalDone_task" scoped="" ref="0x7f929bfeca90"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f929bfecde0"/>
        <function-ref name="runTask" scoped="" ref="0x7f929bfeb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7f929bfde020" loc="78:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f929bfde020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f929bfde370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f929bfe09c0" loc="77:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f929bfe09c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f929bfe0d10"/>
        <function-ref name="txDone" scoped="" ref="0x7f929bfdf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f929bfe4080" loc="76:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f929bfe4080"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f929bfe43d0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f929bfe4558"/>
        <function-ref name="setUctl" scoped="" ref="0x7f929bfe46e0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f929bfe4868"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f929bfe49f0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f929bfe4b78"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f929bfe4d00"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f929bfe3020"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f929bfe31a8"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f929bfe3330"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f929bfe34b8"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f929bfe3640"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f929bfe37c8"/>
        <function-ref name="getUbr" scoped="" ref="0x7f929bfe3a50"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f929bfe3bd8"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f929bfe3d60"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f929bfe2020"/>
        <function-ref name="isUart" scoped="" ref="0x7f929bfe21a8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f929bfe2330"/>
        <function-ref name="isSpi" scoped="" ref="0x7f929bfe24b8"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f929bfe2640"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f929bfe27c8"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f929bfe2950"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f929bfe2ad8"/>
        <function-ref name="getMode" scoped="" ref="0x7f929bfe2c60"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f929bfe1020"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f929bfe11a8"/>
        <function-ref name="setUbr" scoped="" ref="0x7f929bfe1330"/>
        <function-ref name="tx" scoped="" ref="0x7f929bfe14b8"/>
        <function-ref name="getUctl" scoped="" ref="0x7f929bfe1640"/>
        <function-ref name="disableUart" scoped="" ref="0x7f929bfe17c8"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f929bfe1950"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f929bfe1ad8"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f929bfe1c60"/>
        <function-ref name="rx" scoped="" ref="0x7f929bfe1de8"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f929bfe0020"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f929bfe01a8"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f929bfe0330"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f929bfe04b8"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f929bfe0640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f929bfa5968" loc="82:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f929bfa5968"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929bfa5cb8"/>
        <function-ref name="isInput" scoped="" ref="0x7f929bfa5e40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929bfa4020"/>
        <function-ref name="toggle" scoped="" ref="0x7f929bfa41a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929bfa4330"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929bfa44b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929bfa4640"/>
        <function-ref name="get" scoped="" ref="0x7f929bfa47c8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929bfa4950"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929bfa4ad8"/>
        <function-ref name="set" scoped="" ref="0x7f929bfa4c60"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929bfa4de8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929bfa3020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929bfa32a8"/>
        <function-ref name="clr" scoped="" ref="0x7f929bfa3430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f929bfd5020" loc="76:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f929bfd5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f929bfd5370"/>
        <function-ref name="txDone" scoped="" ref="0x7f929bfd54f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7f929bfa37e0" loc="83:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7f929bfa37e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929bfa3b30"/>
        <function-ref name="isInput" scoped="" ref="0x7f929bfa3cb8"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929bfa3e40"/>
        <function-ref name="toggle" scoped="" ref="0x7f929bfa2020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929bfa21a8"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929bfa2330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929bfa24b8"/>
        <function-ref name="get" scoped="" ref="0x7f929bfa2640"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929bfa27c8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929bfa2950"/>
        <function-ref name="set" scoped="" ref="0x7f929bfa2ad8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929bfa2c60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929bfa2de8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929bfa1120"/>
        <function-ref name="clr" scoped="" ref="0x7f929bfa12a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7f929bfa1658" loc="84:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7f929bfa1658"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929bfa19a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f929bfa1b30"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929bfa1cb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f929bfa1e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929bfa0020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929bfa01a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929bfa0330"/>
        <function-ref name="get" scoped="" ref="0x7f929bfa04b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929bfa0640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929bfa07c8"/>
        <function-ref name="set" scoped="" ref="0x7f929bfa0950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929bfa0ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929bfa0c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929bf9f020"/>
        <function-ref name="clr" scoped="" ref="0x7f929bf9f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7f929bfdb5a8" loc="75:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f929bfdb5a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f929bfdb8f8"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f929bfdba80"/>
        <function-ref name="setUctl" scoped="" ref="0x7f929bfdbc08"/>
        <function-ref name="enableUart" scoped="" ref="0x7f929bfdbd90"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f929bfd9020"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f929bfd91a8"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f929bfd9330"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f929bfd94b8"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f929bfd9640"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f929bfd97c8"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f929bfd9950"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f929bfd9ad8"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f929bfd9c60"/>
        <function-ref name="getUbr" scoped="" ref="0x7f929bfd8020"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f929bfd81a8"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f929bfd8330"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f929bfd84b8"/>
        <function-ref name="isUart" scoped="" ref="0x7f929bfd8640"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f929bfd87c8"/>
        <function-ref name="isSpi" scoped="" ref="0x7f929bfd8950"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f929bfd8ad8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f929bfd8c60"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f929bfd8de8"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f929bfd7020"/>
        <function-ref name="getMode" scoped="" ref="0x7f929bfd71a8"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f929bfd7530"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f929bfd76b8"/>
        <function-ref name="setUbr" scoped="" ref="0x7f929bfd7840"/>
        <function-ref name="tx" scoped="" ref="0x7f929bfd79c8"/>
        <function-ref name="getUctl" scoped="" ref="0x7f929bfd7b50"/>
        <function-ref name="disableUart" scoped="" ref="0x7f929bfd7cd8"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f929bfd7e60"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f929bfd6020"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f929bfd61a8"/>
        <function-ref name="rx" scoped="" ref="0x7f929bfd6330"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f929bfd64b8"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f929bfd6640"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f929bfd67c8"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f929bfd6950"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f929bfd6ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplI2C" ref="0x7f929bfd3060" loc="79:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7f929bfd3060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f929bfd33b0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f929bfd3538"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f929bfd36c0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f929bfd3848"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f929bfd39d0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f929bfd3b58"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f929bfd3ce0"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f929bfd3e68"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f929bfd2020"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f929bfd21a8"/>
        <function-ref name="getData" scoped="" ref="0x7f929bfd2330"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f929bfd24b8"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f929bfd2640"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f929bfd28c8"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f929bfd2a50"/>
        <function-ref name="getIV" scoped="" ref="0x7f929bfd2bd8"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f929bfd2d60"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f929bfad020"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f929bfad1a8"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f929bfad330"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f929bfad4b8"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f929bfad640"/>
        <function-ref name="isI2C" scoped="" ref="0x7f929bfad7c8"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f929bfad950"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f929bfadad8"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f929bfade60"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f929bfac020"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f929bfac1a8"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f929bfac330"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f929bfac4b8"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f929bfac640"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f929bfac7c8"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f929bfac950"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f929bfacad8"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f929bfacc60"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f929bfacde8"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f929bfab020"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f929bfab1a8"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f929bfab330"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f929bfab4b8"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f929bfab640"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f929bfab7c8"/>
        <function-ref name="setData" scoped="" ref="0x7f929bfab950"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f929bfabad8"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f929bfabc60"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f929bfabde8"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f929bfaa020"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f929bfaa1a8"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f929bfaa330"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f929bfaa8b8"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f929bfaaa40"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f929bfaabc8"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f929bfaad50"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f929bfa9020"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f929bfa91a8"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f929bfa9330"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f929bfa94b8"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f929bfa9640"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f929bfa97c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7f929bfa7af0" loc="81:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7f929bfa7af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929bfa7e40"/>
        <function-ref name="isInput" scoped="" ref="0x7f929bfa6020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929bfa61a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f929bfa6330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929bfa64b8"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929bfa6640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929bfa67c8"/>
        <function-ref name="get" scoped="" ref="0x7f929bfa6950"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929bfa6ad8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929bfa6c60"/>
        <function-ref name="set" scoped="" ref="0x7f929bfa6de8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929bfa5020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929bfa51a8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929bfa5430"/>
        <function-ref name="clr" scoped="" ref="0x7f929bfa55b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f929bfd5928" loc="77:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f929bfd5928"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f929bfd5c78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f929bfa9b78" loc="80:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f929bfa9b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929bfa8020"/>
        <function-ref name="isInput" scoped="" ref="0x7f929bfa81a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929bfa8330"/>
        <function-ref name="toggle" scoped="" ref="0x7f929bfa84b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929bfa8640"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929bfa87c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929bfa8950"/>
        <function-ref name="get" scoped="" ref="0x7f929bfa8ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929bfa8c60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929bfa8de8"/>
        <function-ref name="set" scoped="" ref="0x7f929bfa7020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929bfa71a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929bfa7330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929bfa75b8"/>
        <function-ref name="clr" scoped="" ref="0x7f929bfa7740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f929aa878c8" loc="42:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f929aa878c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f929aa87c18"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f929aa87da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7f929aa81780" loc="46:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f929aa81780"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f929aa81ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f929aa7a8c8" loc="51:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f929aa7a8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f929aa7ac18"/>
        <function-ref name="configure" scoped="" ref="0x7f929aa7ada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7f929aa81d58" loc="48:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f929aa81d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f929aa800d8"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f929aa80260"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f929aa803e8"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f929aa80570"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f929aa806f8"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f929aa80880"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f929aa80a08"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f929aa80b90"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f929aa80d18"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f929aa7f020"/>
        <function-ref name="getData" scoped="" ref="0x7f929aa7f1a8"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f929aa7f330"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f929aa7f4b8"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f929aa7f740"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f929aa7f8c8"/>
        <function-ref name="getIV" scoped="" ref="0x7f929aa7fa50"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f929aa7fbd8"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f929aa7fd60"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f929aa7e020"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f929aa7e1a8"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f929aa7e330"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f929aa7e4b8"/>
        <function-ref name="isI2C" scoped="" ref="0x7f929aa7e640"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f929aa7e7c8"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f929aa7e950"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f929aa7ecd8"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f929aa7ee60"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f929aa7d020"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f929aa7d1a8"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f929aa7d330"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f929aa7d4b8"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f929aa7d640"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f929aa7d7c8"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f929aa7d950"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f929aa7dad8"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f929aa7dc60"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f929aa7dde8"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f929aa7c020"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f929aa7c1a8"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f929aa7c330"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f929aa7c4b8"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f929aa7c640"/>
        <function-ref name="setData" scoped="" ref="0x7f929aa7c7c8"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f929aa7c950"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f929aa7cad8"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f929aa7cc60"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f929aa7cde8"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f929aa7b020"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f929aa7b1a8"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f929aa7b730"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f929aa7b8b8"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f929aa7ba40"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f929aa7bbc8"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f929aa7bd50"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f929aa7a020"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f929aa7a1a8"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f929aa7a330"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f929aa7a4b8"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f929aa7a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f929aa81020" loc="45:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f929aa81020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f929aa81370"/>
        <function-ref name="txDone" scoped="" ref="0x7f929aa814f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f929aa88b38" loc="41:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f929aa88b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f929aa87020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f929aa871a8"/>
        <function-ref name="request" scoped="" ref="0x7f929aa87330"/>
        <function-ref name="granted" scoped="" ref="0x7f929aa874b8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f929aa87640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f929aa867c0" loc="44:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f929aa867c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f929aa86b10"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f929aa86c98"/>
        <function-ref name="setUctl" scoped="" ref="0x7f929aa86e20"/>
        <function-ref name="enableUart" scoped="" ref="0x7f929aa85020"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f929aa851a8"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f929aa85330"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f929aa854b8"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f929aa85640"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f929aa857c8"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f929aa85950"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f929aa85ad8"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f929aa85c60"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f929aa85de8"/>
        <function-ref name="getUbr" scoped="" ref="0x7f929aa84120"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f929aa842a8"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f929aa84430"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f929aa845b8"/>
        <function-ref name="isUart" scoped="" ref="0x7f929aa84740"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f929aa848c8"/>
        <function-ref name="isSpi" scoped="" ref="0x7f929aa84a50"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f929aa84bd8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f929aa84d60"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f929aa83020"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f929aa831a8"/>
        <function-ref name="getMode" scoped="" ref="0x7f929aa83330"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f929aa836b8"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f929aa83840"/>
        <function-ref name="setUbr" scoped="" ref="0x7f929aa839c8"/>
        <function-ref name="tx" scoped="" ref="0x7f929aa83b50"/>
        <function-ref name="getUctl" scoped="" ref="0x7f929aa83cd8"/>
        <function-ref name="disableUart" scoped="" ref="0x7f929aa83e60"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f929aa82020"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f929aa821a8"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f929aa82330"/>
        <function-ref name="rx" scoped="" ref="0x7f929aa824b8"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f929aa82640"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f929aa827c8"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f929aa82950"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f929aa82ad8"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f929aa82c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f929aa86060" loc="43:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f929aa86060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f929aa863b0"/>
        <function-ref name="userId" scoped="" ref="0x7f929aa86538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f929bf05660" loc="42:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f929bf05660"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f929bf059b0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f929bf05b38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f929bf03b58" loc="45:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f929bf03b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f929bf02020"/>
        <function-ref name="configure" scoped="" ref="0x7f929bf021a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f929bf0aa50" loc="39:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f929bf0aa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f929bf0ada0"/>
        <function-ref name="txDone" scoped="" ref="0x7f929bf07020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f929bf06498" loc="41:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f929bf06498"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f929bf067e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f929bf06970"/>
        <function-ref name="request" scoped="" ref="0x7f929bf06af8"/>
        <function-ref name="granted" scoped="" ref="0x7f929bf06c80"/>
        <function-ref name="isOwner" scoped="" ref="0x7f929bf06e08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f929bf07940" loc="40:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f929bf07940"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f929bf07c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f929bf05e30" loc="43:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f929bf05e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f929bf031a8"/>
        <function-ref name="userId" scoped="" ref="0x7f929bf03330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f929beee2a8" loc="43:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f929beee2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f929beee5f8"/>
        <function-ref name="userId" scoped="" ref="0x7f929beee780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f929bf00480" loc="39:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f929bf00480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f929bf007f0"/>
        <function-ref name="txDone" scoped="" ref="0x7f929bf00978"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7f929bef0bd8" loc="42:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f929bef0bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f929beee020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f929bf00d60" loc="40:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f929bf00d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f929bef0170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7f929bef0438" loc="41:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7f929bef0438"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f929bef0788"/>
        <function-ref name="txDone" scoped="" ref="0x7f929bef0910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f929be79d18" loc="92:/home/kai/wsnpr/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f929be79d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f929be780d8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f929be78260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f929be77960" loc="96:/home/kai/wsnpr/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f929be77960"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f929be77cd0"/>
        <function-ref name="configure" scoped="" ref="0x7f929be77e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f929be784a8" loc="93:/home/kai/wsnpr/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f929be784a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f929be787f8"/>
        <function-ref name="requested" scoped="" ref="0x7f929be78980"/>
        <function-ref name="granted" scoped="" ref="0x7f929be78b08"/>
        <function-ref name="isOwner" scoped="" ref="0x7f929be78c90"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f929be78e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f929be79020" loc="91:/home/kai/wsnpr/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f929be79020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f929be79390"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f929be79518"/>
        <function-ref name="request" scoped="" ref="0x7f929be796a0"/>
        <function-ref name="granted" scoped="" ref="0x7f929be79828"/>
        <function-ref name="isOwner" scoped="" ref="0x7f929be799b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f929be770e0" loc="94:/home/kai/wsnpr/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f929be770e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f929be77430"/>
        <function-ref name="userId" scoped="" ref="0x7f929be775b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f929aa198e0" loc="44:/home/kai/wsnpr/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f929aa198e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f929aa19c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f929aa18020" loc="45:/home/kai/wsnpr/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f929aa18020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f929aa18370"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f929aa184f8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f929aa18680"/>
        <function-ref name="dequeue" scoped="" ref="0x7f929aa18808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f929aa16d58" loc="55:/home/kai/wsnpr/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f929aa16d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f929aa140f0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f929aa14278"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f929aa13980" loc="60:/home/kai/wsnpr/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f929aa13980"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f929aa13cf0"/>
        <function-ref name="configure" scoped="" ref="0x7f929aa13e78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f929aa12130" loc="61:/home/kai/wsnpr/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f929aa12130"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f929aa12480"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f929aa12608"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f929aa12790"/>
        <function-ref name="dequeue" scoped="" ref="0x7f929aa12918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f929aa144c0" loc="56:/home/kai/wsnpr/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f929aa144c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f929aa14810"/>
        <function-ref name="requested" scoped="" ref="0x7f929aa14998"/>
        <function-ref name="granted" scoped="" ref="0x7f929aa14b20"/>
        <function-ref name="isOwner" scoped="" ref="0x7f929aa14ca8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f929aa14e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f929aa12b60" loc="62:/home/kai/wsnpr/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f929aa12b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f929aa11020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f929aa111a8"/>
        <function-ref name="led1On" scoped="" ref="0x7f929aa11330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f929aa114b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f929aa11640"/>
        <function-ref name="get" scoped="" ref="0x7f929aa117c8"/>
        <function-ref name="led1Off" scoped="" ref="0x7f929aa11950"/>
        <function-ref name="led0On" scoped="" ref="0x7f929aa10020"/>
        <function-ref name="set" scoped="" ref="0x7f929aa11c60"/>
        <function-ref name="led2On" scoped="" ref="0x7f929aa11ad8"/>
        <function-ref name="led2Off" scoped="" ref="0x7f929aa11de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f929aa16060" loc="54:/home/kai/wsnpr/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f929aa16060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f929aa163d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f929aa16558"/>
        <function-ref name="request" scoped="" ref="0x7f929aa166e0"/>
        <function-ref name="granted" scoped="" ref="0x7f929aa16868"/>
        <function-ref name="isOwner" scoped="" ref="0x7f929aa169f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f929aa130e0" loc="57:/home/kai/wsnpr/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f929aa130e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f929aa13430"/>
        <function-ref name="userId" scoped="" ref="0x7f929aa135b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f929aa102e8" loc="75:/home/kai/wsnpr/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7f929aa102e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f929aa10638"/>
        <function-ref name="runTask" scoped="" ref="0x7f929aa107c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7f929be70298" loc="4:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <component-ref qname="HplMsp430I2C0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f929be70298"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f929be705e8"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f929be70770"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f929be708f8"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f929be70a80"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f929be70c08"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f929be70d90"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f929be6d020"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f929be6d1a8"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f929be6d330"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f929be6d4b8"/>
        <function-ref name="getData" scoped="" ref="0x7f929be6d640"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f929be6d7c8"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f929be6d950"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f929be6dbd8"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f929be6dd60"/>
        <function-ref name="getIV" scoped="" ref="0x7f929be6c020"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f929be6c1a8"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f929be6c330"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f929be6c4b8"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f929be6c640"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f929be6c7c8"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f929be6c950"/>
        <function-ref name="isI2C" scoped="" ref="0x7f929be6cad8"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f929be6cc60"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f929be6cde8"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f929be6b220"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f929be6b3a8"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f929be6b530"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f929be6b6b8"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f929be6b840"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f929be6b9c8"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f929be6bb50"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f929be6bcd8"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f929be6be60"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f929be6a020"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f929be6a1a8"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f929be6a330"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f929be6a4b8"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f929be6a640"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f929be6a7c8"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f929be6a950"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f929be6aad8"/>
        <function-ref name="setData" scoped="" ref="0x7f929be6ac60"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f929be6ade8"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f929be69020"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f929be691a8"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f929be69330"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f929be694b8"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f929be69640"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f929be69bc8"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f929be69d50"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f929be68020"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f929be681a8"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f929be68330"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f929be684b8"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f929be68640"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f929be687c8"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f929be68950"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f929be68ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUsart" ref="0x7f929be5e6e0" loc="41:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplUsart" scoped="" ref="0x7f929be5e6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f929be5ea30"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f929be5ebb8"/>
        <function-ref name="setUctl" scoped="" ref="0x7f929be5ed40"/>
        <function-ref name="enableUart" scoped="" ref="0x7f929be5c020"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f929be5c1a8"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f929be5c330"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f929be5c4b8"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f929be5c640"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f929be5c7c8"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f929be5c950"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f929be5cad8"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f929be5cc60"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f929be5cde8"/>
        <function-ref name="getUbr" scoped="" ref="0x7f929be5b120"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f929be5b2a8"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f929be5b430"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f929be5b5b8"/>
        <function-ref name="isUart" scoped="" ref="0x7f929be5b740"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f929be5b8c8"/>
        <function-ref name="isSpi" scoped="" ref="0x7f929be5ba50"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f929be5bbd8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f929be5bd60"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f929be5a020"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f929be5a1a8"/>
        <function-ref name="getMode" scoped="" ref="0x7f929be5a330"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f929be5a6b8"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f929be5a840"/>
        <function-ref name="setUbr" scoped="" ref="0x7f929be5a9c8"/>
        <function-ref name="tx" scoped="" ref="0x7f929be5ab50"/>
        <function-ref name="getUctl" scoped="" ref="0x7f929be5acd8"/>
        <function-ref name="disableUart" scoped="" ref="0x7f929be5ae60"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f929be59020"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f929be591a8"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f929be59330"/>
        <function-ref name="rx" scoped="" ref="0x7f929be594b8"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f929be59640"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f929be597c8"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f929be59950"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f929be59ad8"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f929be59c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f929be57e00" loc="43:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f929be57e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929be561a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f929be56330"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929be564b8"/>
        <function-ref name="toggle" scoped="" ref="0x7f929be56640"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929be567c8"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929be56950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929be56ad8"/>
        <function-ref name="get" scoped="" ref="0x7f929be56c60"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929be56de8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929be55020"/>
        <function-ref name="set" scoped="" ref="0x7f929be551a8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929be55330"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929be554b8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929be55740"/>
        <function-ref name="clr" scoped="" ref="0x7f929be558c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplI2C" ref="0x7f929be67b30" loc="39:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7f929be67b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f929be67e80"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f929be64030"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f929be641b8"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f929be64340"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f929be644c8"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f929be64650"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f929be647d8"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f929be64960"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f929be64ae8"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f929be64c70"/>
        <function-ref name="getData" scoped="" ref="0x7f929be64df8"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f929be63020"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f929be631a8"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f929be63430"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f929be635b8"/>
        <function-ref name="getIV" scoped="" ref="0x7f929be63740"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f929be638c8"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f929be63a50"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f929be63bd8"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f929be63d60"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f929be62020"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f929be621a8"/>
        <function-ref name="isI2C" scoped="" ref="0x7f929be62330"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f929be624b8"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f929be62640"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f929be629c8"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f929be62b50"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f929be62cd8"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f929be62e60"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f929be61020"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f929be611a8"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f929be61330"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f929be614b8"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f929be61640"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f929be617c8"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f929be61950"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f929be61ad8"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f929be61c60"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f929be61de8"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f929be60020"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f929be601a8"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f929be60330"/>
        <function-ref name="setData" scoped="" ref="0x7f929be604b8"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f929be60640"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f929be607c8"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f929be60950"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f929be60ad8"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f929be60c60"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f929be60de8"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f929be5f420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f929be5f5a8"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f929be5f730"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f929be5f8b8"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f929be5fa40"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f929be5fbc8"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f929be5fd50"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f929be5e020"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f929be5e1a8"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f929be5e330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f929be58060" loc="42:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f929be58060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929be583b0"/>
        <function-ref name="isInput" scoped="" ref="0x7f929be58538"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929be586c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f929be58848"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929be589d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929be58b58"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929be58ce0"/>
        <function-ref name="get" scoped="" ref="0x7f929be58e68"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929be57020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929be571a8"/>
        <function-ref name="set" scoped="" ref="0x7f929be57330"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929be574b8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929be57640"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929be578c8"/>
        <function-ref name="clr" scoped="" ref="0x7f929be57a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f929bd50a88" loc="69:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f929bd50a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd4e020"/>
        <function-ref name="write" scoped="" ref="0x7f929bd4e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f929bd59100" loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f929bd59100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f929bd59450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f929bd53a88" loc="63:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f929bd53a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd53dd8"/>
        <function-ref name="write" scoped="" ref="0x7f929bd52020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f929bd4d470" loc="72:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f929bd4d470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd4d7c0"/>
        <function-ref name="write" scoped="" ref="0x7f929bd4d948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f929bd46c10" loc="86:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f929bd46c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd45020"/>
        <function-ref name="write" scoped="" ref="0x7f929bd451a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f929bd4dc10" loc="73:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f929bd4dc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd4c020"/>
        <function-ref name="write" scoped="" ref="0x7f929bd4c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f929bd392e8" loc="108:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f929bd392e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd39638"/>
        <function-ref name="write" scoped="" ref="0x7f929bd397c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f929bd3c2e8" loc="104:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f929bd3c2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd3c638"/>
        <function-ref name="write" scoped="" ref="0x7f929bd3c7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f929bd583a0" loc="50:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f929bd583a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f929bd586f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f929bd42470" loc="93:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f929bd42470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd427c0"/>
        <function-ref name="write" scoped="" ref="0x7f929bd42948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f929bd3d2e8" loc="102:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f929bd3d2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd3d638"/>
        <function-ref name="write" scoped="" ref="0x7f929bd3d7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f929bd52a88" loc="65:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f929bd52a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd52dd8"/>
        <function-ref name="write" scoped="" ref="0x7f929bd51020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f929bd51a88" loc="67:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f929bd51a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd51dd8"/>
        <function-ref name="write" scoped="" ref="0x7f929bd50020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f929bd47470" loc="83:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f929bd47470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd477c0"/>
        <function-ref name="write" scoped="" ref="0x7f929bd47948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f929bd4ac10" loc="79:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f929bd4ac10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd49020"/>
        <function-ref name="write" scoped="" ref="0x7f929bd491a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f929bd4c470" loc="74:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f929bd4c470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd4c7c0"/>
        <function-ref name="write" scoped="" ref="0x7f929bd4c948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f929bd5ca90" loc="42:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f929bd5ca90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f929bd5cde0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f929bd5a020"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f929bd5a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f929bd57c50" loc="54:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f929bd57c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f929bd56020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f929bd562e8" loc="55:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f929bd562e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f929bd56738"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f929bd40a38" loc="95:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f929bd40a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd40d88"/>
        <function-ref name="write" scoped="" ref="0x7f929bd3f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f929bd56a00" loc="56:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f929bd56a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f929bd56d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f929bd3da88" loc="103:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f929bd3da88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd3ddd8"/>
        <function-ref name="write" scoped="" ref="0x7f929bd3c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f929bd57020" loc="52:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f929bd57020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f929bd57370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f929bd43c10" loc="92:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f929bd43c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd42020"/>
        <function-ref name="write" scoped="" ref="0x7f929bd421a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f929bd512e8" loc="66:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f929bd512e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd51638"/>
        <function-ref name="write" scoped="" ref="0x7f929bd517c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f929bd522e8" loc="64:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f929bd522e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd52638"/>
        <function-ref name="write" scoped="" ref="0x7f929bd527c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f929bd5aa88" loc="46:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f929bd5aa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f929bd5add8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f929bd44c10" loc="90:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f929bd44c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd43020"/>
        <function-ref name="write" scoped="" ref="0x7f929bd431a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f929bd45470" loc="87:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f929bd45470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd457c0"/>
        <function-ref name="write" scoped="" ref="0x7f929bd45948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f929bd43470" loc="91:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f929bd43470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd437c0"/>
        <function-ref name="write" scoped="" ref="0x7f929bd43948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f929bd3ba88" loc="107:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f929bd3ba88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd3bdd8"/>
        <function-ref name="write" scoped="" ref="0x7f929bd39020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f929bd3ca88" loc="105:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f929bd3ca88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd3cdd8"/>
        <function-ref name="write" scoped="" ref="0x7f929bd3b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f929bd49470" loc="80:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f929bd49470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd497c0"/>
        <function-ref name="write" scoped="" ref="0x7f929bd49948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f929bd45c10" loc="88:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f929bd45c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd44020"/>
        <function-ref name="write" scoped="" ref="0x7f929bd441a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f929bd3ea88" loc="101:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f929bd3ea88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd3edd8"/>
        <function-ref name="write" scoped="" ref="0x7f929bd3d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f929bd4b470" loc="76:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f929bd4b470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd4b7c0"/>
        <function-ref name="write" scoped="" ref="0x7f929bd4b948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f929bd39a88" loc="111:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f929bd39a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f929bd39dd8"/>
        <function-ref name="writeDone" scoped="" ref="0x7f929bd38020"/>
        <function-ref name="write" scoped="" ref="0x7f929bd381a8"/>
        <function-ref name="beginRead" scoped="" ref="0x7f929bd38330"/>
        <function-ref name="readDone" scoped="" ref="0x7f929bd384b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f929bd5a470" loc="45:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f929bd5a470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f929bd5a7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f929bd532e8" loc="62:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f929bd532e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd53638"/>
        <function-ref name="write" scoped="" ref="0x7f929bd537c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f929bd502e8" loc="68:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f929bd502e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd50638"/>
        <function-ref name="write" scoped="" ref="0x7f929bd507c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f929bd47c10" loc="84:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f929bd47c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd46020"/>
        <function-ref name="write" scoped="" ref="0x7f929bd461a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f929bd4cc10" loc="75:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f929bd4cc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd4b020"/>
        <function-ref name="write" scoped="" ref="0x7f929bd4b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f929bd46470" loc="85:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f929bd46470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd467c0"/>
        <function-ref name="write" scoped="" ref="0x7f929bd46948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f929bd4e470" loc="70:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f929bd4e470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd4e7c0"/>
        <function-ref name="write" scoped="" ref="0x7f929bd4e948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f929bd59718" loc="48:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f929bd59718"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f929bd59a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f929bd4ec10" loc="71:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f929bd4ec10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd4d020"/>
        <function-ref name="write" scoped="" ref="0x7f929bd4d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f929bd5de60" loc="41:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f929bd5de60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f929bd5c1e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f929bd5c370"/>
        <function-ref name="request" scoped="" ref="0x7f929bd5c4f8"/>
        <function-ref name="granted" scoped="" ref="0x7f929bd5c680"/>
        <function-ref name="isOwner" scoped="" ref="0x7f929bd5c808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f929bd54060" loc="57:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f929bd54060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f929bd543b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f929bd54c90" loc="59:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f929bd54c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f929bd53020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f929bd3e2e8" loc="100:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f929bd3e2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd3e638"/>
        <function-ref name="write" scoped="" ref="0x7f929bd3e7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f929bd3fa88" loc="99:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f929bd3fa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd3fdd8"/>
        <function-ref name="write" scoped="" ref="0x7f929bd3e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f929bd57638" loc="53:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f929bd57638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f929bd57988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f929bd3f2e8" loc="96:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f929bd3f2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd3f638"/>
        <function-ref name="write" scoped="" ref="0x7f929bd3f7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f929bd3b2e8" loc="106:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f929bd3b2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd3b638"/>
        <function-ref name="write" scoped="" ref="0x7f929bd3b7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f929bd49c10" loc="81:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f929bd49c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd47020"/>
        <function-ref name="write" scoped="" ref="0x7f929bd471a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f929bd44470" loc="89:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f929bd44470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd447c0"/>
        <function-ref name="write" scoped="" ref="0x7f929bd44948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f929bd59d30" loc="49:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f929bd59d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f929bd580d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f929bd589b8" loc="51:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f929bd589b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f929bd58d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f929bd4bc10" loc="77:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f929bd4bc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd4a020"/>
        <function-ref name="write" scoped="" ref="0x7f929bd4a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f929bd54678" loc="58:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f929bd54678"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f929bd549c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f929bd4a470" loc="78:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f929bd4a470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd4a7c0"/>
        <function-ref name="write" scoped="" ref="0x7f929bd4a948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f929bd42c10" loc="94:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f929bd42c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd405e8"/>
        <function-ref name="write" scoped="" ref="0x7f929bd40770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f929bd38780" loc="112:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f929bd38780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f929bd38ad0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f929bd38c58"/>
        <function-ref name="write" scoped="" ref="0x7f929bd38de0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f929bd37020"/>
        <function-ref name="readDone" scoped="" ref="0x7f929bd371a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f929bd23470" loc="69:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f929bd23470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd239c0"/>
        <function-ref name="write" scoped="" ref="0x7f929bd23b48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f929bd2e900" loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f929bd2e900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f929bd2ec50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f929bd27470" loc="63:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f929bd27470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd277c0"/>
        <function-ref name="write" scoped="" ref="0x7f929bd27948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f929bd22d98" loc="72:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f929bd22d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd21170"/>
        <function-ref name="write" scoped="" ref="0x7f929bd212f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f929bd1a470" loc="86:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f929bd1a470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd1a7c0"/>
        <function-ref name="write" scoped="" ref="0x7f929bd1a948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f929bd215c0" loc="73:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f929bd215c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd21910"/>
        <function-ref name="write" scoped="" ref="0x7f929bd21a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f929bd0e7c0" loc="108:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f929bd0e7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd0eb10"/>
        <function-ref name="write" scoped="" ref="0x7f929bd0ec98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f929bd107c0" loc="104:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f929bd107c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd10b10"/>
        <function-ref name="write" scoped="" ref="0x7f929bd10c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f929bd2dc50" loc="50:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f929bd2dc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f929bd2b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f929bd16c10" loc="93:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f929bd16c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd15020"/>
        <function-ref name="write" scoped="" ref="0x7f929bd151a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f929bd117c0" loc="102:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f929bd117c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd11b10"/>
        <function-ref name="write" scoped="" ref="0x7f929bd11c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f929bd25470" loc="65:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f929bd25470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd257c0"/>
        <function-ref name="write" scoped="" ref="0x7f929bd25948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f929bd24470" loc="67:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f929bd24470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd247c0"/>
        <function-ref name="write" scoped="" ref="0x7f929bd24948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f929bd1cc10" loc="83:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f929bd1cc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd1b020"/>
        <function-ref name="write" scoped="" ref="0x7f929bd1b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f929bd1d470" loc="79:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f929bd1d470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd1d7c0"/>
        <function-ref name="write" scoped="" ref="0x7f929bd1d948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f929bd21d60" loc="74:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f929bd21d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd1f0d8"/>
        <function-ref name="write" scoped="" ref="0x7f929bd1f260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f929bd2f2a8" loc="42:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f929bd2f2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f929bd2f5f8"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f929bd2f780"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f929bd2f908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f929bd2a638" loc="54:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f929bd2a638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f929bd2a988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f929bd2ac50" loc="55:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f929bd2ac50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f929bd290d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f929bd14060" loc="95:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f929bd14060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd143b0"/>
        <function-ref name="write" scoped="" ref="0x7f929bd14538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f929bd293a0" loc="56:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f929bd293a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f929bd296f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f929bd10020" loc="103:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f929bd10020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd10370"/>
        <function-ref name="write" scoped="" ref="0x7f929bd104f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f929bd2b900" loc="52:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f929bd2b900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f929bd2bc50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f929bd16470" loc="92:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f929bd16470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd167c0"/>
        <function-ref name="write" scoped="" ref="0x7f929bd16948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f929bd25c10" loc="66:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f929bd25c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd24020"/>
        <function-ref name="write" scoped="" ref="0x7f929bd241a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f929bd27c10" loc="64:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f929bd27c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd25020"/>
        <function-ref name="write" scoped="" ref="0x7f929bd251a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f929bd2e2e8" loc="46:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f929bd2e2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f929bd2e638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f929bd17470" loc="90:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f929bd17470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd177c0"/>
        <function-ref name="write" scoped="" ref="0x7f929bd17948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f929bd1ac10" loc="87:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f929bd1ac10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd18020"/>
        <function-ref name="write" scoped="" ref="0x7f929bd181a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f929bd17c10" loc="91:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f929bd17c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd16020"/>
        <function-ref name="write" scoped="" ref="0x7f929bd161a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f929bd0e020" loc="107:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f929bd0e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd0e370"/>
        <function-ref name="write" scoped="" ref="0x7f929bd0e4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f929bd0f020" loc="105:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f929bd0f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd0f370"/>
        <function-ref name="write" scoped="" ref="0x7f929bd0f4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f929bd1dc10" loc="80:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f929bd1dc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd1c020"/>
        <function-ref name="write" scoped="" ref="0x7f929bd1c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f929bd18470" loc="88:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f929bd18470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd187c0"/>
        <function-ref name="write" scoped="" ref="0x7f929bd18948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f929bd11020" loc="101:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f929bd11020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd11370"/>
        <function-ref name="write" scoped="" ref="0x7f929bd114f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f929bd1fcc8" loc="76:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f929bd1fcc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd1e0a0"/>
        <function-ref name="write" scoped="" ref="0x7f929bd1e228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f929bd0d020" loc="111:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f929bd0d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f929bd0d370"/>
        <function-ref name="writeDone" scoped="" ref="0x7f929bd0d4f8"/>
        <function-ref name="write" scoped="" ref="0x7f929bd0d680"/>
        <function-ref name="beginRead" scoped="" ref="0x7f929bd0d808"/>
        <function-ref name="readDone" scoped="" ref="0x7f929bd0d990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f929bd2fbd0" loc="45:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f929bd2fbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f929bd2e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f929bd28c50" loc="62:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f929bd28c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd27020"/>
        <function-ref name="write" scoped="" ref="0x7f929bd271a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f929bd24c10" loc="68:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f929bd24c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd23020"/>
        <function-ref name="write" scoped="" ref="0x7f929bd231a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f929bd1b470" loc="84:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f929bd1b470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd1b7c0"/>
        <function-ref name="write" scoped="" ref="0x7f929bd1b948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f929bd1f528" loc="75:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f929bd1f528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd1f878"/>
        <function-ref name="write" scoped="" ref="0x7f929bd1fa00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f929bd1bc10" loc="85:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f929bd1bc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd1a020"/>
        <function-ref name="write" scoped="" ref="0x7f929bd1a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f929bd23e10" loc="70:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f929bd23e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd221a8"/>
        <function-ref name="write" scoped="" ref="0x7f929bd22330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f929bd2d020" loc="48:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f929bd2d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f929bd2d370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f929bd225f8" loc="71:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f929bd225f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd22948"/>
        <function-ref name="write" scoped="" ref="0x7f929bd22ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f929bd30558" loc="41:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f929bd30558"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f929bd308a8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f929bd30a30"/>
        <function-ref name="request" scoped="" ref="0x7f929bd30bb8"/>
        <function-ref name="granted" scoped="" ref="0x7f929bd30d40"/>
        <function-ref name="isOwner" scoped="" ref="0x7f929bd2f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f929bd299b8" loc="57:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f929bd299b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f929bd29d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f929bd28638" loc="59:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f929bd28638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f929bd28988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f929bd137c0" loc="100:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f929bd137c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd13b10"/>
        <function-ref name="write" scoped="" ref="0x7f929bd13c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f929bd13020" loc="99:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f929bd13020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd13370"/>
        <function-ref name="write" scoped="" ref="0x7f929bd134f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f929bd2a020" loc="53:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f929bd2a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f929bd2a370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f929bd14800" loc="96:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f929bd14800"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd14b50"/>
        <function-ref name="write" scoped="" ref="0x7f929bd14cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f929bd0f7c0" loc="106:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f929bd0f7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd0fb10"/>
        <function-ref name="write" scoped="" ref="0x7f929bd0fc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f929bd1c470" loc="81:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f929bd1c470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd1c7c0"/>
        <function-ref name="write" scoped="" ref="0x7f929bd1c948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f929bd18c10" loc="89:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f929bd18c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd17020"/>
        <function-ref name="write" scoped="" ref="0x7f929bd171a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f929bd2d638" loc="49:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f929bd2d638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f929bd2d988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f929bd2b2e8" loc="51:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f929bd2b2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f929bd2b638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f929bd1e4f0" loc="77:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f929bd1e4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd1e840"/>
        <function-ref name="write" scoped="" ref="0x7f929bd1e9c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f929bd28020" loc="58:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f929bd28020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f929bd28370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f929bd1ec90" loc="78:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f929bd1ec90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd1d020"/>
        <function-ref name="write" scoped="" ref="0x7f929bd1d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f929bd15470" loc="94:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f929bd15470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bd15bc0"/>
        <function-ref name="write" scoped="" ref="0x7f929bd15d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f929bd0dc58" loc="112:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f929bd0dc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f929bd0c020"/>
        <function-ref name="writeDone" scoped="" ref="0x7f929bd0c1a8"/>
        <function-ref name="write" scoped="" ref="0x7f929bd0c330"/>
        <function-ref name="beginRead" scoped="" ref="0x7f929bd0c4b8"/>
        <function-ref name="readDone" scoped="" ref="0x7f929bd0c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x7f929bd03690" loc="54:/home/kai/wsnpr/tinyos-main/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f929bd03690"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f929bd039e0"/>
        <function-ref name="changed" scoped="" ref="0x7f929bd03b68"/>
        <function-ref name="amGroup" scoped="" ref="0x7f929bd03cf0"/>
        <function-ref name="setAddress" scoped="" ref="0x7f929bd03e78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7f929bd05cd0" loc="13:/home/kai/wsnpr/tinyos-main/tos/chips/ds2411/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f929bd05cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f929bcee0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7f929bcea190" loc="5:/home/kai/wsnpr/tinyos-main/tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f929bcea190"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f929bcea4e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadId48" ref="0x7f929bce7648" loc="8:/home/kai/wsnpr/tinyos-main/tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7f929bce7648"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bce7998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x7f929bcedac8" loc="8:/home/kai/wsnpr/tinyos-main/tos/chips/ds2411/Ds2411C.nc">
      <component-ref qname="Ds2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7f929bcedac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bcede18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OneWire" ref="0x7f929bcd2360" loc="14:/home/kai/wsnpr/tinyos-main/tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7f929bcd2360"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bcd26b0"/>
        <function-ref name="write" scoped="" ref="0x7f929bcd2838"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerControl" ref="0x7f929bcd2ba8" loc="15:/home/kai/wsnpr/tinyos-main/tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerControl" scoped="" ref="0x7f929bcd2ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f929bcd6020"/>
        <function-ref name="stop" scoped="" ref="0x7f929bcd61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x7f929bcd8a58" loc="11:/home/kai/wsnpr/tinyos-main/tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7f929bcd8a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bcd8da8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x7f929bcdbba0" loc="8:/home/kai/wsnpr/tinyos-main/tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7f929bcdbba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bcc3020"/>
        <function-ref name="write" scoped="" ref="0x7f929bcc31a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x7f929bcc3530" loc="11:/home/kai/wsnpr/tinyos-main/tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x7f929bcc3530"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929bcc3880"/>
        <function-ref name="isInput" scoped="" ref="0x7f929bcc3a08"/>
        <function-ref name="toggle" scoped="" ref="0x7f929bcc3b90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929bcc3d18"/>
        <function-ref name="get" scoped="" ref="0x7f929bcc2020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929bcc21a8"/>
        <function-ref name="set" scoped="" ref="0x7f929bcc2330"/>
        <function-ref name="clr" scoped="" ref="0x7f929bcc24b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7f929bcba748" loc="15:/home/kai/wsnpr/tinyos-main/tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7f929bcba748"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f929c8d3788"/>
            <typename><typedef-ref name="TMicro" ref="0x7f929c8d3ae0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f929bcbd578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x7f929bcbf108" loc="11:/home/kai/wsnpr/tinyos-main/tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7f929bcbf108"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bcbf458"/>
        <function-ref name="write" scoped="" ref="0x7f929bcbf5e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x7f929bcbf968" loc="14:/home/kai/wsnpr/tinyos-main/tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x7f929bcbf968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929bcbfcb8"/>
        <function-ref name="isInput" scoped="" ref="0x7f929bcbfe40"/>
        <function-ref name="toggle" scoped="" ref="0x7f929bcbe020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929bcbe1a8"/>
        <function-ref name="get" scoped="" ref="0x7f929bcbe330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929bcbe4b8"/>
        <function-ref name="set" scoped="" ref="0x7f929bcbe640"/>
        <function-ref name="clr" scoped="" ref="0x7f929bcbe7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7f929bcc1b78" loc="41:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7f929bcc1b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f929c8d3788"/>
            <typename><typedef-ref name="TMicro" ref="0x7f929c8d3ae0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f929bc9a8f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7f929bc98bc8" loc="54:/home/kai/wsnpr/tinyos-main/tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7f929bc98bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f929c8d3788"/>
            <typename><typedef-ref name="TMicro" ref="0x7f929c8d3ae0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f929bc8a948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f929bc89020" loc="55:/home/kai/wsnpr/tinyos-main/tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f929bc89020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f929c8d3788"/>
            <typename><typedef-ref name="TMicro" ref="0x7f929c8d3ae0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f929bc89d70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f929bc886b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f929bc88230"/>
        <function-ref name="overflow" scoped="" ref="0x7f929bc88b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430CounterMicro" ref="0x7f929bc833a8" loc="46:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <component-ref qname="Msp430CounterMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7f929bc833a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f929c8d3788"/>
            <typename><typedef-ref name="TMicro" ref="0x7f929c8d3ae0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f929bc82130"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f929bc82a40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f929bc825b8"/>
        <function-ref name="overflow" scoped="" ref="0x7f929bc81020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f929bc7d928" loc="45:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f929bc7d928"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f929bc7dc78"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f929bc7de00"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f929bc7c020"/>
        <function-ref name="get" scoped="" ref="0x7f929bc7c1a8"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f929bc7c330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f929bc7c4b8"/>
        <function-ref name="getMode" scoped="" ref="0x7f929bc7c640"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f929bc7c7c8"/>
        <function-ref name="overflow" scoped="" ref="0x7f929bc7c950"/>
        <function-ref name="setMode" scoped="" ref="0x7f929bc7cad8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f929bc7cc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f929bc80980" loc="44:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f929bc80980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f929c8d3788"/>
            <typename><typedef-ref name="TMicro" ref="0x7f929c8d3ae0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f929bc7e730"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f929bc7d088"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f929bc7ebb8"/>
        <function-ref name="overflow" scoped="" ref="0x7f929bc7d510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Gpio" ref="0x7f929bcc4378" loc="3:/home/kai/wsnpr/tinyos-main/tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <component-ref qname="HplDs2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Gpio" scoped="" ref="0x7f929bcc4378"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929bcc46c8"/>
        <function-ref name="isInput" scoped="" ref="0x7f929bcc4850"/>
        <function-ref name="toggle" scoped="" ref="0x7f929bcc49d8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929bcc4b60"/>
        <function-ref name="get" scoped="" ref="0x7f929bcc4ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929bcc4e70"/>
        <function-ref name="set" scoped="" ref="0x7f929bc78020"/>
        <function-ref name="clr" scoped="" ref="0x7f929bc781a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f929bc755f8" loc="44:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f929bc755f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929bc75948"/>
        <function-ref name="isInput" scoped="" ref="0x7f929bc75ad0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929bc75c58"/>
        <function-ref name="toggle" scoped="" ref="0x7f929bc75de0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929bc74020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929bc741a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929bc74330"/>
        <function-ref name="get" scoped="" ref="0x7f929bc744b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929bc74640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929bc747c8"/>
        <function-ref name="set" scoped="" ref="0x7f929bc74950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929bc74ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929bc74c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929bc73020"/>
        <function-ref name="clr" scoped="" ref="0x7f929bc731a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f929bc774e0" loc="43:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f929bc774e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929bc77830"/>
        <function-ref name="isInput" scoped="" ref="0x7f929bc779b8"/>
        <function-ref name="toggle" scoped="" ref="0x7f929bc77b40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929bc77cc8"/>
        <function-ref name="get" scoped="" ref="0x7f929bc77e50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929bc75020"/>
        <function-ref name="set" scoped="" ref="0x7f929bc751a8"/>
        <function-ref name="clr" scoped="" ref="0x7f929bc75330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f929bc6f020" loc="14:/home/kai/wsnpr/tinyos-main/tos/chips/ds2411/Ds2411PowerControlC.nc">
      <component-ref qname="Ds2411PowerControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f929bc6f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f929bc6f370"/>
        <function-ref name="stop" scoped="" ref="0x7f929bc6f4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f929bc60140" loc="46:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f929bc60140"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f929bc60490"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f929bc60618"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f929bc607a0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f929bc60928"/>
        <function-ref name="setCca" scoped="" ref="0x7f929bc60ab0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f929bc60c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7f929bc5fcc0" loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7f929bc5fcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f929bc5e0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x7f929bc61480" loc="45:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7f929bc61480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f929bc617d0"/>
        <function-ref name="cancel" scoped="" ref="0x7f929bc61958"/>
        <function-ref name="modify" scoped="" ref="0x7f929bc61ae0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f929bc61c68"/>
        <function-ref name="resend" scoped="" ref="0x7f929bc61df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f929bc65c58" loc="44:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f929bc65c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f929bc61020"/>
        <function-ref name="stop" scoped="" ref="0x7f929bc611a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7f929bc5e458" loc="48:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7f929bc5e458"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f929bc5e7a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f929bc517c0" loc="51:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f929bc517c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f929bc51b10"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f929bc51c98"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f929bc51e20"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f929bc50020"/>
        <function-ref name="setCca" scoped="" ref="0x7f929bc501a8"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f929bc50330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f929bc49460" loc="58:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f929bc49460"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f929c8d3020"/>
            <typename><typedef-ref name="T32khz" ref="0x7f929c8d3378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f929d8b1020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f929bc48900"/>
        <function-ref name="clear" scoped="" ref="0x7f929bc47020"/>
        <function-ref name="isValid" scoped="" ref="0x7f929bc48220"/>
        <function-ref name="set" scoped="" ref="0x7f929bc47700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7f929bc34de0" loc="78:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f929bc34de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bc33170"/>
        <function-ref name="write" scoped="" ref="0x7f929bc332f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7f929bc33650" loc="79:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f929bc33650"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bc339a0"/>
        <function-ref name="write" scoped="" ref="0x7f929bc33b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7f929bc50738" loc="52:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7f929bc50738"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f929bc50a88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x7f929bc36478" loc="72:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f929bc36478"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f929bc367c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x7f929bc3dd60" loc="60:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7f929bc3dd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f929bc440d8"/>
        <function-ref name="disable" scoped="" ref="0x7f929bc44260"/>
        <function-ref name="captured" scoped="" ref="0x7f929bc443e8"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f929bc44570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x7f929bc4f820" loc="55:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BackoffTimer" scoped="" ref="0x7f929bc4f820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f929c8d3020"/>
            <typename><typedef-ref name="T32khz" ref="0x7f929c8d3378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f929d8b1020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f929bc4c020"/>
        <function-ref name="fired" scoped="" ref="0x7f929bc4d020"/>
        <function-ref name="startAt" scoped="" ref="0x7f929bc4d930"/>
        <function-ref name="isRunning" scoped="" ref="0x7f929bc4d4a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f929bc4c4a8"/>
        <function-ref name="start" scoped="" ref="0x7f929bc4e598"/>
        <function-ref name="stop" scoped="" ref="0x7f929bc4ea70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f929bc4c940" loc="56:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f929bc4c940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f929bc4cc90"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f929bc4ce18"/>
        <function-ref name="getRssi" scoped="" ref="0x7f929bc4a020"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f929bc4a1a8"/>
        <function-ref name="getPower" scoped="" ref="0x7f929bc4a330"/>
        <function-ref name="getLqi" scoped="" ref="0x7f929bc4a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x7f929bc38538" loc="68:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f929bc38538"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bc38888"/>
        <function-ref name="write" scoped="" ref="0x7f929bc38a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7f929bc38da8" loc="69:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f929bc38da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bc37170"/>
        <function-ref name="write" scoped="" ref="0x7f929bc372f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x7f929bc2c750" loc="83:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f929bc2c750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f929bc2caa0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f929bc2cc28"/>
        <function-ref name="sfd" scoped="" ref="0x7f929bc2cdb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f929bc559f8" loc="50:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f929bc559f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f929bc55d48"/>
        <function-ref name="cancel" scoped="" ref="0x7f929bc51020"/>
        <function-ref name="modify" scoped="" ref="0x7f929bc511a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f929bc51330"/>
        <function-ref name="resend" scoped="" ref="0x7f929bc514b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x7f929bc3acb0" loc="66:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f929bc3acb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f929bc390a0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f929bc39228"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f929bc393b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x7f929bc36b68" loc="73:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f929bc36b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f929bc35020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f929bc42c98" loc="62:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f929bc42c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929bc3c020"/>
        <function-ref name="isInput" scoped="" ref="0x7f929bc3c1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f929bc3c330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929bc3c4b8"/>
        <function-ref name="get" scoped="" ref="0x7f929bc3c640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929bc3c7c8"/>
        <function-ref name="set" scoped="" ref="0x7f929bc3c950"/>
        <function-ref name="clr" scoped="" ref="0x7f929bc3cad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f929bc56b28" loc="48:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f929bc56b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f929bc56e78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f929bc4a7e8" loc="57:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f929bc4a7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f929bc4ab38"/>
        <function-ref name="getHeader" scoped="" ref="0x7f929bc4acc0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f929bc4ae48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x7f929bc3d1d8" loc="59:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f929bc3d1d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f929bc3d528"/>
        <function-ref name="isSet" scoped="" ref="0x7f929bc3d6b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f929bc3d838"/>
        <function-ref name="set" scoped="" ref="0x7f929bc3d9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7f929bc353d0" loc="74:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f929bc353d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bc35920"/>
        <function-ref name="write" scoped="" ref="0x7f929bc35aa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f929bc3a020" loc="65:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f929bc3a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f929bc3a370"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f929bc3a4f8"/>
        <function-ref name="request" scoped="" ref="0x7f929bc3a680"/>
        <function-ref name="granted" scoped="" ref="0x7f929bc3a808"/>
        <function-ref name="isOwner" scoped="" ref="0x7f929bc3a990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x7f929bc448b8" loc="61:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7f929bc448b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929bc44d08"/>
        <function-ref name="isInput" scoped="" ref="0x7f929bc42020"/>
        <function-ref name="toggle" scoped="" ref="0x7f929bc421a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929bc42330"/>
        <function-ref name="get" scoped="" ref="0x7f929bc424b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929bc42640"/>
        <function-ref name="set" scoped="" ref="0x7f929bc427c8"/>
        <function-ref name="clr" scoped="" ref="0x7f929bc42950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7f929bc33e80" loc="80:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f929bc33e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bc321f8"/>
        <function-ref name="write" scoped="" ref="0x7f929bc32380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x7f929bc326f0" loc="81:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f929bc326f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bc32a40"/>
        <function-ref name="write" scoped="" ref="0x7f929bc32bc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7f929bc37670" loc="70:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f929bc37670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f929bc379c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x7f929bc3ce20" loc="63:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7f929bc3ce20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929bc3b1a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f929bc3b330"/>
        <function-ref name="toggle" scoped="" ref="0x7f929bc3b4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929bc3b640"/>
        <function-ref name="get" scoped="" ref="0x7f929bc3b7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929bc3b950"/>
        <function-ref name="set" scoped="" ref="0x7f929bc3bad8"/>
        <function-ref name="clr" scoped="" ref="0x7f929bc3bc60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f929bc300c0" loc="84:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f929bc300c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f929bc30410"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f929bc30598"/>
        <function-ref name="led1On" scoped="" ref="0x7f929bc30720"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f929bc308a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f929bc30a30"/>
        <function-ref name="get" scoped="" ref="0x7f929bc30bb8"/>
        <function-ref name="led1Off" scoped="" ref="0x7f929bc30d40"/>
        <function-ref name="led2Off" scoped="" ref="0x7f929bc2f4b8"/>
        <function-ref name="set" scoped="" ref="0x7f929bc2f020"/>
        <function-ref name="led0On" scoped="" ref="0x7f929bc2f1a8"/>
        <function-ref name="led2On" scoped="" ref="0x7f929bc2f330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7f929bc34558" loc="77:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f929bc34558"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bc348a8"/>
        <function-ref name="write" scoped="" ref="0x7f929bc34a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f929bc55198" loc="49:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f929bc55198"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f929bc554e8"/>
        <function-ref name="stop" scoped="" ref="0x7f929bc55670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x7f929bc39720" loc="67:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f929bc39720"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f929bc39a70"/>
        <function-ref name="writeDone" scoped="" ref="0x7f929bc39bf8"/>
        <function-ref name="write" scoped="" ref="0x7f929bc39d80"/>
        <function-ref name="beginRead" scoped="" ref="0x7f929bc38020"/>
        <function-ref name="readDone" scoped="" ref="0x7f929bc381a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x7f929bc37d40" loc="71:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f929bc37d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f929bc360d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x7f929bc35e30" loc="76:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f929bc35e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f929bc341a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7f929bc50e80" loc="53:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7f929bc50e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f929bc4f1f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f929bb97470" loc="69:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f929bb97470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bb979c0"/>
        <function-ref name="write" scoped="" ref="0x7f929bb97b48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f929bba29b8" loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f929bba29b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f929bba2d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f929bb9b470" loc="63:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f929bb9b470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bb9b7c0"/>
        <function-ref name="write" scoped="" ref="0x7f929bb9b948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f929bb96d98" loc="72:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f929bb96d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bb95170"/>
        <function-ref name="write" scoped="" ref="0x7f929bb952f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f929bb8e470" loc="86:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f929bb8e470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bb8e7c0"/>
        <function-ref name="write" scoped="" ref="0x7f929bb8e948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f929bb955c0" loc="73:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f929bb955c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bb95910"/>
        <function-ref name="write" scoped="" ref="0x7f929bb95a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f929bb827c0" loc="108:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f929bb827c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bb82b10"/>
        <function-ref name="write" scoped="" ref="0x7f929bb82c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f929bb847c0" loc="104:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f929bb847c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bb84b10"/>
        <function-ref name="write" scoped="" ref="0x7f929bb84c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f929bba1c50" loc="50:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f929bba1c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f929bb9f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f929bb8ac10" loc="93:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f929bb8ac10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bb89020"/>
        <function-ref name="write" scoped="" ref="0x7f929bb891a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f929bb857c0" loc="102:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f929bb857c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bb85b10"/>
        <function-ref name="write" scoped="" ref="0x7f929bb85c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f929bb99470" loc="65:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f929bb99470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bb997c0"/>
        <function-ref name="write" scoped="" ref="0x7f929bb99948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f929bb98470" loc="67:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f929bb98470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bb987c0"/>
        <function-ref name="write" scoped="" ref="0x7f929bb98948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f929bb90c10" loc="83:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f929bb90c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bb8f020"/>
        <function-ref name="write" scoped="" ref="0x7f929bb8f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f929bb91470" loc="79:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f929bb91470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bb917c0"/>
        <function-ref name="write" scoped="" ref="0x7f929bb91948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f929bb95d60" loc="74:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f929bb95d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bb930d8"/>
        <function-ref name="write" scoped="" ref="0x7f929bb93260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f929bba3430" loc="42:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f929bba3430"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f929bba3780"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f929bba3908"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f929bba3a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f929bb9e638" loc="54:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f929bb9e638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f929bb9e988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f929bb9ec50" loc="55:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f929bb9ec50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f929bb9d0d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f929bb88060" loc="95:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f929bb88060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bb883b0"/>
        <function-ref name="write" scoped="" ref="0x7f929bb88538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f929bb9d3a0" loc="56:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f929bb9d3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f929bb9d6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f929bb84020" loc="103:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f929bb84020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bb84370"/>
        <function-ref name="write" scoped="" ref="0x7f929bb844f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f929bb9f900" loc="52:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f929bb9f900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f929bb9fc50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f929bb8a470" loc="92:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f929bb8a470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bb8a7c0"/>
        <function-ref name="write" scoped="" ref="0x7f929bb8a948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f929bb99c10" loc="66:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f929bb99c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bb98020"/>
        <function-ref name="write" scoped="" ref="0x7f929bb981a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f929bb9bc10" loc="64:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f929bb9bc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bb99020"/>
        <function-ref name="write" scoped="" ref="0x7f929bb991a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f929bba23a0" loc="46:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f929bba23a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f929bba26f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f929bb8b470" loc="90:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f929bb8b470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bb8b7c0"/>
        <function-ref name="write" scoped="" ref="0x7f929bb8b948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f929bb8ec10" loc="87:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f929bb8ec10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bb8c020"/>
        <function-ref name="write" scoped="" ref="0x7f929bb8c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f929bb8bc10" loc="91:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f929bb8bc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bb8a020"/>
        <function-ref name="write" scoped="" ref="0x7f929bb8a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f929bb82020" loc="107:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f929bb82020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bb82370"/>
        <function-ref name="write" scoped="" ref="0x7f929bb824f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f929bb83020" loc="105:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f929bb83020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bb83370"/>
        <function-ref name="write" scoped="" ref="0x7f929bb834f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f929bb91c10" loc="80:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f929bb91c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bb90020"/>
        <function-ref name="write" scoped="" ref="0x7f929bb901a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f929bb8c470" loc="88:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f929bb8c470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bb8c7c0"/>
        <function-ref name="write" scoped="" ref="0x7f929bb8c948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f929bb85020" loc="101:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f929bb85020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bb85370"/>
        <function-ref name="write" scoped="" ref="0x7f929bb854f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f929bb93cc8" loc="76:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f929bb93cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bb920a0"/>
        <function-ref name="write" scoped="" ref="0x7f929bb92228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f929bb81020" loc="111:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f929bb81020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f929bb81370"/>
        <function-ref name="writeDone" scoped="" ref="0x7f929bb814f8"/>
        <function-ref name="write" scoped="" ref="0x7f929bb81680"/>
        <function-ref name="beginRead" scoped="" ref="0x7f929bb81808"/>
        <function-ref name="readDone" scoped="" ref="0x7f929bb81990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f929bba3d58" loc="45:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f929bba3d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f929bba20d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f929bb9cc50" loc="62:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f929bb9cc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bb9b020"/>
        <function-ref name="write" scoped="" ref="0x7f929bb9b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f929bb98c10" loc="68:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f929bb98c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bb97020"/>
        <function-ref name="write" scoped="" ref="0x7f929bb971a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f929bb8f470" loc="84:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f929bb8f470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bb8f7c0"/>
        <function-ref name="write" scoped="" ref="0x7f929bb8f948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f929bb93528" loc="75:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f929bb93528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bb93878"/>
        <function-ref name="write" scoped="" ref="0x7f929bb93a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f929bb8fc10" loc="85:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f929bb8fc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bb8e020"/>
        <function-ref name="write" scoped="" ref="0x7f929bb8e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f929bb97e10" loc="70:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f929bb97e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bb961a8"/>
        <function-ref name="write" scoped="" ref="0x7f929bb96330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f929bba1020" loc="48:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f929bba1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f929bba1370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f929bb965f8" loc="71:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f929bb965f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bb96948"/>
        <function-ref name="write" scoped="" ref="0x7f929bb96ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f929bba47d0" loc="41:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f929bba47d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f929bba4b20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f929bba4ca8"/>
        <function-ref name="request" scoped="" ref="0x7f929bba4e30"/>
        <function-ref name="granted" scoped="" ref="0x7f929bba3020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f929bba31a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f929bb9d9b8" loc="57:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f929bb9d9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f929bb9dd08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f929bb9c638" loc="59:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f929bb9c638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f929bb9c988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f929bb877c0" loc="100:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f929bb877c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bb87b10"/>
        <function-ref name="write" scoped="" ref="0x7f929bb87c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f929bb87020" loc="99:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f929bb87020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bb87370"/>
        <function-ref name="write" scoped="" ref="0x7f929bb874f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f929bb9e020" loc="53:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f929bb9e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f929bb9e370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f929bb88800" loc="96:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f929bb88800"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bb88b50"/>
        <function-ref name="write" scoped="" ref="0x7f929bb88cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f929bb837c0" loc="106:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f929bb837c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bb83b10"/>
        <function-ref name="write" scoped="" ref="0x7f929bb83c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f929bb90470" loc="81:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f929bb90470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bb907c0"/>
        <function-ref name="write" scoped="" ref="0x7f929bb90948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f929bb8cc10" loc="89:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f929bb8cc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bb8b020"/>
        <function-ref name="write" scoped="" ref="0x7f929bb8b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f929bba1638" loc="49:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f929bba1638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f929bba1988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f929bb9f2e8" loc="51:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f929bb9f2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f929bb9f638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f929bb924f0" loc="77:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f929bb924f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bb92840"/>
        <function-ref name="write" scoped="" ref="0x7f929bb929c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f929bb9c020" loc="58:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f929bb9c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f929bb9c370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f929bb92c90" loc="78:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f929bb92c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bb91020"/>
        <function-ref name="write" scoped="" ref="0x7f929bb911a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f929bb89470" loc="94:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f929bb89470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bb89bc0"/>
        <function-ref name="write" scoped="" ref="0x7f929bb89d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f929bb81c58" loc="112:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f929bb81c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f929bb80020"/>
        <function-ref name="writeDone" scoped="" ref="0x7f929bb801a8"/>
        <function-ref name="write" scoped="" ref="0x7f929bb80330"/>
        <function-ref name="beginRead" scoped="" ref="0x7f929bb804b8"/>
        <function-ref name="readDone" scoped="" ref="0x7f929bb80640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7f929bb73808" loc="42:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f929bb73808"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f929bb73b58"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f929bb73ce0"/>
        <function-ref name="sfd" scoped="" ref="0x7f929bb73e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f929bb71168" loc="43:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f929bb71168"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f929bb714b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7f929bb718c0" loc="44:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7f929bb718c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f929bb71c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f929bb73020" loc="41:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f929bb73020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f929bb73370"/>
        <function-ref name="stop" scoped="" ref="0x7f929bb734f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x7f929bb6a688" loc="54:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7f929bb6a688"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929bb6a9d8"/>
        <function-ref name="isInput" scoped="" ref="0x7f929bb6ab60"/>
        <function-ref name="toggle" scoped="" ref="0x7f929bb6ace8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929bb6ae70"/>
        <function-ref name="get" scoped="" ref="0x7f929bb69020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929bb691a8"/>
        <function-ref name="set" scoped="" ref="0x7f929bb69330"/>
        <function-ref name="clr" scoped="" ref="0x7f929bb694b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7f929bb63af0" loc="64:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f929bb63af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f929bb63e40"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f929bb62020"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f929bb621a8"/>
        <function-ref name="syncDone" scoped="" ref="0x7f929bb62330"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f929bb624b8"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f929bb62640"/>
        <function-ref name="setChannel" scoped="" ref="0x7f929bb627c8"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f929bb62950"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f929bb62ad8"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f929bb62c60"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f929bb62de8"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f929bb61020"/>
        <function-ref name="sync" scoped="" ref="0x7f929bb611a8"/>
        <function-ref name="getChannel" scoped="" ref="0x7f929bb61430"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f929bb615b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x7f929bb4de38" loc="148:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveDone_task" scoped="" ref="0x7f929bb4de38"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f929bb4b1c0"/>
        <function-ref name="runTask" scoped="" ref="0x7f929bb4b348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f929bb61b80" loc="65:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f929bb61b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f929c8d3020"/>
            <typename><typedef-ref name="T32khz" ref="0x7f929c8d3378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f929d8b1020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f929bb5e020"/>
        <function-ref name="clear" scoped="" ref="0x7f929bb5e700"/>
        <function-ref name="isValid" scoped="" ref="0x7f929bb608f8"/>
        <function-ref name="set" scoped="" ref="0x7f929bb5ede0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x7f929bb69818" loc="55:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7f929bb69818"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929bb69b68"/>
        <function-ref name="isInput" scoped="" ref="0x7f929bb69cf0"/>
        <function-ref name="toggle" scoped="" ref="0x7f929bb69e78"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929bb68030"/>
        <function-ref name="get" scoped="" ref="0x7f929bb681b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929bb68340"/>
        <function-ref name="set" scoped="" ref="0x7f929bb684c8"/>
        <function-ref name="clr" scoped="" ref="0x7f929bb68650"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7f929bb5c6a8" loc="69:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f929bb5c6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bb5c9f8"/>
        <function-ref name="write" scoped="" ref="0x7f929bb5cb80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7f929bb5a020" loc="70:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f929bb5a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bb5a370"/>
        <function-ref name="write" scoped="" ref="0x7f929bb5a4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x7f929bb59108" loc="72:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f929bb59108"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bb59458"/>
        <function-ref name="write" scoped="" ref="0x7f929bb595e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f929bb64328" loc="62:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f929bb64328"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f929bb64678"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f929bb64800"/>
        <function-ref name="getRssi" scoped="" ref="0x7f929bb64988"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f929bb64b10"/>
        <function-ref name="getPower" scoped="" ref="0x7f929bb64c98"/>
        <function-ref name="getLqi" scoped="" ref="0x7f929bb64e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7f929bb6dc48" loc="49:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f929bb6dc48"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f929bb6c020"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f929bb6c1a8"/>
        <function-ref name="sfd" scoped="" ref="0x7f929bb6c330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x7f929bb65398" loc="60:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f929bb65398"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f929bb656e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f929bb6b420" loc="53:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f929bb6b420"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929bb6b770"/>
        <function-ref name="isInput" scoped="" ref="0x7f929bb6b8f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f929bb6ba80"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929bb6bc08"/>
        <function-ref name="get" scoped="" ref="0x7f929bb6bd90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929bb6a020"/>
        <function-ref name="set" scoped="" ref="0x7f929bb6a1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f929bb6a330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x7f929bb59970" loc="73:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f929bb59970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bb59cc0"/>
        <function-ref name="write" scoped="" ref="0x7f929bb59e48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f929bb70df8" loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f929bb70df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f929bb6d170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f929bb63188" loc="63:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f929bb63188"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f929bb634d8"/>
        <function-ref name="getHeader" scoped="" ref="0x7f929bb63660"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f929bb637e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f929bb6c600" loc="50:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f929bb6c600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f929bb6c950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f929bb676c0" loc="58:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f929bb676c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f929bb67a10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f929bb67b98"/>
        <function-ref name="request" scoped="" ref="0x7f929bb67d20"/>
        <function-ref name="granted" scoped="" ref="0x7f929bb66020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f929bb661a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7f929bb5a850" loc="71:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f929bb5a850"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bb5aba0"/>
        <function-ref name="write" scoped="" ref="0x7f929bb5ad28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x7f929bb66518" loc="59:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f929bb66518"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f929bb66868"/>
        <function-ref name="writeDone" scoped="" ref="0x7f929bb669f0"/>
        <function-ref name="write" scoped="" ref="0x7f929bb66b78"/>
        <function-ref name="beginRead" scoped="" ref="0x7f929bb66d00"/>
        <function-ref name="readDone" scoped="" ref="0x7f929bb65020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7f929bb58210" loc="74:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f929bb58210"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f929bb58760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7f929bb6cd58" loc="51:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7f929bb6cd58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f929bb6b0d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f929bb58a18" loc="76:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f929bb58a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f929bb58d68"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f929bb57020"/>
        <function-ref name="led1On" scoped="" ref="0x7f929bb571a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f929bb57330"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f929bb574b8"/>
        <function-ref name="get" scoped="" ref="0x7f929bb57640"/>
        <function-ref name="led1Off" scoped="" ref="0x7f929bb577c8"/>
        <function-ref name="led2Off" scoped="" ref="0x7f929bb57de8"/>
        <function-ref name="set" scoped="" ref="0x7f929bb57950"/>
        <function-ref name="led0On" scoped="" ref="0x7f929bb57ad8"/>
        <function-ref name="led2On" scoped="" ref="0x7f929bb57c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7f929bb5ddc8" loc="68:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f929bb5ddc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929bb5c170"/>
        <function-ref name="write" scoped="" ref="0x7f929bb5c2f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x7f929bb5d6c8" loc="67:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f929bb5d6c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f929bb5da18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x7f929bb68a30" loc="56:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f929bb68a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f929bb68d80"/>
        <function-ref name="disable" scoped="" ref="0x7f929bb67020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f929bb671a8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f929bb67330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x7f929bb65a88" loc="61:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f929bb65a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f929bb64020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f929bb6d460" loc="48:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f929bb6d460"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f929bb6d7b0"/>
        <function-ref name="stop" scoped="" ref="0x7f929bb6d938"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f929baef6b0" loc="44:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f929baef6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f929baefa00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f929baf34b0" loc="41:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f929baf34b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f929baf3800"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f929baf3988"/>
        <function-ref name="getRssi" scoped="" ref="0x7f929baf3b10"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f929baf3c98"/>
        <function-ref name="getPower" scoped="" ref="0x7f929baf3e20"/>
        <function-ref name="getLqi" scoped="" ref="0x7f929baf0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f929baee130" loc="46:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f929baee130"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f929c8d3020"/>
            <typename><typedef-ref name="T32khz" ref="0x7f929c8d3378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f929d8b1020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f929baed588"/>
        <function-ref name="clear" scoped="" ref="0x7f929baedc68"/>
        <function-ref name="isValid" scoped="" ref="0x7f929baeee80"/>
        <function-ref name="set" scoped="" ref="0x7f929baeb380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7f929baf0d08" loc="43:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f929baf0d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f929baef0a0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f929baef228"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f929baef3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f929bae7ac8" loc="48:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f929bae7ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f929bae7e18"/>
        <function-ref name="isSet" scoped="" ref="0x7f929bae6020"/>
        <function-ref name="cancel" scoped="" ref="0x7f929bae61a8"/>
        <function-ref name="set" scoped="" ref="0x7f929bae6330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f929baea020" loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f929baea020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f929c8d4828"/>
            <typename><typedef-ref name="TMilli" ref="0x7f929c8d4b80"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f929d8b1020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f929bae8478"/>
        <function-ref name="clear" scoped="" ref="0x7f929bae8b58"/>
        <function-ref name="isValid" scoped="" ref="0x7f929baead70"/>
        <function-ref name="set" scoped="" ref="0x7f929bae7278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f929baf03b8" loc="42:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f929baf03b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f929baf0708"/>
        <function-ref name="noAck" scoped="" ref="0x7f929baf0890"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f929baf0a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f929bae1630" loc="49:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f929bae1630"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f929bae1980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f929bae32e8" loc="46:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f929bae32e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f929bae3638"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f929bae37c0"/>
        <function-ref name="getRssi" scoped="" ref="0x7f929bae3948"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f929bae3ad0"/>
        <function-ref name="getPower" scoped="" ref="0x7f929bae3c58"/>
        <function-ref name="getLqi" scoped="" ref="0x7f929bae3de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f929bad8618" loc="56:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f929bad8618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f929bad8968"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f929bad8af0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f929bad8c78"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f929bad8e00"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f929bad6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f929badf060" loc="51:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f929badf060"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f929c8d3020"/>
            <typename><typedef-ref name="T32khz" ref="0x7f929c8d3378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f929d8b1020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f929bade4b8"/>
        <function-ref name="clear" scoped="" ref="0x7f929badeb98"/>
        <function-ref name="isValid" scoped="" ref="0x7f929badfdb0"/>
        <function-ref name="set" scoped="" ref="0x7f929badd2b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7f929bae2b60" loc="48:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f929bae2b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f929bae1020"/>
        <function-ref name="getHeader" scoped="" ref="0x7f929bae11a8"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f929bae1330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f929bad9ac8" loc="53:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f929bad9ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f929bad9e18"/>
        <function-ref name="isSet" scoped="" ref="0x7f929bad8020"/>
        <function-ref name="cancel" scoped="" ref="0x7f929bad81a8"/>
        <function-ref name="set" scoped="" ref="0x7f929bad8330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x7f929bad38b0" loc="57:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x7f929bad38b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f929c8d3020"/>
            <typename><typedef-ref name="T32khz" ref="0x7f929c8d3378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f929bad5490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x7f929bad5b20" loc="58:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f929bad5b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f929c8d4828"/>
            <typename><typedef-ref name="TMilli" ref="0x7f929c8d4b80"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f929bad4728"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f929badb020" loc="52:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f929badb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f929c8d4828"/>
            <typename><typedef-ref name="TMilli" ref="0x7f929c8d4b80"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f929d8b1020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f929bada478"/>
        <function-ref name="clear" scoped="" ref="0x7f929badab58"/>
        <function-ref name="isValid" scoped="" ref="0x7f929badbd70"/>
        <function-ref name="set" scoped="" ref="0x7f929bad9278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f929bae2210" loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f929bae2210"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f929bae2560"/>
        <function-ref name="noAck" scoped="" ref="0x7f929bae26e8"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f929bae2870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f929ba86528" loc="48:/home/kai/wsnpr/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f929ba86528"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f929c8d3020"/>
            <typename><typedef-ref name="T32khz" ref="0x7f929c8d3378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f929ba850f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f929ba85720" loc="49:/home/kai/wsnpr/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f929ba85720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f929c8d3020"/>
            <typename><typedef-ref name="T32khz" ref="0x7f929c8d3378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f929d8b1020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f929ba7b578"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f929ba7a020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f929ba7ba00"/>
        <function-ref name="overflow" scoped="" ref="0x7f929ba7a4a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f929ba76d78" loc="46:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7f929ba76d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f929c8d4828"/>
            <typename><typedef-ref name="TMilli" ref="0x7f929c8d4b80"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f929ba71088"/>
        <function-ref name="fired" scoped="" ref="0x7f929ba736c8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f929ba72470"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f929ba72020"/>
        <function-ref name="getdt" scoped="" ref="0x7f929ba71928"/>
        <function-ref name="gett0" scoped="" ref="0x7f929ba714d8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f929ba73b18"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f929ba758f0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f929ba72a40"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f929ba75d90"/>
        <function-ref name="stop" scoped="" ref="0x7f929ba73278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f929ba6f020" loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f929ba6f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f929c8d4828"/>
            <typename><typedef-ref name="TMilli" ref="0x7f929c8d4b80"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f929ba6fba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f929ba76080" loc="45:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f929ba76080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f929ba763d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f929ba6cd48" loc="44:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f929ba6cd48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f929c8d4828"/>
            <typename><typedef-ref name="TMilli" ref="0x7f929c8d4b80"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f929d8b1020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f929ba3f410"/>
        <function-ref name="fired" scoped="" ref="0x7f929ba414a8"/>
        <function-ref name="startAt" scoped="" ref="0x7f929ba41db8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f929ba41930"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f929ba3f898"/>
        <function-ref name="start" scoped="" ref="0x7f929ba42ac0"/>
        <function-ref name="stop" scoped="" ref="0x7f929ba41020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f929ba6c560" loc="43:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f929ba6c560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f929ba6c8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f929a914d08" loc="44:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f929a914d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f929c8d3020"/>
            <typename><typedef-ref name="T32khz" ref="0x7f929c8d3378"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f929a911410"/>
        <function-ref name="fired" scoped="" ref="0x7f929a9124a8"/>
        <function-ref name="startAt" scoped="" ref="0x7f929a912db8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f929a912930"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f929a911898"/>
        <function-ref name="start" scoped="" ref="0x7f929a913ac0"/>
        <function-ref name="stop" scoped="" ref="0x7f929a912020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f929a914520" loc="43:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f929a914520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f929a914870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f929a8fc430" loc="41:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f929a8fc430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f929a8fc780"/>
        <function-ref name="setEvent" scoped="" ref="0x7f929a8fc908"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f929a8fca90"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f929a8fcc18"/>
        <function-ref name="fired" scoped="" ref="0x7f929a8fcda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f929a8ffa08" loc="39:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f929a8ffa08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f929a8ffd58"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f929a8fe020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f929a8fe1a8"/>
        <function-ref name="get" scoped="" ref="0x7f929a8fe330"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f929a8fe4b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f929a8fe640"/>
        <function-ref name="getMode" scoped="" ref="0x7f929a8fe7c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f929a8fe950"/>
        <function-ref name="overflow" scoped="" ref="0x7f929a8fead8"/>
        <function-ref name="setMode" scoped="" ref="0x7f929a8fec60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f929a8fede8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f929a8fd0c0" loc="40:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f929a8fd0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f929a8fd410"/>
        <function-ref name="getControl" scoped="" ref="0x7f929a8fd598"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f929a8fd720"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f929a8fd8a8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f929a8fda30"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f929a8fdbb8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f929a8fdd40"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f929a8fc020"/>
        <function-ref name="setControl" scoped="" ref="0x7f929a8fc1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7f929a8d0a50" loc="49:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f929a8d0a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f929a8d0da0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f929a8cf020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f929a8cf1a8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f929a8cf330"/>
        <function-ref name="fired" scoped="" ref="0x7f929a8cf4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f929a8d2200" loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f929a8d2200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f929a8d2550"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f929a8d26d8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f929a8d2860"/>
        <function-ref name="get" scoped="" ref="0x7f929a8d29e8"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f929a8d2b70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f929a8d2cf8"/>
        <function-ref name="getMode" scoped="" ref="0x7f929a8d2e80"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f929a8d1030"/>
        <function-ref name="overflow" scoped="" ref="0x7f929a8d11b8"/>
        <function-ref name="setMode" scoped="" ref="0x7f929a8d1340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f929a8d14c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f929a8d6270" loc="46:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f929a8d6270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f929c8d3020"/>
            <typename><typedef-ref name="T32khz" ref="0x7f929c8d3378"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f929a8d3918"/>
        <function-ref name="fired" scoped="" ref="0x7f929a8d4980"/>
        <function-ref name="startAt" scoped="" ref="0x7f929a8d3310"/>
        <function-ref name="isRunning" scoped="" ref="0x7f929a8d4e08"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f929a8d3da0"/>
        <function-ref name="start" scoped="" ref="0x7f929a8d4020"/>
        <function-ref name="stop" scoped="" ref="0x7f929a8d44f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f929a8d7a18" loc="45:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f929a8d7a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f929a8d7d68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f929a8d1750" loc="48:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f929a8d1750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f929a8d1aa0"/>
        <function-ref name="getControl" scoped="" ref="0x7f929a8d1c28"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f929a8d1db0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f929a8d0020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f929a8d01a8"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f929a8d0330"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f929a8d04b8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f929a8d0640"/>
        <function-ref name="setControl" scoped="" ref="0x7f929a8d07c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f929ba61bd0" loc="43:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f929ba61bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f929c8d4828"/>
            <typename><typedef-ref name="TMilli" ref="0x7f929c8d4b80"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f929d8b1020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f929ba5d948"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f929ba5c2b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f929ba5ddd0"/>
        <function-ref name="overflow" scoped="" ref="0x7f929ba5c738"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f929ba55688" loc="63:/home/kai/wsnpr/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7f929ba55688"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f929c8d3020"/>
            <typename><typedef-ref name="T32khz" ref="0x7f929c8d3378"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f929ba54400"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f929ba54d10"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f929ba54888"/>
        <function-ref name="overflow" scoped="" ref="0x7f929ba531f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f929ba583f8" loc="62:/home/kai/wsnpr/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f929ba583f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f929c8d4828"/>
            <typename><typedef-ref name="TMilli" ref="0x7f929c8d4b80"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f929d8b1020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f929ba57190"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f929ba57aa0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f929ba57618"/>
        <function-ref name="overflow" scoped="" ref="0x7f929ba55020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f929a90ec78" loc="61:/home/kai/wsnpr/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f929a90ec78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f929c8d4828"/>
            <typename><typedef-ref name="TMilli" ref="0x7f929c8d4b80"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f929d8b1020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f929a90b410"/>
        <function-ref name="fired" scoped="" ref="0x7f929a90c4a8"/>
        <function-ref name="startAt" scoped="" ref="0x7f929a90cdb8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f929a90c930"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f929a90b898"/>
        <function-ref name="start" scoped="" ref="0x7f929a90d9f0"/>
        <function-ref name="stop" scoped="" ref="0x7f929a90c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f929a9071e8" loc="73:/home/kai/wsnpr/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7f929a9071e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f929c8d3020"/>
            <typename><typedef-ref name="T32khz" ref="0x7f929c8d3378"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f929a905918"/>
        <function-ref name="fired" scoped="" ref="0x7f929a906980"/>
        <function-ref name="startAt" scoped="" ref="0x7f929a905310"/>
        <function-ref name="isRunning" scoped="" ref="0x7f929a906e08"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f929a905da0"/>
        <function-ref name="start" scoped="" ref="0x7f929a906020"/>
        <function-ref name="stop" scoped="" ref="0x7f929a9064f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f929a90a020" loc="68:/home/kai/wsnpr/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f929a90a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f929c8d4828"/>
            <typename><typedef-ref name="TMilli" ref="0x7f929c8d4b80"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f929d8b1020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f929a90ad70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f929a9096b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f929a909230"/>
        <function-ref name="overflow" scoped="" ref="0x7f929a909b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7f929ba0f020" loc="74:/home/kai/wsnpr/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x7f929ba0f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f929ba0f370"/>
        <function-ref name="runTask" scoped="" ref="0x7f929ba0f4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f929ba12020" loc="49:/home/kai/wsnpr/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f929ba12020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f929c8d4828"/>
            <typename><typedef-ref name="TMilli" ref="0x7f929c8d4b80"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f929d8b1020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f929ba10690"/>
        <function-ref name="fired" scoped="" ref="0x7f929ba116f8"/>
        <function-ref name="startAt" scoped="" ref="0x7f929ba10088"/>
        <function-ref name="isRunning" scoped="" ref="0x7f929ba11b80"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f929ba10b18"/>
        <function-ref name="start" scoped="" ref="0x7f929ba12d70"/>
        <function-ref name="stop" scoped="" ref="0x7f929ba11270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f929ba3cd88" loc="48:/home/kai/wsnpr/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f929ba3cd88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f929c8d4828"/>
            <typename><typedef-ref name="TMilli" ref="0x7f929c8d4b80"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f929ba14088"/>
        <function-ref name="fired" scoped="" ref="0x7f929ba166c8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f929ba15470"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f929ba15020"/>
        <function-ref name="getdt" scoped="" ref="0x7f929ba14928"/>
        <function-ref name="gett0" scoped="" ref="0x7f929ba144d8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f929ba16b18"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f929ba17908"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f929ba15a40"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f929ba17da8"/>
        <function-ref name="stop" scoped="" ref="0x7f929ba16278"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7f929b9c0478" loc="71:/home/kai/wsnpr/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x7f929b9c0478"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f929b9c07c8"/>
        <function-ref name="runTask" scoped="" ref="0x7f929b9c0950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7f929b9c5208" loc="49:/home/kai/wsnpr/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x7f929b9c5208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f929c8d4828"/>
            <typename><typedef-ref name="TMilli" ref="0x7f929c8d4b80"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f929b9c25f0"/>
        <function-ref name="fired" scoped="" ref="0x7f929b9c4b28"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f929b9c38c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f929b9c3470"/>
        <function-ref name="getdt" scoped="" ref="0x7f929b9c0020"/>
        <function-ref name="gett0" scoped="" ref="0x7f929b9c2a40"/>
        <function-ref name="isRunning" scoped="" ref="0x7f929b9c3020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f929b9c5d50"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f929b9c2020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f929b9c4238"/>
        <function-ref name="stop" scoped="" ref="0x7f929b9c46d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f929b9cb020" loc="48:/home/kai/wsnpr/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f929b9cb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f929c8d4828"/>
            <typename><typedef-ref name="TMilli" ref="0x7f929c8d4b80"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f929b9c7358"/>
        <function-ref name="fired" scoped="" ref="0x7f929b9ca9b8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f929b9c8748"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f929b9c82d8"/>
        <function-ref name="getdt" scoped="" ref="0x7f929b9c7c38"/>
        <function-ref name="gett0" scoped="" ref="0x7f929b9c77c8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f929b9cae28"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f929b9cbb88"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f929b9c8d38"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f929b9ca088"/>
        <function-ref name="stop" scoped="" ref="0x7f929b9ca548"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f929b9be988" loc="48:/home/kai/wsnpr/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f929b9be988"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f929c8d4828"/>
            <typename><typedef-ref name="TMilli" ref="0x7f929c8d4b80"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f929b9bd560"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f929b9bdb88" loc="49:/home/kai/wsnpr/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f929b9bdb88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f929c8d4828"/>
            <typename><typedef-ref name="TMilli" ref="0x7f929c8d4b80"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f929d8b1020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f929b9bc930"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f929b9ba270"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f929b9bcdb8"/>
        <function-ref name="overflow" scoped="" ref="0x7f929b9ba6f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f929b9b5420" loc="45:/home/kai/wsnpr/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f929b9b5420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f929c8d4828"/>
            <typename><typedef-ref name="TMilli" ref="0x7f929c8d4b80"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f929b9a16c8"/>
        <function-ref name="fired" scoped="" ref="0x7f929b9a4db0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f929b9a2ad8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f929b9a2688"/>
        <function-ref name="getdt" scoped="" ref="0x7f929b9a0020"/>
        <function-ref name="gett0" scoped="" ref="0x7f929b9a1b18"/>
        <function-ref name="isRunning" scoped="" ref="0x7f929b9a2238"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f929b9a4020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f929b9a10f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f929b9a44c0"/>
        <function-ref name="stop" scoped="" ref="0x7f929b9a4960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f929b9ac6a0" loc="49:/home/kai/wsnpr/tinyos-main/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7f929b9ac6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f929c8d4828"/>
            <typename><typedef-ref name="TMilli" ref="0x7f929c8d4b80"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f929b9a8a18"/>
        <function-ref name="fired" scoped="" ref="0x7f929b9a9158"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f929b9a9e48"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f929b9a99f8"/>
        <function-ref name="getdt" scoped="" ref="0x7f929b9a72e8"/>
        <function-ref name="gett0" scoped="" ref="0x7f929b9a8e68"/>
        <function-ref name="isRunning" scoped="" ref="0x7f929b9a95a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f929b9ab370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f929b9a8448"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f929b9ab810"/>
        <function-ref name="stop" scoped="" ref="0x7f929b9abcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f929b991a88" loc="69:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f929b991a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929b98f020"/>
        <function-ref name="write" scoped="" ref="0x7f929b98f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f929b99a100" loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f929b99a100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f929b99a450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f929b994a88" loc="63:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f929b994a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929b994dd8"/>
        <function-ref name="write" scoped="" ref="0x7f929b993020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f929b98e470" loc="72:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f929b98e470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929b98e7c0"/>
        <function-ref name="write" scoped="" ref="0x7f929b98e948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f929b987c10" loc="86:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f929b987c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929b986020"/>
        <function-ref name="write" scoped="" ref="0x7f929b9861a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f929b98ec10" loc="73:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f929b98ec10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929b98d020"/>
        <function-ref name="write" scoped="" ref="0x7f929b98d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f929b97a2e8" loc="108:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f929b97a2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929b97a638"/>
        <function-ref name="write" scoped="" ref="0x7f929b97a7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f929b97d2e8" loc="104:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f929b97d2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929b97d638"/>
        <function-ref name="write" scoped="" ref="0x7f929b97d7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f929b9993a0" loc="50:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f929b9993a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f929b9996f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f929b982470" loc="93:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f929b982470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929b9827c0"/>
        <function-ref name="write" scoped="" ref="0x7f929b982948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f929b97e2e8" loc="102:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f929b97e2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929b97e638"/>
        <function-ref name="write" scoped="" ref="0x7f929b97e7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f929b993a88" loc="65:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f929b993a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929b993dd8"/>
        <function-ref name="write" scoped="" ref="0x7f929b992020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f929b992a88" loc="67:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f929b992a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929b992dd8"/>
        <function-ref name="write" scoped="" ref="0x7f929b991020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f929b988470" loc="83:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f929b988470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929b9887c0"/>
        <function-ref name="write" scoped="" ref="0x7f929b988948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f929b98bc10" loc="79:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f929b98bc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929b98a020"/>
        <function-ref name="write" scoped="" ref="0x7f929b98a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f929b98d470" loc="74:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f929b98d470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929b98d7c0"/>
        <function-ref name="write" scoped="" ref="0x7f929b98d948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f929b99ca18" loc="42:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f929b99ca18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f929b99cd68"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f929b99b020"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f929b99b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f929b998c50" loc="54:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f929b998c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f929b997020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f929b9972e8" loc="55:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f929b9972e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f929b997738"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f929b981a38" loc="95:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f929b981a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929b981d88"/>
        <function-ref name="write" scoped="" ref="0x7f929b980020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f929b997a00" loc="56:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f929b997a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f929b997d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f929b97ea88" loc="103:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f929b97ea88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929b97edd8"/>
        <function-ref name="write" scoped="" ref="0x7f929b97d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f929b998020" loc="52:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f929b998020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f929b998370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f929b984c10" loc="92:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f929b984c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929b982020"/>
        <function-ref name="write" scoped="" ref="0x7f929b9821a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f929b9922e8" loc="66:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f929b9922e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929b992638"/>
        <function-ref name="write" scoped="" ref="0x7f929b9927c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f929b9932e8" loc="64:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f929b9932e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929b993638"/>
        <function-ref name="write" scoped="" ref="0x7f929b9937c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f929b99ba88" loc="46:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f929b99ba88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f929b99bdd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f929b985c10" loc="90:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f929b985c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929b984020"/>
        <function-ref name="write" scoped="" ref="0x7f929b9841a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f929b986470" loc="87:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f929b986470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929b9867c0"/>
        <function-ref name="write" scoped="" ref="0x7f929b986948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f929b984470" loc="91:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f929b984470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929b9847c0"/>
        <function-ref name="write" scoped="" ref="0x7f929b984948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f929b97ca88" loc="107:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f929b97ca88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929b97cdd8"/>
        <function-ref name="write" scoped="" ref="0x7f929b97a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f929b97da88" loc="105:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f929b97da88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929b97ddd8"/>
        <function-ref name="write" scoped="" ref="0x7f929b97c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f929b98a470" loc="80:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f929b98a470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929b98a7c0"/>
        <function-ref name="write" scoped="" ref="0x7f929b98a948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f929b986c10" loc="88:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f929b986c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929b985020"/>
        <function-ref name="write" scoped="" ref="0x7f929b9851a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f929b97fa88" loc="101:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f929b97fa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929b97fdd8"/>
        <function-ref name="write" scoped="" ref="0x7f929b97e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f929b98c470" loc="76:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f929b98c470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929b98c7c0"/>
        <function-ref name="write" scoped="" ref="0x7f929b98c948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f929b97aa88" loc="111:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f929b97aa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f929b97add8"/>
        <function-ref name="writeDone" scoped="" ref="0x7f929b979020"/>
        <function-ref name="write" scoped="" ref="0x7f929b9791a8"/>
        <function-ref name="beginRead" scoped="" ref="0x7f929b979330"/>
        <function-ref name="readDone" scoped="" ref="0x7f929b9794b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f929b99b470" loc="45:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f929b99b470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f929b99b7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f929b9942e8" loc="62:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f929b9942e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929b994638"/>
        <function-ref name="write" scoped="" ref="0x7f929b9947c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f929b9912e8" loc="68:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f929b9912e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929b991638"/>
        <function-ref name="write" scoped="" ref="0x7f929b9917c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f929b988c10" loc="84:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f929b988c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929b987020"/>
        <function-ref name="write" scoped="" ref="0x7f929b9871a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f929b98dc10" loc="75:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f929b98dc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929b98c020"/>
        <function-ref name="write" scoped="" ref="0x7f929b98c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f929b987470" loc="85:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f929b987470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929b9877c0"/>
        <function-ref name="write" scoped="" ref="0x7f929b987948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f929b98f470" loc="70:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f929b98f470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929b98f7c0"/>
        <function-ref name="write" scoped="" ref="0x7f929b98f948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f929b99a718" loc="48:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f929b99a718"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f929b99aa68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f929b98fc10" loc="71:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f929b98fc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929b98e020"/>
        <function-ref name="write" scoped="" ref="0x7f929b98e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f929b99edb8" loc="41:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f929b99edb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f929b99c170"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f929b99c2f8"/>
        <function-ref name="request" scoped="" ref="0x7f929b99c480"/>
        <function-ref name="granted" scoped="" ref="0x7f929b99c608"/>
        <function-ref name="isOwner" scoped="" ref="0x7f929b99c790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f929b995060" loc="57:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f929b995060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f929b9953b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f929b995c90" loc="59:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f929b995c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f929b994020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f929b97f2e8" loc="100:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f929b97f2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929b97f638"/>
        <function-ref name="write" scoped="" ref="0x7f929b97f7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f929b980a88" loc="99:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f929b980a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929b980dd8"/>
        <function-ref name="write" scoped="" ref="0x7f929b97f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f929b998638" loc="53:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f929b998638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f929b998988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f929b9802e8" loc="96:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f929b9802e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929b980638"/>
        <function-ref name="write" scoped="" ref="0x7f929b9807c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f929b97c2e8" loc="106:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f929b97c2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929b97c638"/>
        <function-ref name="write" scoped="" ref="0x7f929b97c7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f929b98ac10" loc="81:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f929b98ac10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929b988020"/>
        <function-ref name="write" scoped="" ref="0x7f929b9881a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f929b985470" loc="89:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f929b985470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929b9857c0"/>
        <function-ref name="write" scoped="" ref="0x7f929b985948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f929b99ad30" loc="49:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f929b99ad30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f929b9990d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f929b9999b8" loc="51:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f929b9999b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f929b999d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f929b98cc10" loc="77:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f929b98cc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929b98b020"/>
        <function-ref name="write" scoped="" ref="0x7f929b98b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f929b995678" loc="58:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f929b995678"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f929b9959c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f929b98b470" loc="78:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f929b98b470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929b98b7c0"/>
        <function-ref name="write" scoped="" ref="0x7f929b98b948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f929b982c10" loc="94:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f929b982c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929b9815e8"/>
        <function-ref name="write" scoped="" ref="0x7f929b981770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f929b979780" loc="112:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f929b979780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f929b979ad0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f929b979c58"/>
        <function-ref name="write" scoped="" ref="0x7f929b979de0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f929b978020"/>
        <function-ref name="readDone" scoped="" ref="0x7f929b9781a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f929b953690" loc="46:/home/kai/wsnpr/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f929b953690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f929b9539e0"/>
        <function-ref name="rand32" scoped="" ref="0x7f929b953b68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f929b950668" loc="45:/home/kai/wsnpr/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7f929b950668"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f929b9531e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f929b9578d0" loc="44:/home/kai/wsnpr/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f929b9578d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f929b957c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f929b94c568" loc="48:/home/kai/wsnpr/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f929b94c568"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f929b94c8b8"/>
        <function-ref name="rand32" scoped="" ref="0x7f929b94ca40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f929b94d528" loc="47:/home/kai/wsnpr/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7f929b94d528"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f929b94c0c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f929b952b38" loc="46:/home/kai/wsnpr/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f929b952b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f929b94d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f929b955bb0" loc="67:/home/kai/wsnpr/tinyos-main/tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f929b955bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f929b93f020"/>
        <function-ref name="toIdle" scoped="" ref="0x7f929b93f1a8"/>
        <function-ref name="isState" scoped="" ref="0x7f929b93f330"/>
        <function-ref name="isIdle" scoped="" ref="0x7f929b93f4b8"/>
        <function-ref name="requestState" scoped="" ref="0x7f929b93f640"/>
        <function-ref name="forceState" scoped="" ref="0x7f929b93f7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f929b932838" loc="44:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f929b932838"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f929b932b88"/>
        <function-ref name="getPayload" scoped="" ref="0x7f929b932d10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f929b931020"/>
        <function-ref name="cancel" scoped="" ref="0x7f929b9311a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f929b931330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f929b939a78" loc="40:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f929b939a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f929b939dc8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f929b932020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f929b9321a8"/>
        <function-ref name="cancel" scoped="" ref="0x7f929b932330"/>
        <function-ref name="sendDone" scoped="" ref="0x7f929b9324b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f929b92d578" loc="45:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f929b92d578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f929b92d8c8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f929b92da50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f929b92dbd8"/>
        <function-ref name="cancel" scoped="" ref="0x7f929b92dd60"/>
        <function-ref name="sendDone" scoped="" ref="0x7f929b92c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f929b92e298" loc="40:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f929b92e298"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f929b92e5e8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f929b92e770"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f929b92e8f8"/>
        <function-ref name="cancel" scoped="" ref="0x7f929b92ea80"/>
        <function-ref name="sendDone" scoped="" ref="0x7f929b92ec08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f929b92b080" loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f929b92b080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f929b92b3d0"/>
        <function-ref name="rand32" scoped="" ref="0x7f929b92b558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f929b92ee80" loc="41:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f929b92ee80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f929b92d1f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f929b92b848" loc="48:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f929b92b848"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f929b92bb98"/>
        <function-ref name="getHeader" scoped="" ref="0x7f929b92bd20"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f929b92a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x7f929b92c2a0" loc="46:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f929b92c2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f929b92c5f0"/>
        <function-ref name="toIdle" scoped="" ref="0x7f929b92c778"/>
        <function-ref name="isState" scoped="" ref="0x7f929b92c900"/>
        <function-ref name="isIdle" scoped="" ref="0x7f929b92ca88"/>
        <function-ref name="requestState" scoped="" ref="0x7f929b92cc10"/>
        <function-ref name="forceState" scoped="" ref="0x7f929b92cd98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f929b92f468" loc="67:/home/kai/wsnpr/tinyos-main/tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f929b92f468"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f929b92f7b8"/>
        <function-ref name="toIdle" scoped="" ref="0x7f929b92f940"/>
        <function-ref name="isState" scoped="" ref="0x7f929b92fac8"/>
        <function-ref name="isIdle" scoped="" ref="0x7f929b92fc50"/>
        <function-ref name="requestState" scoped="" ref="0x7f929b92fdd8"/>
        <function-ref name="forceState" scoped="" ref="0x7f929b91a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f929b915e50" loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f929b915e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f929b9141e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f929b915080" loc="42:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f929b915080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f929b9153d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7f929b915748" loc="43:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7f929b915748"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f929b915a98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f929b90f728" loc="49:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f929b90f728"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f929b90fa78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f929b90f020" loc="45:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f929b90f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f929b90f370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f929b9112b0" loc="43:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f929b9112b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f929b911600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f929b90fd68" loc="50:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f929b90fd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f929b90e0f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f929b90e278"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f929b90e400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7f929b911978" loc="44:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7f929b911978"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f929b911cc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f929b8e2020" loc="75:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f929b8e2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f929b8e2370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f929b8e2670" loc="76:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f929b8e2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f929b8e29c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f929b8e2b48"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f929b8e2cd0"/>
        <function-ref name="cancel" scoped="" ref="0x7f929b8e2e58"/>
        <function-ref name="sendDone" scoped="" ref="0x7f929b8e1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f929b8e6a40" loc="65:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f929b8e6a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f929b8e6d90"/>
        <function-ref name="getPayload" scoped="" ref="0x7f929b8e5020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f929b8e51a8"/>
        <function-ref name="cancel" scoped="" ref="0x7f929b8e5330"/>
        <function-ref name="sendDone" scoped="" ref="0x7f929b8e54b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f929b8e5db8" loc="68:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f929b8e5db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f929b8e4170"/>
        <function-ref name="getPayload" scoped="" ref="0x7f929b8e42f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f929b8e4480"/>
        <function-ref name="cancel" scoped="" ref="0x7f929b8e4608"/>
        <function-ref name="sendDone" scoped="" ref="0x7f929b8e4790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f929b8e5748" loc="66:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f929b8e5748"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f929b8e5a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f929b8e9e28" loc="64:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f929b8e9e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f929b8e61a8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f929b8e6330"/>
        <function-ref name="request" scoped="" ref="0x7f929b8e64b8"/>
        <function-ref name="granted" scoped="" ref="0x7f929b8e6640"/>
        <function-ref name="isOwner" scoped="" ref="0x7f929b8e67c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f929b8e4ae8" loc="69:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f929b8e4ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f929b8e4e38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f929b8e31a8" loc="71:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f929b8e31a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f929b8e34f8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f929b8e3680"/>
        <function-ref name="getPayload" scoped="" ref="0x7f929b8e3808"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f929b8e3990"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f929b8e3b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f929b8d8528" loc="58:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f929b8d8528"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f929b8d8878"/>
        <function-ref name="getPayload" scoped="" ref="0x7f929b8d8a00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f929b8d8b88"/>
        <function-ref name="cancel" scoped="" ref="0x7f929b8d8d10"/>
        <function-ref name="sendDone" scoped="" ref="0x7f929b8d7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f929b8d7358" loc="59:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f929b8d7358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f929b8d76a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x7f929b8abac0" loc="184:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantTask" scoped="" ref="0x7f929b8abac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f929b8abe10"/>
        <function-ref name="runTask" scoped="" ref="0x7f929b8aa020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f929b8d7970" loc="60:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f929b8d7970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f929b8d7cc0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f929b8d7e48"/>
        <function-ref name="getRssi" scoped="" ref="0x7f929b8d6020"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f929b8d61a8"/>
        <function-ref name="getPower" scoped="" ref="0x7f929b8d6330"/>
        <function-ref name="getLqi" scoped="" ref="0x7f929b8d64b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f929b8da490" loc="51:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f929b8da490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f929b8da7e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f929b8da968"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f929b8daaf0"/>
        <function-ref name="cancel" scoped="" ref="0x7f929b8dac78"/>
        <function-ref name="sendDone" scoped="" ref="0x7f929b8dae00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f929b8d51c0" loc="62:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f929b8d51c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f929b8d5510"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f929b8d5698"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f929b8d5820"/>
        <function-ref name="dequeue" scoped="" ref="0x7f929b8d59a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f929b8d67a8" loc="61:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f929b8d67a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f929b8d6af8"/>
        <function-ref name="getHeader" scoped="" ref="0x7f929b8d6c80"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f929b8d6e08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f929b8dbdc8" loc="49:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7f929b8dbdc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f929b8da170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f929b8dd440" loc="46:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f929b8dd440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f929b8dd790"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f929b8dd918"/>
        <function-ref name="request" scoped="" ref="0x7f929b8ddaa0"/>
        <function-ref name="granted" scoped="" ref="0x7f929b8ddc28"/>
        <function-ref name="isOwner" scoped="" ref="0x7f929b8dddb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f929b8db118" loc="48:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7f929b8db118"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f929b8db468"/>
        <function-ref name="getPayload" scoped="" ref="0x7f929b8db5f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f929b8db778"/>
        <function-ref name="cancel" scoped="" ref="0x7f929b8db900"/>
        <function-ref name="sendDone" scoped="" ref="0x7f929b8dba88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f929b8d9188" loc="52:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f929b8d9188"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f929b8d94d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f929b8d9808" loc="54:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f929b8d9808"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f929b8d9b58"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f929b8d9ce0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f929b8d9e68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f929b8d8020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f929b8d81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f929b88cc28" loc="44:/home/kai/wsnpr/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f929b88cc28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f929b88b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f929b88b2a8" loc="45:/home/kai/wsnpr/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f929b88b2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f929b88b5f8"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f929b88b780"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f929b88b908"/>
        <function-ref name="dequeue" scoped="" ref="0x7f929b88ba90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f929b880dc8" loc="46:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f929b880dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f929b87f170"/>
        <function-ref name="stopDone" scoped="" ref="0x7f929b87f2f8"/>
        <function-ref name="start" scoped="" ref="0x7f929b87f480"/>
        <function-ref name="stop" scoped="" ref="0x7f929b87f608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f929b87e838" loc="51:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f929b87e838"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f929b87eb88"/>
        <function-ref name="getPayload" scoped="" ref="0x7f929b87ed10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f929b87d020"/>
        <function-ref name="cancel" scoped="" ref="0x7f929b87d1a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f929b87d330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f929b87d668" loc="52:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f929b87d668"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f929b87d9b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f929b881080" loc="43:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f929b881080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f929b8813d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f929b881558"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f929b8816e0"/>
        <function-ref name="cancel" scoped="" ref="0x7f929b881868"/>
        <function-ref name="sendDone" scoped="" ref="0x7f929b8819f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f929b880318" loc="45:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f929b880318"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f929b880668"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f929b8807f0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f929b880978"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f929b880b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x7f929b87f928" loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x7f929b87f928"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f929b87fc78"/>
        <function-ref name="toIdle" scoped="" ref="0x7f929b87fe00"/>
        <function-ref name="isState" scoped="" ref="0x7f929b87e020"/>
        <function-ref name="isIdle" scoped="" ref="0x7f929b87e1a8"/>
        <function-ref name="requestState" scoped="" ref="0x7f929b87e330"/>
        <function-ref name="forceState" scoped="" ref="0x7f929b87e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f929b87dd28" loc="53:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7f929b87dd28"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f929b87c0a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f929b87c228"/>
        <function-ref name="start" scoped="" ref="0x7f929b87c3b0"/>
        <function-ref name="stop" scoped="" ref="0x7f929b87c538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f929b881c80" loc="44:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f929b881c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f929b880020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f929b879170" loc="41:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f929b879170"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f929b8794c0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f929b879648"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f929b8797d0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f929b879958"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f929b87bd50" loc="67:/home/kai/wsnpr/tinyos-main/tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f929b87bd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f929b87a0d8"/>
        <function-ref name="toIdle" scoped="" ref="0x7f929b87a260"/>
        <function-ref name="isState" scoped="" ref="0x7f929b87a3e8"/>
        <function-ref name="isIdle" scoped="" ref="0x7f929b87a570"/>
        <function-ref name="requestState" scoped="" ref="0x7f929b87a6f8"/>
        <function-ref name="forceState" scoped="" ref="0x7f929b87a880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f929b86c020" loc="45:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f929b86c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f929b86c370"/>
        <function-ref name="getPayload" scoped="" ref="0x7f929b86c4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f929b86c680"/>
        <function-ref name="cancel" scoped="" ref="0x7f929b86c808"/>
        <function-ref name="sendDone" scoped="" ref="0x7f929b86c990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f929b8705d0" loc="40:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f929b8705d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f929b870920"/>
        <function-ref name="getPayload" scoped="" ref="0x7f929b870aa8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f929b870c30"/>
        <function-ref name="cancel" scoped="" ref="0x7f929b870db8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f929b86d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f929b86d2d0" loc="41:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f929b86d2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f929b86d620"/>
        <function-ref name="setRetries" scoped="" ref="0x7f929b86d7a8"/>
        <function-ref name="getRetries" scoped="" ref="0x7f929b86d930"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f929b86dab8"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f929b86dc40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7f929b8683c8" loc="44:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f929b8683c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f929b868718"/>
        <function-ref name="noAck" scoped="" ref="0x7f929b8688a0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f929b868a28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f929b86b548" loc="40:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f929b86b548"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f929b86b898"/>
        <function-ref name="setRetries" scoped="" ref="0x7f929b86ba20"/>
        <function-ref name="getRetries" scoped="" ref="0x7f929b86bba8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f929b86bd30"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f929b868020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f929b849cc8" loc="59:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f929b849cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f929b8480a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f929b849020" loc="58:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f929b849020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f929b849370"/>
        <function-ref name="getPayload" scoped="" ref="0x7f929b8494f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f929b849680"/>
        <function-ref name="cancel" scoped="" ref="0x7f929b849808"/>
        <function-ref name="sendDone" scoped="" ref="0x7f929b849990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7f929b847ab0" loc="62:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f929b847ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f929b847e00"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f929b846020"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f929b8461a8"/>
        <function-ref name="syncDone" scoped="" ref="0x7f929b846330"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f929b8464b8"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f929b846640"/>
        <function-ref name="setChannel" scoped="" ref="0x7f929b8467c8"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f929b846950"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f929b846ad8"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f929b846c60"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f929b846de8"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f929b845020"/>
        <function-ref name="sync" scoped="" ref="0x7f929b8451a8"/>
        <function-ref name="getChannel" scoped="" ref="0x7f929b845430"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f929b8455b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f929b84a020" loc="54:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f929b84a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f929cab6908"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f929b84a370"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f929b84a4f8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f929b84a680"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f929b84a808"/>
        <function-ref name="setCca" scoped="" ref="0x7f929b84a990"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f929b84ab18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f929b84b400" loc="53:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7f929b84b400"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f929cab6908"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f929b84b750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7f929b8446a0" loc="64:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7f929b8446a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f929b8449f0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f929b844b78"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f929b844d00"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f929b843020"/>
        <function-ref name="setCca" scoped="" ref="0x7f929b8431a8"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f929b843330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f929b84c2a8" loc="52:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f929b84c2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f929b84c5f8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f929b84c780"/>
        <function-ref name="getPayload" scoped="" ref="0x7f929b84c908"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f929b84ca90"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f929b84cc18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f929b851980" loc="48:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f929b851980"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f929cab6908"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f929b851cd0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f929b851e58"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f929b850020"/>
        <function-ref name="cancel" scoped="" ref="0x7f929b8501a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f929b850330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f929b84f628" loc="50:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f929b84f628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f929cab6908"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f929b84f978"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f929b848368" loc="60:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f929b848368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f929b8486b8"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f929b848840"/>
        <function-ref name="getRssi" scoped="" ref="0x7f929b8489c8"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f929b848b50"/>
        <function-ref name="getPower" scoped="" ref="0x7f929b848cd8"/>
        <function-ref name="getLqi" scoped="" ref="0x7f929b848e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f929b8458d0" loc="63:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f929b8458d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f929b845d20"/>
        <function-ref name="changed" scoped="" ref="0x7f929b844020"/>
        <function-ref name="amGroup" scoped="" ref="0x7f929b8441a8"/>
        <function-ref name="setAddress" scoped="" ref="0x7f929b844330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f929b847188" loc="61:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f929b847188"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f929b8474d8"/>
        <function-ref name="getHeader" scoped="" ref="0x7f929b847660"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f929b8477e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f929b850ab0" loc="49:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f929b850ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f929cab6908"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f929b850e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f929b8422a8" loc="67:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f929b8422a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f929b8425f8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f929b842780"/>
        <function-ref name="led1On" scoped="" ref="0x7f929b842908"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f929b842a90"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f929b842c18"/>
        <function-ref name="get" scoped="" ref="0x7f929b842da0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f929b840020"/>
        <function-ref name="led2Off" scoped="" ref="0x7f929b840640"/>
        <function-ref name="set" scoped="" ref="0x7f929b8401a8"/>
        <function-ref name="led0On" scoped="" ref="0x7f929b840330"/>
        <function-ref name="led2On" scoped="" ref="0x7f929b8404b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f929b84fc18" loc="51:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f929b84fc18"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f929b84d020"/>
        <function-ref name="source" scoped="" ref="0x7f929b84d1a8"/>
        <function-ref name="address" scoped="" ref="0x7f929b84d330"/>
        <function-ref name="destination" scoped="" ref="0x7f929b84d4b8"/>
        <function-ref name="setSource" scoped="" ref="0x7f929b84d640"/>
        <function-ref name="setDestination" scoped="" ref="0x7f929b84d7c8"/>
        <function-ref name="type" scoped="" ref="0x7f929b84d950"/>
        <function-ref name="setType" scoped="" ref="0x7f929b84dad8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f929b84dc60"/>
        <function-ref name="setGroup" scoped="" ref="0x7f929b84dde8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f929b84c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0x7f929b843698" loc="66:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioResource" scoped="" ref="0x7f929b843698"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f929b8439e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f929b843b70"/>
        <function-ref name="request" scoped="" ref="0x7f929b843cf8"/>
        <function-ref name="granted" scoped="" ref="0x7f929b843e80"/>
        <function-ref name="isOwner" scoped="" ref="0x7f929b842030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f929b7be760" loc="46:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f929b7be760"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f929b7beab0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f929b7bec38"/>
        <function-ref name="start" scoped="" ref="0x7f929b7bedc0"/>
        <function-ref name="stop" scoped="" ref="0x7f929b7bb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f929b7bb798" loc="47:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f929b7bb798"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f929cab6908"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f929b7bbae8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f929b7bbc70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f929b7bbdf8"/>
        <function-ref name="cancel" scoped="" ref="0x7f929b7ba020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f929b7ba1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f929b7b8020" loc="49:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f929b7b8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f929b7b8370"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f929b7b84f8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f929b7b8680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f929b7b8808"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f929b7b8990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f929b7ba928" loc="48:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f929b7ba928"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f929cab6908"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f929b7bac78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f929b7b6c80" loc="53:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f929b7b6c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f929b7b5020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f929b7b51a8"/>
        <function-ref name="led1On" scoped="" ref="0x7f929b7b5330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f929b7b54b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f929b7b5640"/>
        <function-ref name="get" scoped="" ref="0x7f929b7b57c8"/>
        <function-ref name="led1Off" scoped="" ref="0x7f929b7b5950"/>
        <function-ref name="led2Off" scoped="" ref="0x7f929b7b4020"/>
        <function-ref name="set" scoped="" ref="0x7f929b7b5ad8"/>
        <function-ref name="led0On" scoped="" ref="0x7f929b7b5c60"/>
        <function-ref name="led2On" scoped="" ref="0x7f929b7b5de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f929b7b6348" loc="51:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f929b7b6348"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f929b7b6698"/>
        <function-ref name="noAck" scoped="" ref="0x7f929b7b6820"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f929b7b69a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f929b7b8c30" loc="50:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f929b7b8c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f929b7b7020"/>
        <function-ref name="source" scoped="" ref="0x7f929b7b71a8"/>
        <function-ref name="address" scoped="" ref="0x7f929b7b7330"/>
        <function-ref name="destination" scoped="" ref="0x7f929b7b74b8"/>
        <function-ref name="setSource" scoped="" ref="0x7f929b7b7640"/>
        <function-ref name="setDestination" scoped="" ref="0x7f929b7b77c8"/>
        <function-ref name="type" scoped="" ref="0x7f929b7b7950"/>
        <function-ref name="setType" scoped="" ref="0x7f929b7b7ad8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f929b7b7c60"/>
        <function-ref name="setGroup" scoped="" ref="0x7f929b7b7de8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f929b7b6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f929b75b308" loc="54:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f929b75b308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f929b75b658"/>
        <function-ref name="getPayload" scoped="" ref="0x7f929b75b7e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f929b75b968"/>
        <function-ref name="cancel" scoped="" ref="0x7f929b75baf0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f929b75bc78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f929b75a020" loc="55:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f929b75a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f929b75a370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f929b7b2460" loc="47:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f929b7b2460"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f929cab6908"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f929b7b27d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f929b7b2958"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f929b7b2ae0"/>
        <function-ref name="cancel" scoped="" ref="0x7f929b7b2c68"/>
        <function-ref name="sendDone" scoped="" ref="0x7f929b7b2df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f929b75dd20" loc="50:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f929b75dd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f929b75c0a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f929b75c228"/>
        <function-ref name="getPayload" scoped="" ref="0x7f929b75c3b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f929b75c538"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f929b75c6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f929b75e180" loc="48:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f929b75e180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f929cab6908"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f929b75e4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f929b75c908" loc="51:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f929b75c908"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f929b75cc58"/>
        <function-ref name="noAck" scoped="" ref="0x7f929b75cde0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f929b75b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f929b75e738" loc="49:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f929b75e738"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f929b75ea88"/>
        <function-ref name="source" scoped="" ref="0x7f929b75ec10"/>
        <function-ref name="address" scoped="" ref="0x7f929b75ed98"/>
        <function-ref name="destination" scoped="" ref="0x7f929b75d020"/>
        <function-ref name="setSource" scoped="" ref="0x7f929b75d1a8"/>
        <function-ref name="setDestination" scoped="" ref="0x7f929b75d330"/>
        <function-ref name="type" scoped="" ref="0x7f929b75d4b8"/>
        <function-ref name="setType" scoped="" ref="0x7f929b75d640"/>
        <function-ref name="isForMe" scoped="" ref="0x7f929b75d7c8"/>
        <function-ref name="setGroup" scoped="" ref="0x7f929b75d950"/>
        <function-ref name="localGroup" scoped="" ref="0x7f929b75dad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f929b756728" loc="50:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f929b756728"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f929b756a78"/>
        <function-ref name="stopDone" scoped="" ref="0x7f929b756c00"/>
        <function-ref name="start" scoped="" ref="0x7f929b756d88"/>
        <function-ref name="stop" scoped="" ref="0x7f929b755020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f929b753208" loc="52:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f929b753208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f929cab3408"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f929b753558"/>
        <function-ref name="getPayload" scoped="" ref="0x7f929b7536e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f929b753868"/>
        <function-ref name="cancel" scoped="" ref="0x7f929b7539f0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f929b753b78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f929b756110" loc="49:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f929b756110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f929b756460"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f929b755760" loc="51:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f929b755760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f929cab3408"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f929b755ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f929b7518f8" loc="56:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f929b7518f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f929b751c48"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f929b751dd0"/>
        <function-ref name="led1On" scoped="" ref="0x7f929b750020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f929b7501a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f929b750330"/>
        <function-ref name="get" scoped="" ref="0x7f929b7504b8"/>
        <function-ref name="led1Off" scoped="" ref="0x7f929b750640"/>
        <function-ref name="led2Off" scoped="" ref="0x7f929b750c60"/>
        <function-ref name="set" scoped="" ref="0x7f929b7507c8"/>
        <function-ref name="led0On" scoped="" ref="0x7f929b750950"/>
        <function-ref name="led2On" scoped="" ref="0x7f929b750ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x7f929b751020" loc="55:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialPacketInfo" scoped="" ref="0x7f929b751020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f929cab3408"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f929b751370"/>
        <function-ref name="offset" scoped="" ref="0x7f929b7514f8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f929b751680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f929b74cd00" loc="66:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f929b74cd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f929b7490a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f929b749228"/>
        <function-ref name="start" scoped="" ref="0x7f929b7493b0"/>
        <function-ref name="stop" scoped="" ref="0x7f929b749538"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x7f929b6e5830" loc="332:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDoneTask" scoped="" ref="0x7f929b6e5830"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f929b6e5b80"/>
        <function-ref name="runTask" scoped="" ref="0x7f929b6e5d08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7f929b739398" loc="74:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x7f929b739398"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f929b7396e8"/>
        <function-ref name="stop" scoped="" ref="0x7f929b739870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x7f929b71bd70" loc="191:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RunTx" scoped="" ref="0x7f929b71bd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f929b71a0f0"/>
        <function-ref name="runTask" scoped="" ref="0x7f929b71a278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f929b74c6e8" loc="65:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f929b74c6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f929b74ca38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x7f929b736e40" loc="75:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFlush" scoped="" ref="0x7f929b736e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x7f929b7381c0"/>
        <function-ref name="flush" scoped="" ref="0x7f929b738348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x7f929b6e7020" loc="322:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDoneTask" scoped="" ref="0x7f929b6e7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f929b6e7370"/>
        <function-ref name="runTask" scoped="" ref="0x7f929b6e74f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x7f929b73ab38" loc="72:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x7f929b73ab38"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7f929b742020"/>
        <function-ref name="resetSend" scoped="" ref="0x7f929b7421a8"/>
        <function-ref name="dataReceived" scoped="" ref="0x7f929b742330"/>
        <function-ref name="resetReceive" scoped="" ref="0x7f929b7424b8"/>
        <function-ref name="putData" scoped="" ref="0x7f929b742640"/>
        <function-ref name="putDone" scoped="" ref="0x7f929b7427c8"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7f929b742950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f929b742bc8" loc="73:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f929b742bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f929b73f020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f929b73f1a8"/>
        <function-ref name="led1On" scoped="" ref="0x7f929b73f330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f929b73f4b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f929b73f640"/>
        <function-ref name="get" scoped="" ref="0x7f929b73f7c8"/>
        <function-ref name="led1Off" scoped="" ref="0x7f929b73f950"/>
        <function-ref name="led2Off" scoped="" ref="0x7f929b739020"/>
        <function-ref name="set" scoped="" ref="0x7f929b73fad8"/>
        <function-ref name="led0On" scoped="" ref="0x7f929b73fc60"/>
        <function-ref name="led2On" scoped="" ref="0x7f929b73fde8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x7f929b6e2918" loc="341:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7f929b6e2918"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f929b6e2c68"/>
        <function-ref name="runTask" scoped="" ref="0x7f929b6e2df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x7f929b744898" loc="67:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x7f929b744898"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7f929b744be8"/>
        <function-ref name="nextByte" scoped="" ref="0x7f929b744d70"/>
        <function-ref name="startSend" scoped="" ref="0x7f929b748020"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7f929b7481a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x7f929b740b48" loc="68:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f929b740b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7f929b747020"/>
        <function-ref name="byteReceived" scoped="" ref="0x7f929b7471a8"/>
        <function-ref name="endPacket" scoped="" ref="0x7f929b747330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x7f929b61d100" loc="275:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveTask" scoped="" ref="0x7f929b61d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f929b61d450"/>
        <function-ref name="runTask" scoped="" ref="0x7f929b61d5d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f929b622020" loc="51:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f929b622020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f929cab3408"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f929b622390"/>
        <function-ref name="getPayload" scoped="" ref="0x7f929b622518"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f929b6226a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f929b622828"/>
        <function-ref name="sendDone" scoped="" ref="0x7f929b6229b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x7f929b61d8a0" loc="158:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalSendDone" scoped="" ref="0x7f929b61d8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f929b61dbf0"/>
        <function-ref name="runTask" scoped="" ref="0x7f929b61dd78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f929b623868" loc="50:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f929b623868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f929cab3408"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f929b623bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x7f929b622db8" loc="54:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketInfo" scoped="" ref="0x7f929b622db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7f929cab3408"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f929b621170"/>
        <function-ref name="offset" scoped="" ref="0x7f929b6212f8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f929b621480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f929b620a50" loc="57:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f929b620a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f929b620da0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f929b61e020"/>
        <function-ref name="led1On" scoped="" ref="0x7f929b61e1a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f929b61e330"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f929b61e4b8"/>
        <function-ref name="get" scoped="" ref="0x7f929b61e640"/>
        <function-ref name="led1Off" scoped="" ref="0x7f929b61e7c8"/>
        <function-ref name="led2On" scoped="" ref="0x7f929b61ede8"/>
        <function-ref name="set" scoped="" ref="0x7f929b61ead8"/>
        <function-ref name="led2Off" scoped="" ref="0x7f929b61e950"/>
        <function-ref name="led0On" scoped="" ref="0x7f929b61ec60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x7f929b620020" loc="56:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x7f929b620020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7f929b620370"/>
        <function-ref name="nextByte" scoped="" ref="0x7f929b6204f8"/>
        <function-ref name="startSend" scoped="" ref="0x7f929b620680"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7f929b620808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x7f929b6216c8" loc="55:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7f929b6216c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7f929b621a18"/>
        <function-ref name="byteReceived" scoped="" ref="0x7f929b621ba0"/>
        <function-ref name="endPacket" scoped="" ref="0x7f929b621d28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x7f929b60b448" loc="50:/home/kai/wsnpr/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f929b60b448"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f929b60b798"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f929b60b920"/>
        <function-ref name="receive" scoped="" ref="0x7f929b60baa8"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f929b60bc30"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f929b60bdb8"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f929b617020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f929b6171a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x7f929b61bb38" loc="48:/home/kai/wsnpr/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x7f929b61bb38"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7f929b618020"/>
        <function-ref name="resetSend" scoped="" ref="0x7f929b6181a8"/>
        <function-ref name="dataReceived" scoped="" ref="0x7f929b618330"/>
        <function-ref name="resetReceive" scoped="" ref="0x7f929b6184b8"/>
        <function-ref name="putData" scoped="" ref="0x7f929b618640"/>
        <function-ref name="putDone" scoped="" ref="0x7f929b6187c8"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7f929b618950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f929b617420" loc="51:/home/kai/wsnpr/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f929b617420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f929b617770"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f929b6178f8"/>
        <function-ref name="led1On" scoped="" ref="0x7f929b617a80"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f929b617c08"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f929b617d90"/>
        <function-ref name="get" scoped="" ref="0x7f929b616020"/>
        <function-ref name="led1Off" scoped="" ref="0x7f929b6161a8"/>
        <function-ref name="led2Off" scoped="" ref="0x7f929b6167c8"/>
        <function-ref name="set" scoped="" ref="0x7f929b616330"/>
        <function-ref name="led0On" scoped="" ref="0x7f929b6164b8"/>
        <function-ref name="led2On" scoped="" ref="0x7f929b616640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f929b5eb408" loc="6:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f929b5eb408"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f929b5eb758"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f929b5eb8e0"/>
        <function-ref name="receive" scoped="" ref="0x7f929b5eba68"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f929b5ebbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f929b5f2020" loc="5:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f929b5f2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f929b5f2370"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f929b5f24f8"/>
        <function-ref name="receive" scoped="" ref="0x7f929b5f2680"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f929b5f2808"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f929b5f2990"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f929b5f2b18"/>
        <function-ref name="sendDone" scoped="" ref="0x7f929b5f2ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f929b61a7e8" loc="4:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f929b61a7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f929b61ab38"/>
        <function-ref name="stop" scoped="" ref="0x7f929b61acc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f929b472430" loc="45:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f929b472430"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f929b472780"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f929b472908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f929b471bd8" loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f929b471bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f929b470020"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f929b4701a8"/>
        <function-ref name="receive" scoped="" ref="0x7f929b470330"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f929b4704b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7f929b470740" loc="49:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f929b470740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f929b470a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f929b472b90" loc="46:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f929b472b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f929b471020"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f929b4711a8"/>
        <function-ref name="receive" scoped="" ref="0x7f929b471330"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f929b4714b8"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f929b471640"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f929b4717c8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f929b471950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f929b4737d0" loc="44:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f929b4737d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f929b473b20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f929b473ca8"/>
        <function-ref name="request" scoped="" ref="0x7f929b473e30"/>
        <function-ref name="granted" scoped="" ref="0x7f929b472020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f929b4721a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f929b5e09d0" loc="42:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f929b5e09d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f929b5e0d20"/>
        <function-ref name="configure" scoped="" ref="0x7f929b5df020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f929b5dec88" loc="44:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f929b5dec88"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f929b5dc020"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f929b5dc1a8"/>
        <function-ref name="receive" scoped="" ref="0x7f929b5dc330"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f929b5dc4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7f929b5da020" loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f929b5da020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f929b5da370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f929b5df800" loc="43:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f929b5df800"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f929b5dfb50"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f929b5dfcd8"/>
        <function-ref name="receive" scoped="" ref="0x7f929b5dfe60"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f929b5de020"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f929b5de1a8"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f929b5de330"/>
        <function-ref name="sendDone" scoped="" ref="0x7f929b5de4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f929b5dcd50" loc="46:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f929b5dcd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f929b5db0d8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f929b5db260"/>
        <function-ref name="request" scoped="" ref="0x7f929b5db3e8"/>
        <function-ref name="granted" scoped="" ref="0x7f929b5db570"/>
        <function-ref name="isOwner" scoped="" ref="0x7f929b5db6f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f929b5e17b8" loc="41:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f929b5e17b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f929b5e1b08"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f929b5e1c90"/>
        <function-ref name="request" scoped="" ref="0x7f929b5e1e18"/>
        <function-ref name="granted" scoped="" ref="0x7f929b5e0020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f929b5e01a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f929b5dacb8" loc="48:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f929b5dacb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f929b5d90a0"/>
        <function-ref name="txDone" scoped="" ref="0x7f929b5d9228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f929b571a68" loc="44:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f929b571a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f929b571dd8"/>
        <function-ref name="configure" scoped="" ref="0x7f929b570020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7f929b56e550" loc="46:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7f929b56e550"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f929b56e8c0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7f929b56ea48"/>
        <function-ref name="receive" scoped="" ref="0x7f929b56ebd0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7f929b56ed58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7f929b56c020" loc="49:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f929b56c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f929b56c390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7f929b56c658" loc="50:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f929b56c658"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f929b56c9a8"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f929b56cb30"/>
        <function-ref name="setUctl" scoped="" ref="0x7f929b56ccb8"/>
        <function-ref name="enableUart" scoped="" ref="0x7f929b56ce40"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f929b56b020"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f929b56b1a8"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f929b56b330"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f929b56b4b8"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f929b56b640"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f929b56b7c8"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f929b56b950"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f929b56bad8"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f929b56bc60"/>
        <function-ref name="getUbr" scoped="" ref="0x7f929b56a020"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f929b56a1a8"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f929b56a330"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f929b56a4b8"/>
        <function-ref name="isUart" scoped="" ref="0x7f929b56a640"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f929b56a7c8"/>
        <function-ref name="isSpi" scoped="" ref="0x7f929b56a950"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f929b56aad8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f929b56ac60"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f929b56ade8"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f929b569020"/>
        <function-ref name="getMode" scoped="" ref="0x7f929b5691a8"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f929b569530"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f929b5696b8"/>
        <function-ref name="setUbr" scoped="" ref="0x7f929b569840"/>
        <function-ref name="tx" scoped="" ref="0x7f929b5699c8"/>
        <function-ref name="getUctl" scoped="" ref="0x7f929b569b50"/>
        <function-ref name="disableUart" scoped="" ref="0x7f929b569cd8"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f929b569e60"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f929b568020"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f929b5681a8"/>
        <function-ref name="rx" scoped="" ref="0x7f929b568330"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f929b5684b8"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f929b568640"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f929b5687c8"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f929b568950"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f929b568ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7f929b5703c8" loc="45:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7f929b5703c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f929b570738"/>
        <function-ref name="receivedByte" scoped="" ref="0x7f929b5708c0"/>
        <function-ref name="receive" scoped="" ref="0x7f929b570a48"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7f929b570bd0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7f929b570d58"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7f929b56e020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f929b56e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f929b5679b0" loc="52:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f929b5679b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f929c8d3020"/>
            <typename><typedef-ref name="T32khz" ref="0x7f929c8d3378"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f929b566730"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f929b565088"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f929b566bb8"/>
        <function-ref name="overflow" scoped="" ref="0x7f929b565510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f929b56d180" loc="48:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f929b56d180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f929b56d4f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f929b56d678"/>
        <function-ref name="request" scoped="" ref="0x7f929b56d800"/>
        <function-ref name="granted" scoped="" ref="0x7f929b56d988"/>
        <function-ref name="isOwner" scoped="" ref="0x7f929b56db10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f929b572cb8" loc="43:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f929b572cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f929b5710a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f929b571228"/>
        <function-ref name="request" scoped="" ref="0x7f929b5713b0"/>
        <function-ref name="granted" scoped="" ref="0x7f929b571538"/>
        <function-ref name="isOwner" scoped="" ref="0x7f929b5716c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f929b567020" loc="51:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f929b567020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f929b567390"/>
        <function-ref name="txDone" scoped="" ref="0x7f929b567518"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f929b565928" loc="53:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f929b565928"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f929b565c78"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f929b565e00"/>
        <function-ref name="led1On" scoped="" ref="0x7f929b564020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f929b5641a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f929b564330"/>
        <function-ref name="get" scoped="" ref="0x7f929b5644b8"/>
        <function-ref name="led1Off" scoped="" ref="0x7f929b564640"/>
        <function-ref name="led2On" scoped="" ref="0x7f929b564c60"/>
        <function-ref name="set" scoped="" ref="0x7f929b564950"/>
        <function-ref name="led2Off" scoped="" ref="0x7f929b5647c8"/>
        <function-ref name="led0On" scoped="" ref="0x7f929b564ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f929b555528" loc="78:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f929b555528"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f929b555878"/>
        <function-ref name="txDone" scoped="" ref="0x7f929b555a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f929b558528" loc="76:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f929b558528"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f929b558878"/>
        <function-ref name="stop" scoped="" ref="0x7f929b558a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f929b558d18" loc="77:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f929b558d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f929b55b0a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f929b55b228"/>
        <function-ref name="setUctl" scoped="" ref="0x7f929b55b3b0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f929b55b538"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f929b55b6c0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f929b55b848"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f929b55b9d0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f929b55bb58"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f929b55bce0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f929b55be68"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f929b55a020"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f929b55a1a8"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f929b55a330"/>
        <function-ref name="getUbr" scoped="" ref="0x7f929b55a5b8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f929b55a740"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f929b55a8c8"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f929b55aa50"/>
        <function-ref name="isUart" scoped="" ref="0x7f929b55abd8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f929b55ad60"/>
        <function-ref name="isSpi" scoped="" ref="0x7f929b557020"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f929b5571a8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f929b557330"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f929b5574b8"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f929b557640"/>
        <function-ref name="getMode" scoped="" ref="0x7f929b5577c8"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f929b557b50"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f929b557cd8"/>
        <function-ref name="setUbr" scoped="" ref="0x7f929b557e60"/>
        <function-ref name="tx" scoped="" ref="0x7f929b556020"/>
        <function-ref name="getUctl" scoped="" ref="0x7f929b5561a8"/>
        <function-ref name="disableUart" scoped="" ref="0x7f929b556330"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f929b5564b8"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f929b556640"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f929b5567c8"/>
        <function-ref name="rx" scoped="" ref="0x7f929b556950"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f929b556ad8"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f929b556c60"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f929b556de8"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f929b555020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f929b5551a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f929b549e00" loc="80:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f929b549e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929b5481a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f929b548330"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929b5484b8"/>
        <function-ref name="toggle" scoped="" ref="0x7f929b548640"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929b5487c8"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929b548950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929b548ad8"/>
        <function-ref name="get" scoped="" ref="0x7f929b548c60"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929b548de8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929b547020"/>
        <function-ref name="set" scoped="" ref="0x7f929b5471a8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929b547330"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929b5474b8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929b547740"/>
        <function-ref name="clr" scoped="" ref="0x7f929b5478c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f929b54d8e0" loc="76:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f929b54d8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f929b54dc30"/>
        <function-ref name="txDone" scoped="" ref="0x7f929b54ddb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7f929b547c78" loc="81:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7f929b547c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929b546020"/>
        <function-ref name="isInput" scoped="" ref="0x7f929b5461a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929b546330"/>
        <function-ref name="toggle" scoped="" ref="0x7f929b5464b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929b546640"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929b5467c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929b546950"/>
        <function-ref name="get" scoped="" ref="0x7f929b546ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929b546c60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929b546de8"/>
        <function-ref name="set" scoped="" ref="0x7f929b545020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929b5451a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929b545330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929b5455b8"/>
        <function-ref name="clr" scoped="" ref="0x7f929b545740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7f929b545af0" loc="82:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7f929b545af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929b545e40"/>
        <function-ref name="isInput" scoped="" ref="0x7f929b544020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929b5441a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f929b544330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929b5444b8"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929b544640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929b5447c8"/>
        <function-ref name="get" scoped="" ref="0x7f929b544950"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929b544ad8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929b544c60"/>
        <function-ref name="set" scoped="" ref="0x7f929b544de8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929b543020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929b5431a8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929b543430"/>
        <function-ref name="clr" scoped="" ref="0x7f929b5435b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7f929b551060" loc="75:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f929b551060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f929b5513b0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f929b551538"/>
        <function-ref name="setUctl" scoped="" ref="0x7f929b5516c0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f929b551848"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f929b5519d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f929b551b58"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f929b551ce0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f929b551e68"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f929b550020"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f929b5501a8"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f929b550330"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f929b5504b8"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f929b550640"/>
        <function-ref name="getUbr" scoped="" ref="0x7f929b5508c8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f929b550a50"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f929b550bd8"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f929b550d60"/>
        <function-ref name="isUart" scoped="" ref="0x7f929b54f020"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f929b54f1a8"/>
        <function-ref name="isSpi" scoped="" ref="0x7f929b54f330"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f929b54f4b8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f929b54f640"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f929b54f7c8"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f929b54f950"/>
        <function-ref name="getMode" scoped="" ref="0x7f929b54fad8"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f929b54fe60"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f929b54e020"/>
        <function-ref name="setUbr" scoped="" ref="0x7f929b54e1a8"/>
        <function-ref name="tx" scoped="" ref="0x7f929b54e330"/>
        <function-ref name="getUctl" scoped="" ref="0x7f929b54e4b8"/>
        <function-ref name="disableUart" scoped="" ref="0x7f929b54e640"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f929b54e7c8"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f929b54e950"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f929b54ead8"/>
        <function-ref name="rx" scoped="" ref="0x7f929b54ec60"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f929b54ede8"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f929b54d020"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f929b54d1a8"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f929b54d330"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f929b54d4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f929b5547d0" loc="74:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f929b5547d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f929b554b20"/>
        <function-ref name="stop" scoped="" ref="0x7f929b554ca8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7f929b54a020" loc="79:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7f929b54a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929b54a370"/>
        <function-ref name="isInput" scoped="" ref="0x7f929b54a4f8"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929b54a680"/>
        <function-ref name="toggle" scoped="" ref="0x7f929b54a808"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929b54a990"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929b54ab18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929b54aca0"/>
        <function-ref name="get" scoped="" ref="0x7f929b54ae28"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929b549020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929b5491a8"/>
        <function-ref name="set" scoped="" ref="0x7f929b549330"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929b5494b8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929b549640"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929b5498c8"/>
        <function-ref name="clr" scoped="" ref="0x7f929b549a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f929b54c1e8" loc="78:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f929b54c1e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929b54c538"/>
        <function-ref name="isInput" scoped="" ref="0x7f929b54c6c0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929b54c848"/>
        <function-ref name="toggle" scoped="" ref="0x7f929b54c9d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929b54cb58"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929b54cce0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929b54ce68"/>
        <function-ref name="get" scoped="" ref="0x7f929b54b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929b54b1a8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929b54b330"/>
        <function-ref name="set" scoped="" ref="0x7f929b54b4b8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929b54b640"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929b54b7c8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929b54ba50"/>
        <function-ref name="clr" scoped="" ref="0x7f929b54bbd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f929b4ca020" loc="43:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Counter32khz16C.nc">
      <component-ref qname="Counter32khz16C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f929b4ca020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f929c8d3020"/>
            <typename><typedef-ref name="T32khz" ref="0x7f929c8d3378"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f929b4cad70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f929b4c96b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f929b4c9230"/>
        <function-ref name="overflow" scoped="" ref="0x7f929b4c9b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f929a7a18c8" loc="43:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f929a7a18c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f929a7a1c18"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f929a7a1da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f929a79a780" loc="48:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f929a79a780"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f929a79aad0"/>
        <function-ref name="configure" scoped="" ref="0x7f929a79ac58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f929a79a020" loc="46:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f929a79a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f929a79a370"/>
        <function-ref name="txDone" scoped="" ref="0x7f929a79a4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f929a7a2bd0" loc="42:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f929a7a2bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f929a7a1020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f929a7a11a8"/>
        <function-ref name="request" scoped="" ref="0x7f929a7a1330"/>
        <function-ref name="granted" scoped="" ref="0x7f929a7a14b8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f929a7a1640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f929a79f7c0" loc="45:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f929a79f7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f929a79fb10"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f929a79fc98"/>
        <function-ref name="setUctl" scoped="" ref="0x7f929a79fe20"/>
        <function-ref name="enableUart" scoped="" ref="0x7f929a79e020"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f929a79e1a8"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f929a79e330"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f929a79e4b8"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f929a79e640"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f929a79e7c8"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f929a79e950"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f929a79ead8"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f929a79ec60"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f929a79ede8"/>
        <function-ref name="getUbr" scoped="" ref="0x7f929a79d120"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f929a79d2a8"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f929a79d430"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f929a79d5b8"/>
        <function-ref name="isUart" scoped="" ref="0x7f929a79d740"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f929a79d8c8"/>
        <function-ref name="isSpi" scoped="" ref="0x7f929a79da50"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f929a79dbd8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f929a79dd60"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f929a79c020"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f929a79c1a8"/>
        <function-ref name="getMode" scoped="" ref="0x7f929a79c330"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f929a79c6b8"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f929a79c840"/>
        <function-ref name="setUbr" scoped="" ref="0x7f929a79c9c8"/>
        <function-ref name="tx" scoped="" ref="0x7f929a79cb50"/>
        <function-ref name="getUctl" scoped="" ref="0x7f929a79ccd8"/>
        <function-ref name="disableUart" scoped="" ref="0x7f929a79ce60"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f929a79b020"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f929a79b1a8"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f929a79b330"/>
        <function-ref name="rx" scoped="" ref="0x7f929a79b4b8"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f929a79b640"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f929a79b7c8"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f929a79b950"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f929a79bad8"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f929a79bc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f929a79f060" loc="44:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f929a79f060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f929a79f3b0"/>
        <function-ref name="userId" scoped="" ref="0x7f929a79f538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f929b4b0848" loc="42:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f929b4b0848"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f929b4b0b98"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f929b4b0d20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f929b4aed80" loc="45:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f929b4aed80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f929b4ad170"/>
        <function-ref name="configure" scoped="" ref="0x7f929b4ad2f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f929b4b2910" loc="40:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f929b4b2910"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f929b4b2c60"/>
        <function-ref name="txDone" scoped="" ref="0x7f929b4b2de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f929b4b1608" loc="41:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f929b4b1608"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f929b4b1958"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f929b4b1ae0"/>
        <function-ref name="request" scoped="" ref="0x7f929b4b1c68"/>
        <function-ref name="granted" scoped="" ref="0x7f929b4b1df0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f929b4b0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f929b4ae080" loc="43:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f929b4ae080"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f929b4ae3d0"/>
        <function-ref name="userId" scoped="" ref="0x7f929b4ae558"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f929b4aa2a8" loc="43:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f929b4aa2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f929b4aa5f8"/>
        <function-ref name="userId" scoped="" ref="0x7f929b4aa780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f929b4ac480" loc="39:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f929b4ac480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f929b4ac7f0"/>
        <function-ref name="txDone" scoped="" ref="0x7f929b4ac978"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7f929b4abbd8" loc="42:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f929b4abbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f929b4aa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f929b4acd60" loc="40:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f929b4acd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f929b4ab170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7f929b4ab438" loc="41:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7f929b4ab438"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f929b4ab788"/>
        <function-ref name="txDone" scoped="" ref="0x7f929b4ab910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f929b4a6af8" loc="92:/home/kai/wsnpr/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f929b4a6af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f929b4a6e68"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f929b4a5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f929b4a46d8" loc="96:/home/kai/wsnpr/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f929b4a46d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f929b4a4a48"/>
        <function-ref name="configure" scoped="" ref="0x7f929b4a4bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f929b4a5268" loc="93:/home/kai/wsnpr/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f929b4a5268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f929b4a55b8"/>
        <function-ref name="requested" scoped="" ref="0x7f929b4a5740"/>
        <function-ref name="granted" scoped="" ref="0x7f929b4a58c8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f929b4a5a50"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f929b4a5bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f929b4a7d80" loc="91:/home/kai/wsnpr/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f929b4a7d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f929b4a6170"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f929b4a62f8"/>
        <function-ref name="request" scoped="" ref="0x7f929b4a6480"/>
        <function-ref name="granted" scoped="" ref="0x7f929b4a6608"/>
        <function-ref name="isOwner" scoped="" ref="0x7f929b4a6790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f929b4a5e20" loc="94:/home/kai/wsnpr/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f929b4a5e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f929b4a41a8"/>
        <function-ref name="userId" scoped="" ref="0x7f929b4a4330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f929a73a080" loc="44:/home/kai/wsnpr/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f929a73a080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f929a73a3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f929a73a658" loc="45:/home/kai/wsnpr/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f929a73a658"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f929a73a9a8"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f929a73ab30"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f929a73acb8"/>
        <function-ref name="dequeue" scoped="" ref="0x7f929a73ae40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f929a736388" loc="55:/home/kai/wsnpr/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f929a736388"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f929a7366f8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f929a736880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f929a734020" loc="60:/home/kai/wsnpr/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f929a734020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f929a734390"/>
        <function-ref name="configure" scoped="" ref="0x7f929a734518"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f929a7347a0" loc="61:/home/kai/wsnpr/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f929a7347a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f929a734af0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f929a734c78"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f929a734e00"/>
        <function-ref name="dequeue" scoped="" ref="0x7f929a733020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f929a736ac8" loc="56:/home/kai/wsnpr/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f929a736ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f929a736e18"/>
        <function-ref name="requested" scoped="" ref="0x7f929a735020"/>
        <function-ref name="granted" scoped="" ref="0x7f929a7351a8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f929a735330"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f929a7354b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f929a733268" loc="62:/home/kai/wsnpr/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f929a733268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f929a7335b8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f929a733740"/>
        <function-ref name="led1On" scoped="" ref="0x7f929a7338c8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f929a733a50"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f929a733bd8"/>
        <function-ref name="get" scoped="" ref="0x7f929a733d60"/>
        <function-ref name="led1Off" scoped="" ref="0x7f929a731020"/>
        <function-ref name="led0On" scoped="" ref="0x7f929a731640"/>
        <function-ref name="set" scoped="" ref="0x7f929a731330"/>
        <function-ref name="led2On" scoped="" ref="0x7f929a7311a8"/>
        <function-ref name="led2Off" scoped="" ref="0x7f929a7314b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f929a737668" loc="54:/home/kai/wsnpr/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f929a737668"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f929a7379d8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f929a737b60"/>
        <function-ref name="request" scoped="" ref="0x7f929a737ce8"/>
        <function-ref name="granted" scoped="" ref="0x7f929a737e70"/>
        <function-ref name="isOwner" scoped="" ref="0x7f929a736020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f929a735700" loc="57:/home/kai/wsnpr/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f929a735700"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f929a735a50"/>
        <function-ref name="userId" scoped="" ref="0x7f929a735bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f929a731908" loc="75:/home/kai/wsnpr/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7f929a731908"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f929a731c58"/>
        <function-ref name="runTask" scoped="" ref="0x7f929a731de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f929b4a0b98" loc="72:/home/kai/wsnpr/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f929b4a0b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f929b48a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f929b48a268" loc="73:/home/kai/wsnpr/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f929b48a268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f929b48a5b8"/>
        <function-ref name="requested" scoped="" ref="0x7f929b48a740"/>
        <function-ref name="granted" scoped="" ref="0x7f929b48a8c8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f929b48aa50"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f929b48abd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f929b4a0478" loc="70:/home/kai/wsnpr/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f929b4a0478"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f929b4a07c8"/>
        <function-ref name="stop" scoped="" ref="0x7f929b4a0950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f929b48ae20" loc="74:/home/kai/wsnpr/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f929b48ae20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f929b4891a8"/>
        <function-ref name="userId" scoped="" ref="0x7f929b489330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f929a703d20" loc="62:/home/kai/wsnpr/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f929a703d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f929a7020a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f929a7022e8" loc="63:/home/kai/wsnpr/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f929a7022e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f929a702638"/>
        <function-ref name="requested" scoped="" ref="0x7f929a7027c0"/>
        <function-ref name="granted" scoped="" ref="0x7f929a702948"/>
        <function-ref name="isOwner" scoped="" ref="0x7f929a702ad0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f929a702c58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f929a703600" loc="60:/home/kai/wsnpr/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f929a703600"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f929a703950"/>
        <function-ref name="stop" scoped="" ref="0x7f929a703ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f929a701020" loc="64:/home/kai/wsnpr/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f929a701020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f929a701370"/>
        <function-ref name="userId" scoped="" ref="0x7f929a7014f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430UartConfigure" ref="0x7f929b46b020" loc="3:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7f929b46b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f929b46b370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f929b46b650" loc="4:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f929b46b650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f929b46b9a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f929b46bb28"/>
        <function-ref name="request" scoped="" ref="0x7f929b46bcb0"/>
        <function-ref name="granted" scoped="" ref="0x7f929b46be38"/>
        <function-ref name="isOwner" scoped="" ref="0x7f929b46a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f929b46e670" loc="2:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f929b46e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f929b46e9c0"/>
        <function-ref name="stop" scoped="" ref="0x7f929b46eb48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x7f929b457020" loc="47:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Info" scoped="" ref="0x7f929b457020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7f929b457370"/>
        <function-ref name="offset" scoped="" ref="0x7f929b4574f8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7f929b457680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f929b43f128" loc="45:/home/kai/wsnpr/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="RssiBaseAppC.LaserTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f929b43f128"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f929c8d4828"/>
            <typename><typedef-ref name="TMilli" ref="0x7f929c8d4b80"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f929b43c5f0"/>
        <function-ref name="fired" scoped="" ref="0x7f929b43ea48"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f929b43d8c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f929b43d470"/>
        <function-ref name="getdt" scoped="" ref="0x7f929b43b020"/>
        <function-ref name="gett0" scoped="" ref="0x7f929b43ca40"/>
        <function-ref name="isRunning" scoped="" ref="0x7f929b43d020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f929b43fc70"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f929b43c020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f929b43e158"/>
        <function-ref name="stop" scoped="" ref="0x7f929b43e5f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f929b4373b0" loc="42:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/chips/s1087/HamamatsuS1087ParC.nc">
      <component-ref qname="RssiBaseAppC.LaserSensor"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Read" scoped="" ref="0x7f929b4373b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929b060020"/>
        <function-ref name="readDone" scoped="" ref="0x7f929b060470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7f929b060b10" loc="43:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/chips/s1087/HamamatsuS1087ParC.nc">
      <component-ref qname="RssiBaseAppC.LaserSensor"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x7f929b060b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7f929b05d4c0"/>
        <function-ref name="postBuffer" scoped="" ref="0x7f929b05e6f0"/>
        <function-ref name="read" scoped="" ref="0x7f929b05d020"/>
        <function-ref name="readDone" scoped="" ref="0x7f929b05c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DeviceMetadata" ref="0x7f929b438c38" loc="41:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/chips/s1087/HamamatsuS1087ParC.nc">
      <component-ref qname="RssiBaseAppC.LaserSensor"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DeviceMetadata" scoped="" ref="0x7f929b438c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x7f929b437020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f929a6f6a78" loc="48:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/AdcReadClientC.nc">
      <component-ref qname="RssiBaseAppC.LaserSensor.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Read" scoped="" ref="0x7f929a6f6a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929a6f5620"/>
        <function-ref name="readDone" scoped="" ref="0x7f929a6f5a70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7f929a6f31d8" loc="49:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/AdcReadClientC.nc">
      <component-ref qname="RssiBaseAppC.LaserSensor.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7f929a6f31d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f929b42cb18"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f929b42c250"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f929a6f3d58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResourceReadNow" ref="0x7f929b3f9020" loc="46:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubResourceReadNow" scoped="" ref="0x7f929b3f9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f929b3f9370"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f929b3f94f8"/>
        <function-ref name="request" scoped="" ref="0x7f929b3f9680"/>
        <function-ref name="granted" scoped="" ref="0x7f929b3f9808"/>
        <function-ref name="isOwner" scoped="" ref="0x7f929b3f9990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f929b40c020" loc="38:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Read" scoped="" ref="0x7f929b40c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929b40cb68"/>
        <function-ref name="readDone" scoped="" ref="0x7f929b40b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x7f929b407d48" loc="39:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadNow" scoped="" ref="0x7f929b407d48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f929b40a8f0"/>
        <function-ref name="readDone" scoped="" ref="0x7f929b40ad78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceReadNow" ref="0x7f929b409968" loc="40:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceReadNow" scoped="" ref="0x7f929b409968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f929b409cb8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f929b409e40"/>
        <function-ref name="request" scoped="" ref="0x7f929b3fc020"/>
        <function-ref name="granted" scoped="" ref="0x7f929b3fc1a8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f929b3fc330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f929b3f84f8" loc="48:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Config" scoped="" ref="0x7f929b3f84f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f929b42cb18"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f929b42c250"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f929b3f70c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SingleChannel" ref="0x7f929b3e6ab8" loc="49:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0x7f929b3e6ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f929b3e6e08"/>
        <function-ref name="configureSingle" scoped="" ref="0x7f929b3f6020"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7f929b3f61a8"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7f929b3f6330"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7f929b3f64b8"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7f929b3f6640"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7f929b3f67c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceRead" ref="0x7f929b3fcc48" loc="44:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRead" scoped="" ref="0x7f929b3fcc48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f929b3fb020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f929b3fb1a8"/>
        <function-ref name="request" scoped="" ref="0x7f929b3fb330"/>
        <function-ref name="granted" scoped="" ref="0x7f929b3fb4b8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f929b3fb640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readDone" ref="0x7f929b3ca590" loc="136:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="readDone" scoped="" ref="0x7f929b3ca590"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f929b3ca8e0"/>
        <function-ref name="runTask" scoped="" ref="0x7f929b3caa68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12MultiChannel" ref="0x7f929a6e7c18" loc="48:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="RssiBaseAppC.LaserSensor.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7f929a6e7c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f929a6e6020"/>
        <function-ref name="configure" scoped="" ref="0x7f929a6e61a8"/>
        <function-ref name="dataReady" scoped="" ref="0x7f929a6e6330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12SingleChannel" ref="0x7f929a6e8cb8" loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="RssiBaseAppC.LaserSensor.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f929a6e8cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f929a6e70a0"/>
        <function-ref name="configureSingle" scoped="" ref="0x7f929a6e7228"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7f929a6e73b0"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7f929a6e7538"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7f929a6e76c0"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7f929a6e7848"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7f929a6e79d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12Overflow" ref="0x7f929a6e6578" loc="49:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="RssiBaseAppC.LaserSensor.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7f929a6e6578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x7f929a6e68c8"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x7f929a6e6a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7f929a6e6e50" loc="51:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="RssiBaseAppC.LaserSensor.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7f929a6e6e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f929b42cb18"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f929b42c250"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f929a6e5a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f929a6e8100" loc="46:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="RssiBaseAppC.LaserSensor.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f929a6e8100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f929a6e8450"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f929a6e85d8"/>
        <function-ref name="request" scoped="" ref="0x7f929a6e8760"/>
        <function-ref name="granted" scoped="" ref="0x7f929a6e88e8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f929a6e8a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MultiChannel" ref="0x7f929b3903c8" loc="42:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MultiChannel" scoped="" ref="0x7f929b3903c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f929b390718"/>
        <function-ref name="configure" scoped="" ref="0x7f929b3908a0"/>
        <function-ref name="dataReady" scoped="" ref="0x7f929b390a28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DMAExtension" ref="0x7f929b38e1c8" loc="44:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DMAExtension" scoped="" ref="0x7f929b38e1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f929b38e518"/>
        <function-ref name="stop" scoped="" ref="0x7f929b38e6a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Overflow" ref="0x7f929b38f300" loc="43:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f929b38f300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x7f929b38f650"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x7f929b38f7d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SingleChannel" ref="0x7f929b393db0" loc="41:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0x7f929b393db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f929b392170"/>
        <function-ref name="configureSingle" scoped="" ref="0x7f929b3922f8"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7f929b392480"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7f929b392608"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7f929b392790"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7f929b392918"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7f929b392aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f929b398ab0" loc="40:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f929b398ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f929b398e00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f929b393020"/>
        <function-ref name="request" scoped="" ref="0x7f929b3931a8"/>
        <function-ref name="granted" scoped="" ref="0x7f929b393330"/>
        <function-ref name="isOwner" scoped="" ref="0x7f929b3934b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MultiChannel" ref="0x7f929b389900" loc="42:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MultiChannel" scoped="" ref="0x7f929b389900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f929b389c50"/>
        <function-ref name="configure" scoped="" ref="0x7f929b389dd8"/>
        <function-ref name="dataReady" scoped="" ref="0x7f929b387020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAdc12" ref="0x7f929b3785f0" loc="48:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplAdc12" scoped="" ref="0x7f929b3785f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAdc12"/>
      </instance>
      <interface-functions>
        <function-ref name="getCtl0" scoped="" ref="0x7f929b378940"/>
        <function-ref name="getMCtl" scoped="" ref="0x7f929b378ac8"/>
        <function-ref name="resetIFGs" scoped="" ref="0x7f929b378c50"/>
        <function-ref name="isBusy" scoped="" ref="0x7f929b378dd8"/>
        <function-ref name="conversionDone" scoped="" ref="0x7f929b384020"/>
        <function-ref name="getCtl1" scoped="" ref="0x7f929b3841a8"/>
        <function-ref name="setMCtl" scoped="" ref="0x7f929b384330"/>
        <function-ref name="startConversion" scoped="" ref="0x7f929b3844b8"/>
        <function-ref name="setCtl0" scoped="" ref="0x7f929b384640"/>
        <function-ref name="getMem" scoped="" ref="0x7f929b3847c8"/>
        <function-ref name="setIEFlags" scoped="" ref="0x7f929b384950"/>
        <function-ref name="getIEFlags" scoped="" ref="0x7f929b384ad8"/>
        <function-ref name="stopConversion" scoped="" ref="0x7f929b384c60"/>
        <function-ref name="enableConversion" scoped="" ref="0x7f929b383020"/>
        <function-ref name="setCtl1" scoped="" ref="0x7f929b3831a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port64" ref="0x7f929b36a938" loc="58:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7f929b36a938"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929b36ac88"/>
        <function-ref name="isInput" scoped="" ref="0x7f929b36ae10"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929b369020"/>
        <function-ref name="toggle" scoped="" ref="0x7f929b3691a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929b369330"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929b3694b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929b369640"/>
        <function-ref name="get" scoped="" ref="0x7f929b3697c8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929b369950"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929b369ad8"/>
        <function-ref name="set" scoped="" ref="0x7f929b369c60"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929b369de8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929b368020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929b3682a8"/>
        <function-ref name="clr" scoped="" ref="0x7f929b368430"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CompareA1" ref="0x7f929b3720c0" loc="53:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x7f929b3720c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f929b372410"/>
        <function-ref name="setEvent" scoped="" ref="0x7f929b372598"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f929b372720"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f929b3728a8"/>
        <function-ref name="fired" scoped="" ref="0x7f929b372a30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ControlA0" ref="0x7f929b376b68" loc="50:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x7f929b376b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f929b375020"/>
        <function-ref name="getControl" scoped="" ref="0x7f929b3751a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f929b375330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f929b3754b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f929b375640"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f929b3757c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f929b375950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f929b375ad8"/>
        <function-ref name="setControl" scoped="" ref="0x7f929b375c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DMAExtension" ref="0x7f929b386670" loc="44:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DMAExtension" scoped="" ref="0x7f929b386670"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f929b3869c0"/>
        <function-ref name="stop" scoped="" ref="0x7f929b386b48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port62" ref="0x7f929b36ec48" loc="56:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7f929b36ec48"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929b36d020"/>
        <function-ref name="isInput" scoped="" ref="0x7f929b36d1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929b36d330"/>
        <function-ref name="toggle" scoped="" ref="0x7f929b36d4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929b36d640"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929b36d7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929b36d950"/>
        <function-ref name="get" scoped="" ref="0x7f929b36dad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929b36dc60"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929b36dde8"/>
        <function-ref name="set" scoped="" ref="0x7f929b36c020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929b36c1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929b36c330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929b36c5b8"/>
        <function-ref name="clr" scoped="" ref="0x7f929b36c740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Overflow" ref="0x7f929b3878b0" loc="43:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f929b3878b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x7f929b387c00"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x7f929b387d88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port67" ref="0x7f929b364528" loc="61:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7f929b364528"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929b364878"/>
        <function-ref name="isInput" scoped="" ref="0x7f929b364a00"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929b364b88"/>
        <function-ref name="toggle" scoped="" ref="0x7f929b364d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929b363020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929b3631a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929b363330"/>
        <function-ref name="get" scoped="" ref="0x7f929b3634b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929b363640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929b3637c8"/>
        <function-ref name="set" scoped="" ref="0x7f929b363950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929b363ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929b363c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929b362020"/>
        <function-ref name="clr" scoped="" ref="0x7f929b3621a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port60" ref="0x7f929b372db0" loc="54:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7f929b372db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929b3712e8"/>
        <function-ref name="isInput" scoped="" ref="0x7f929b371470"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929b3715f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f929b371780"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929b371908"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929b371a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929b371c18"/>
        <function-ref name="get" scoped="" ref="0x7f929b371da0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929b370020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929b3701a8"/>
        <function-ref name="set" scoped="" ref="0x7f929b370330"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929b3704b8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929b370640"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929b3708c8"/>
        <function-ref name="clr" scoped="" ref="0x7f929b370a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f929b38b5f8" loc="40:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f929b38b5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f929b38b948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port65" ref="0x7f929b3687b0" loc="59:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7f929b3687b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929b368b00"/>
        <function-ref name="isInput" scoped="" ref="0x7f929b368c88"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929b368e10"/>
        <function-ref name="toggle" scoped="" ref="0x7f929b367020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929b3671a8"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929b367330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929b3674b8"/>
        <function-ref name="get" scoped="" ref="0x7f929b367640"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929b3677c8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929b367950"/>
        <function-ref name="set" scoped="" ref="0x7f929b367ad8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929b367c60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929b367de8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929b366120"/>
        <function-ref name="clr" scoped="" ref="0x7f929b3662a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerA" ref="0x7f929b3834e0" loc="49:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7f929b3834e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f929b383830"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f929b3839b8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f929b383b40"/>
        <function-ref name="get" scoped="" ref="0x7f929b383cc8"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f929b383e50"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f929b376020"/>
        <function-ref name="getMode" scoped="" ref="0x7f929b3761a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f929b376330"/>
        <function-ref name="overflow" scoped="" ref="0x7f929b3764b8"/>
        <function-ref name="setMode" scoped="" ref="0x7f929b376640"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f929b3767c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADCArbiterInfo" ref="0x7f929b385020" loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCArbiterInfo" scoped="" ref="0x7f929b385020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f929b385370"/>
        <function-ref name="userId" scoped="" ref="0x7f929b3854f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ControlA1" ref="0x7f929b374060" loc="51:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x7f929b374060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f929b3743b0"/>
        <function-ref name="getControl" scoped="" ref="0x7f929b374538"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f929b3746c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f929b374848"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f929b3749d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f929b374b58"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f929b374ce0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f929b374e68"/>
        <function-ref name="setControl" scoped="" ref="0x7f929b373020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SingleChannel" ref="0x7f929b38a270" loc="41:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0x7f929b38a270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f929b38a5c0"/>
        <function-ref name="configureSingle" scoped="" ref="0x7f929b38a748"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7f929b38a8d0"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7f929b38aa58"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7f929b38abe0"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7f929b38ad68"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7f929b389020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port63" ref="0x7f929b36cac0" loc="57:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7f929b36cac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929b36ce10"/>
        <function-ref name="isInput" scoped="" ref="0x7f929b36b020"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929b36b1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f929b36b330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929b36b4b8"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929b36b640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929b36b7c8"/>
        <function-ref name="get" scoped="" ref="0x7f929b36b950"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929b36bad8"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929b36bc60"/>
        <function-ref name="set" scoped="" ref="0x7f929b36bde8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929b36a020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929b36a1a8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929b36a430"/>
        <function-ref name="clr" scoped="" ref="0x7f929b36a5b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CompareA0" ref="0x7f929b373390" loc="52:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x7f929b373390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f929b3736e0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f929b373868"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f929b3739f0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f929b373b78"/>
        <function-ref name="fired" scoped="" ref="0x7f929b373d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port61" ref="0x7f929b370dd0" loc="55:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7f929b370dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929b36f170"/>
        <function-ref name="isInput" scoped="" ref="0x7f929b36f2f8"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929b36f480"/>
        <function-ref name="toggle" scoped="" ref="0x7f929b36f608"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929b36f790"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929b36f918"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929b36faa0"/>
        <function-ref name="get" scoped="" ref="0x7f929b36fc28"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929b36fdb0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929b36e020"/>
        <function-ref name="set" scoped="" ref="0x7f929b36e1a8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929b36e330"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929b36e4b8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929b36e740"/>
        <function-ref name="clr" scoped="" ref="0x7f929b36e8c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port66" ref="0x7f929b366628" loc="60:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7f929b366628"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f929b366978"/>
        <function-ref name="isInput" scoped="" ref="0x7f929b366b00"/>
        <function-ref name="setResistor" scoped="" ref="0x7f929b366c88"/>
        <function-ref name="toggle" scoped="" ref="0x7f929b366e10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f929b365020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f929b3651a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f929b365330"/>
        <function-ref name="get" scoped="" ref="0x7f929b3654b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f929b365640"/>
        <function-ref name="getRaw" scoped="" ref="0x7f929b3657c8"/>
        <function-ref name="set" scoped="" ref="0x7f929b365950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f929b365ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f929b365c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f929b364020"/>
        <function-ref name="clr" scoped="" ref="0x7f929b3641a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAdc12" ref="0x7f929b2ae8e0" loc="46:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/HplAdc12P.nc">
      <component-ref qname="HplAdc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplAdc12" scoped="" ref="0x7f929b2ae8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAdc12"/>
      </instance>
      <interface-functions>
        <function-ref name="getCtl0" scoped="" ref="0x7f929b2aec30"/>
        <function-ref name="getMCtl" scoped="" ref="0x7f929b2aedb8"/>
        <function-ref name="resetIFGs" scoped="" ref="0x7f929b2ab020"/>
        <function-ref name="isBusy" scoped="" ref="0x7f929b2ab1a8"/>
        <function-ref name="conversionDone" scoped="" ref="0x7f929b2ab330"/>
        <function-ref name="getCtl1" scoped="" ref="0x7f929b2ab4b8"/>
        <function-ref name="setMCtl" scoped="" ref="0x7f929b2ab640"/>
        <function-ref name="startConversion" scoped="" ref="0x7f929b2ab7c8"/>
        <function-ref name="setCtl0" scoped="" ref="0x7f929b2ab950"/>
        <function-ref name="getMem" scoped="" ref="0x7f929b2abad8"/>
        <function-ref name="setIEFlags" scoped="" ref="0x7f929b2abc60"/>
        <function-ref name="getIEFlags" scoped="" ref="0x7f929b2abde8"/>
        <function-ref name="stopConversion" scoped="" ref="0x7f929b2aa020"/>
        <function-ref name="enableConversion" scoped="" ref="0x7f929b2aa2a8"/>
        <function-ref name="setCtl1" scoped="" ref="0x7f929b2aa430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f929b220510" loc="86:/home/kai/wsnpr/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f929b220510"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f929b220880"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f929b220a08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f929b21f550" loc="89:/home/kai/wsnpr/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f929b21f550"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f929b21f8c0"/>
        <function-ref name="configure" scoped="" ref="0x7f929b21fa48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f929b222750" loc="85:/home/kai/wsnpr/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f929b222750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f929b222ac0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f929b222c48"/>
        <function-ref name="request" scoped="" ref="0x7f929b222dd0"/>
        <function-ref name="granted" scoped="" ref="0x7f929b220020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f929b2201a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f929b220c50" loc="87:/home/kai/wsnpr/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f929b220c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f929b21f020"/>
        <function-ref name="userId" scoped="" ref="0x7f929b21f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f929a6c4de0" loc="44:/home/kai/wsnpr/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f929a6c4de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f929a6c3170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x7f929a6c33f8" loc="45:/home/kai/wsnpr/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RoundRobinQueue" scoped="" ref="0x7f929a6c33f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f929a6c3748"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f929a6c38d0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f929a6c3a58"/>
        <function-ref name="dequeue" scoped="" ref="0x7f929a6c3be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f929a6c1e78" loc="52:/home/kai/wsnpr/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f929a6c1e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f929a6c0218"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f929a6c03a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f929a6bf020" loc="56:/home/kai/wsnpr/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f929a6bf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f929a6bf390"/>
        <function-ref name="configure" scoped="" ref="0x7f929a6bf518"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f929a6bf7a0" loc="57:/home/kai/wsnpr/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f929a6bf7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f929a6bfaf0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f929a6bfc78"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f929a6bfe00"/>
        <function-ref name="dequeue" scoped="" ref="0x7f929a6be020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f929a6c1180" loc="51:/home/kai/wsnpr/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f929a6c1180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f929a6c14f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f929a6c1678"/>
        <function-ref name="request" scoped="" ref="0x7f929a6c1800"/>
        <function-ref name="granted" scoped="" ref="0x7f929a6c1988"/>
        <function-ref name="isOwner" scoped="" ref="0x7f929a6c1b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f929a6c05e8" loc="53:/home/kai/wsnpr/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f929a6c05e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f929a6c0938"/>
        <function-ref name="userId" scoped="" ref="0x7f929a6c0ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f929a6be2e8" loc="68:/home/kai/wsnpr/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7f929a6be2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f929a6be638"/>
        <function-ref name="runTask" scoped="" ref="0x7f929a6be7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f929b200990" loc="55:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <component-ref qname="Msp430RefVoltArbiterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Config" scoped="" ref="0x7f929b200990"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f929b42cb18"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f929b42c250"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f929b1ff560"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcResource" ref="0x7f929b2014f8" loc="54:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <component-ref qname="Msp430RefVoltArbiterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcResource" scoped="" ref="0x7f929b2014f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f929b201848"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f929b2019d0"/>
        <function-ref name="request" scoped="" ref="0x7f929b201b58"/>
        <function-ref name="granted" scoped="" ref="0x7f929b201ce0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f929b201e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ClientResource" ref="0x7f929b202270" loc="52:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <component-ref qname="Msp430RefVoltArbiterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ClientResource" scoped="" ref="0x7f929b202270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f929b2025c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f929b202748"/>
        <function-ref name="request" scoped="" ref="0x7f929b2028d0"/>
        <function-ref name="granted" scoped="" ref="0x7f929b202a58"/>
        <function-ref name="isOwner" scoped="" ref="0x7f929b202be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAdc12" ref="0x7f929b1fab28" loc="43:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplAdc12" scoped="" ref="0x7f929b1fab28"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAdc12"/>
      </instance>
      <interface-functions>
        <function-ref name="getCtl0" scoped="" ref="0x7f929b1fae78"/>
        <function-ref name="getMCtl" scoped="" ref="0x7f929b1f9030"/>
        <function-ref name="resetIFGs" scoped="" ref="0x7f929b1f91b8"/>
        <function-ref name="isBusy" scoped="" ref="0x7f929b1f9340"/>
        <function-ref name="conversionDone" scoped="" ref="0x7f929b1f94c8"/>
        <function-ref name="getCtl1" scoped="" ref="0x7f929b1f9650"/>
        <function-ref name="setMCtl" scoped="" ref="0x7f929b1f97d8"/>
        <function-ref name="startConversion" scoped="" ref="0x7f929b1f9960"/>
        <function-ref name="setCtl0" scoped="" ref="0x7f929b1f9ae8"/>
        <function-ref name="getMem" scoped="" ref="0x7f929b1f9c70"/>
        <function-ref name="setIEFlags" scoped="" ref="0x7f929b1f9df8"/>
        <function-ref name="getIEFlags" scoped="" ref="0x7f929b1f8020"/>
        <function-ref name="stopConversion" scoped="" ref="0x7f929b1f81a8"/>
        <function-ref name="enableConversion" scoped="" ref="0x7f929b1f8430"/>
        <function-ref name="setCtl1" scoped="" ref="0x7f929b1f85b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SwitchOffTimer" ref="0x7f929b1f3c70" loc="45:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SwitchOffTimer" scoped="" ref="0x7f929b1f3c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f929c8d4828"/>
            <typename><typedef-ref name="TMilli" ref="0x7f929c8d4b80"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f929b1efe78"/>
        <function-ref name="fired" scoped="" ref="0x7f929b1f15a8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f929b1ef2d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f929b1f1e48"/>
        <function-ref name="getdt" scoped="" ref="0x7f929b1ee748"/>
        <function-ref name="gett0" scoped="" ref="0x7f929b1ee2f8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f929b1f19f8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f929b1f27e8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f929b1ef8a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f929b1f2c88"/>
        <function-ref name="stop" scoped="" ref="0x7f929b1f1158"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RefVolt_2_5V" ref="0x7f929b1fa020" loc="39:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_2_5V" scoped="" ref="0x7f929b1fa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f929b1fa370"/>
        <function-ref name="stopDone" scoped="" ref="0x7f929b1fa4f8"/>
        <function-ref name="start" scoped="" ref="0x7f929b1fa680"/>
        <function-ref name="stop" scoped="" ref="0x7f929b1fa808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SwitchOffSettleTimer" ref="0x7f929b1eedb0" loc="46:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SwitchOffSettleTimer" scoped="" ref="0x7f929b1eedb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f929c8d4828"/>
            <typename><typedef-ref name="TMilli" ref="0x7f929c8d4b80"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f929b1e9088"/>
        <function-ref name="fired" scoped="" ref="0x7f929b1ec708"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f929b1ea470"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f929b1ea020"/>
        <function-ref name="getdt" scoped="" ref="0x7f929b1e9928"/>
        <function-ref name="gett0" scoped="" ref="0x7f929b1e94d8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f929b1ecb58"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f929b1ed930"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f929b1eaa40"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f929b1eddd0"/>
        <function-ref name="stop" scoped="" ref="0x7f929b1ec2b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RefVolt_1_5V" ref="0x7f929b1fb368" loc="38:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_1_5V" scoped="" ref="0x7f929b1fb368"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f929b1fb6b8"/>
        <function-ref name="stopDone" scoped="" ref="0x7f929b1fb840"/>
        <function-ref name="start" scoped="" ref="0x7f929b1fb9c8"/>
        <function-ref name="stop" scoped="" ref="0x7f929b1fbb50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SwitchOnTimer" ref="0x7f929b1f8a48" loc="44:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SwitchOnTimer" scoped="" ref="0x7f929b1f8a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f929c8d4828"/>
            <typename><typedef-ref name="TMilli" ref="0x7f929c8d4b80"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f929b1f5d60"/>
        <function-ref name="fired" scoped="" ref="0x7f929b1f6470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f929b1f51c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f929b1f6d10"/>
        <function-ref name="getdt" scoped="" ref="0x7f929b1f3648"/>
        <function-ref name="gett0" scoped="" ref="0x7f929b1f31f8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f929b1f68c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f929b1f7620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f929b1f5790"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f929b1f7ac0"/>
        <function-ref name="stop" scoped="" ref="0x7f929b1f6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f929b19c1c8" loc="43:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Config" scoped="" ref="0x7f929b19c1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f929b42cb18"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f929b42c250"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f929b19cd48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RefVolt_2_5V" ref="0x7f929b19fd70" loc="42:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_2_5V" scoped="" ref="0x7f929b19fd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f929b19e0f0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f929b19e278"/>
        <function-ref name="start" scoped="" ref="0x7f929b19e400"/>
        <function-ref name="stop" scoped="" ref="0x7f929b19e588"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcResource" ref="0x7f929b1a04c0" loc="40:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcResource" scoped="" ref="0x7f929b1a04c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f929b1a0810"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f929b1a0998"/>
        <function-ref name="request" scoped="" ref="0x7f929b1a0b20"/>
        <function-ref name="granted" scoped="" ref="0x7f929b1a0ca8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f929b1a0e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ClientResource" ref="0x7f929b1a1208" loc="38:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ClientResource" scoped="" ref="0x7f929b1a1208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f929b1a1558"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f929b1a16e0"/>
        <function-ref name="request" scoped="" ref="0x7f929b1a1868"/>
        <function-ref name="granted" scoped="" ref="0x7f929b1a19f0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f929b1a1b78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="switchOff" ref="0x7f929b19a910" loc="52:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="switchOff" scoped="" ref="0x7f929b19a910"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f929b19ac60"/>
        <function-ref name="runTask" scoped="" ref="0x7f929b19ade8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RefVolt_1_5V" ref="0x7f929b19f200" loc="41:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_1_5V" scoped="" ref="0x7f929b19f200"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f929b19f550"/>
        <function-ref name="stopDone" scoped="" ref="0x7f929b19f6d8"/>
        <function-ref name="start" scoped="" ref="0x7f929b19f860"/>
        <function-ref name="stop" scoped="" ref="0x7f929b19f9e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f929b16de08" loc="45:/home/kai/wsnpr/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="Msp430RefVoltArbiterP.SwitchOnDelayTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f929b16de08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f929c8d4828"/>
            <typename><typedef-ref name="TMilli" ref="0x7f929c8d4b80"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f929b1680c0"/>
        <function-ref name="fired" scoped="" ref="0x7f929b16b798"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f929b16a4d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f929b16a088"/>
        <function-ref name="getdt" scoped="" ref="0x7f929b168960"/>
        <function-ref name="gett0" scoped="" ref="0x7f929b168510"/>
        <function-ref name="isRunning" scoped="" ref="0x7f929b16bbe8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f929b16c9e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f929b16aaa8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f929b16ce80"/>
        <function-ref name="stop" scoped="" ref="0x7f929b16b348"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f929b166350" loc="45:/home/kai/wsnpr/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="Msp430RefVoltArbiterP.SwitchOffDelayTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f929b166350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f929c8d4828"/>
            <typename><typedef-ref name="TMilli" ref="0x7f929c8d4b80"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f929b1626c8"/>
        <function-ref name="fired" scoped="" ref="0x7f929b165db0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f929b164ad8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f929b164688"/>
        <function-ref name="getdt" scoped="" ref="0x7f929b161020"/>
        <function-ref name="gett0" scoped="" ref="0x7f929b162b18"/>
        <function-ref name="isRunning" scoped="" ref="0x7f929b164238"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f929b165020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f929b1620f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f929b1654c0"/>
        <function-ref name="stop" scoped="" ref="0x7f929b165960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f929b160a60" loc="45:/home/kai/wsnpr/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="Msp430RefVoltArbiterP.SwitchOffSettleTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f929b160a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f929c8d4828"/>
            <typename><typedef-ref name="TMilli" ref="0x7f929c8d4b80"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f929b15cd60"/>
        <function-ref name="fired" scoped="" ref="0x7f929b15e470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f929b15c1c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f929b15ed10"/>
        <function-ref name="getdt" scoped="" ref="0x7f929b15b648"/>
        <function-ref name="gett0" scoped="" ref="0x7f929b15b1f8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f929b15e8c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f929b15f620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f929b15c790"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f929b15fac0"/>
        <function-ref name="stop" scoped="" ref="0x7f929b15e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfSub" ref="0x7f929a6d8998" loc="44:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="RssiBaseAppC.LaserSensor.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfSub" scoped="" ref="0x7f929a6d8998"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f929b42cb18"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f929b42c250"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f929a6d7560"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ConfUp" ref="0x7f929a6d7b30" loc="45:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="RssiBaseAppC.LaserSensor.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfUp" scoped="" ref="0x7f929a6d7b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f929b42cb18"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f929b42c250"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f929a6d6728"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7f929a6ed020" loc="49:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <component-ref qname="RssiBaseAppC.LaserSensor.AdcReadStreamClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7f929a6ed020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f929b42cb18"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f929b42c250"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f929a6edba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7f929a6f1358" loc="48:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <component-ref qname="RssiBaseAppC.LaserSensor.AdcReadStreamClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x7f929a6f1358"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7f929a6f0dc8"/>
        <function-ref name="postBuffer" scoped="" ref="0x7f929a6f0020"/>
        <function-ref name="read" scoped="" ref="0x7f929a6f0928"/>
        <function-ref name="readDone" scoped="" ref="0x7f929a6ee830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Adc12SingleChannel" ref="0x7f929b126c08" loc="23:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <component-ref qname="WireAdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f929b126c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f929b125020"/>
        <function-ref name="configureSingle" scoped="" ref="0x7f929b1251a8"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7f929b125330"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7f929b1254b8"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7f929b125640"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7f929b1257c8"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7f929b125950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7f929b127668" loc="22:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <component-ref qname="WireAdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7f929b127668"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f929b42cb18"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f929b42c250"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f929b126220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7f929b12b3f0" loc="20:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <component-ref qname="WireAdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x7f929b12b3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7f929b12adc8"/>
        <function-ref name="postBuffer" scoped="" ref="0x7f929b12a020"/>
        <function-ref name="read" scoped="" ref="0x7f929b12a928"/>
        <function-ref name="readDone" scoped="" ref="0x7f929b128830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f929b1231c8" loc="24:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <component-ref qname="WireAdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f929b1231c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f929b123518"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f929b1236a0"/>
        <function-ref name="request" scoped="" ref="0x7f929b123828"/>
        <function-ref name="granted" scoped="" ref="0x7f929b1239b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f929b123b38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="bufferDone" ref="0x7f929b0efa00" loc="156:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="bufferDone" scoped="" ref="0x7f929b0efa00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f929b0efd50"/>
        <function-ref name="runTask" scoped="" ref="0x7f929b0ee020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readStreamDone" ref="0x7f929b0fc6a8" loc="119:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="readStreamDone" scoped="" ref="0x7f929b0fc6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f929b0fc9f8"/>
        <function-ref name="runTask" scoped="" ref="0x7f929b0fcb80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readStreamFail" ref="0x7f929b0f7b60" loc="135:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="readStreamFail" scoped="" ref="0x7f929b0f7b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f929b0f6020"/>
        <function-ref name="runTask" scoped="" ref="0x7f929b0f61a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f929b117740" loc="54:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f929b117740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f929c8d4828"/>
            <typename><typedef-ref name="TMilli" ref="0x7f929c8d4b80"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f929d8b1020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f929b113020"/>
        <function-ref name="fired" scoped="" ref="0x7f929b115020"/>
        <function-ref name="startAt" scoped="" ref="0x7f929b115930"/>
        <function-ref name="isRunning" scoped="" ref="0x7f929b1154a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f929b1134a8"/>
        <function-ref name="start" scoped="" ref="0x7f929b116578"/>
        <function-ref name="stop" scoped="" ref="0x7f929b116a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f929b11f020" loc="48:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f929b11f020"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7f929cf6a8e0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7f929cf6a8e0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f929b11f370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7f929b1184c0" loc="53:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7f929b1184c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f929b42cb18"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f929b42c250"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f929b117088"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SingleChannel" ref="0x7f929b11bd38" loc="52:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0x7f929b11bd38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f929b11a0d8"/>
        <function-ref name="configureSingle" scoped="" ref="0x7f929b11a260"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7f929b11a3e8"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7f929b11a570"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7f929b11a6f8"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7f929b11a880"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7f929b11aa08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7f929b11fc98" loc="49:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x7f929b11fc98"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7f929b11c5f8"/>
        <function-ref name="postBuffer" scoped="" ref="0x7f929b11e820"/>
        <function-ref name="read" scoped="" ref="0x7f929b11c158"/>
        <function-ref name="readDone" scoped="" ref="0x7f929b11b088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f929b0b41a8" loc="44:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="WireAdcStreamP.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f929b0b41a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f929c8d4828"/>
            <typename><typedef-ref name="TMilli" ref="0x7f929c8d4b80"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f929d8b1020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f929b0b2918"/>
        <function-ref name="fired" scoped="" ref="0x7f929b0b3980"/>
        <function-ref name="startAt" scoped="" ref="0x7f929b0b2310"/>
        <function-ref name="isRunning" scoped="" ref="0x7f929b0b3e08"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f929b0b2da0"/>
        <function-ref name="start" scoped="" ref="0x7f929b0b3020"/>
        <function-ref name="stop" scoped="" ref="0x7f929b0b34f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f929b0b5960" loc="43:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="WireAdcStreamP.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f929b0b5960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f929b0b5cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f929a679e18" loc="44:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f929a679e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f929c8d3020"/>
            <typename><typedef-ref name="T32khz" ref="0x7f929c8d3378"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f929a676628"/>
        <function-ref name="fired" scoped="" ref="0x7f929a677580"/>
        <function-ref name="startAt" scoped="" ref="0x7f929a676020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f929a677a08"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f929a676ab0"/>
        <function-ref name="start" scoped="" ref="0x7f929a678be8"/>
        <function-ref name="stop" scoped="" ref="0x7f929a6770f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f929a679630" loc="43:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f929a679630"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f929a679980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f929a6615b8" loc="41:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f929a6615b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f929a661908"/>
        <function-ref name="setEvent" scoped="" ref="0x7f929a661a90"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f929a661c18"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f929a661da0"/>
        <function-ref name="fired" scoped="" ref="0x7f929a660020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f929a665c48" loc="39:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f929a665c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f929a663020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f929a6631a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f929a663330"/>
        <function-ref name="get" scoped="" ref="0x7f929a6634b8"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f929a663640"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f929a6637c8"/>
        <function-ref name="getMode" scoped="" ref="0x7f929a663950"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f929a663ad8"/>
        <function-ref name="overflow" scoped="" ref="0x7f929a663c60"/>
        <function-ref name="setMode" scoped="" ref="0x7f929a663de8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f929a662020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f929a6622a8" loc="40:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f929a6622a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f929a6625f8"/>
        <function-ref name="getControl" scoped="" ref="0x7f929a662780"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f929a662908"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f929a662a90"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f929a662c18"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f929a662da0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f929a661020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f929a6611a8"/>
        <function-ref name="setControl" scoped="" ref="0x7f929a661330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7f929a657020" loc="49:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f929a657020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f929a657370"/>
        <function-ref name="setEvent" scoped="" ref="0x7f929a6574f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f929a657680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f929a657808"/>
        <function-ref name="fired" scoped="" ref="0x7f929a657990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f929a65a568" loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f929a65a568"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f929a65a8b8"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f929a65aa40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f929a65abc8"/>
        <function-ref name="get" scoped="" ref="0x7f929a65ad50"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f929a659020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f929a6591a8"/>
        <function-ref name="getMode" scoped="" ref="0x7f929a659330"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f929a6594b8"/>
        <function-ref name="overflow" scoped="" ref="0x7f929a659640"/>
        <function-ref name="setMode" scoped="" ref="0x7f929a6597c8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f929a659950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f929a65e4f8" loc="46:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f929a65e4f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f929c8d3020"/>
            <typename><typedef-ref name="T32khz" ref="0x7f929c8d3378"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f929a65bc88"/>
        <function-ref name="fired" scoped="" ref="0x7f929a65dd08"/>
        <function-ref name="startAt" scoped="" ref="0x7f929a65b680"/>
        <function-ref name="isRunning" scoped="" ref="0x7f929a65b1f8"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f929a65a150"/>
        <function-ref name="start" scoped="" ref="0x7f929a65d3a8"/>
        <function-ref name="stop" scoped="" ref="0x7f929a65d880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f929a65fbd8" loc="45:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f929a65fbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f929a65e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f929a659bd8" loc="48:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f929a659bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f929a658020"/>
        <function-ref name="getControl" scoped="" ref="0x7f929a6581a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f929a658330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f929a6584b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f929a658640"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f929a6587c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f929a658950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f929a658ad8"/>
        <function-ref name="setControl" scoped="" ref="0x7f929a658c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f929a673020" loc="61:/home/kai/wsnpr/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f929a673020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f929c8d4828"/>
            <typename><typedef-ref name="TMilli" ref="0x7f929c8d4b80"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f929d8b1020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f929a670690"/>
        <function-ref name="fired" scoped="" ref="0x7f929a6716f8"/>
        <function-ref name="startAt" scoped="" ref="0x7f929a670088"/>
        <function-ref name="isRunning" scoped="" ref="0x7f929a671b80"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f929a670b18"/>
        <function-ref name="start" scoped="" ref="0x7f929a673d70"/>
        <function-ref name="stop" scoped="" ref="0x7f929a671270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f929a66c450" loc="73:/home/kai/wsnpr/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7f929a66c450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f929c8d3020"/>
            <typename><typedef-ref name="T32khz" ref="0x7f929c8d3378"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f929a66aab0"/>
        <function-ref name="fired" scoped="" ref="0x7f929a66bb30"/>
        <function-ref name="startAt" scoped="" ref="0x7f929a66a4a8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f929a66a020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f929a669020"/>
        <function-ref name="start" scoped="" ref="0x7f929a66b1d0"/>
        <function-ref name="stop" scoped="" ref="0x7f929a66b6a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f929a66f1a8" loc="68:/home/kai/wsnpr/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f929a66f1a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f929c8d4828"/>
            <typename><typedef-ref name="TMilli" ref="0x7f929c8d4b80"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f929d8b1020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f929a66e020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f929a66e930"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f929a66e4a8"/>
        <function-ref name="overflow" scoped="" ref="0x7f929a66edb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x7f929b0839d8" loc="26:/home/kai/wsnpr/tinyos-main/tos/system/ArbitratedReadStreamC.nc">
      <component-ref qname="WireAdcStreamP.ArbitrateReadStream"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Service" scoped="" ref="0x7f929b0839d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7f929b0804e0"/>
        <function-ref name="postBuffer" scoped="" ref="0x7f929b081578"/>
        <function-ref name="read" scoped="" ref="0x7f929b080020"/>
        <function-ref name="readDone" scoped="" ref="0x7f929b07e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7f929b0aed58" loc="24:/home/kai/wsnpr/tinyos-main/tos/system/ArbitratedReadStreamC.nc">
      <component-ref qname="WireAdcStreamP.ArbitrateReadStream"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x7f929b0aed58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7f929b084718"/>
        <function-ref name="postBuffer" scoped="" ref="0x7f929b0858f0"/>
        <function-ref name="read" scoped="" ref="0x7f929b084258"/>
        <function-ref name="readDone" scoped="" ref="0x7f929b083198"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f929b07e6b8" loc="27:/home/kai/wsnpr/tinyos-main/tos/system/ArbitratedReadStreamC.nc">
      <component-ref qname="WireAdcStreamP.ArbitrateReadStream"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f929b07e6b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f929b07ea28"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f929b07ebb0"/>
        <function-ref name="request" scoped="" ref="0x7f929b07ed38"/>
        <function-ref name="granted" scoped="" ref="0x7f929b07d020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f929b07d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12MultiChannel" ref="0x7f929a6863f0" loc="48:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="RssiBaseAppC.LaserSensor.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7f929a6863f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f929a686740"/>
        <function-ref name="configure" scoped="" ref="0x7f929a6868c8"/>
        <function-ref name="dataReady" scoped="" ref="0x7f929a686a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12SingleChannel" ref="0x7f929a6873f0" loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="RssiBaseAppC.LaserSensor.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f929a6873f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f929a687740"/>
        <function-ref name="configureSingle" scoped="" ref="0x7f929a6878c8"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7f929a687a50"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7f929a687bd8"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7f929a687d60"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7f929a686020"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7f929a6861a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12Overflow" ref="0x7f929a686c98" loc="49:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="RssiBaseAppC.LaserSensor.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7f929a686c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x7f929a685020"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x7f929a6851a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7f929a6855a8" loc="51:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="RssiBaseAppC.LaserSensor.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7f929a6855a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f929b42cb18"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f929b42c250"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f929a683150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f929a6886d8" loc="46:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="RssiBaseAppC.LaserSensor.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f929a6886d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f929a688a28"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f929a688bb0"/>
        <function-ref name="request" scoped="" ref="0x7f929a688d38"/>
        <function-ref name="granted" scoped="" ref="0x7f929a687020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f929a6871a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfSub" ref="0x7f929a619b28" loc="44:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="RssiBaseAppC.LaserSensor.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfSub" scoped="" ref="0x7f929a619b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f929b42cb18"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f929b42c250"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f929a617728"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ConfUp" ref="0x7f929a617cf8" loc="45:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="RssiBaseAppC.LaserSensor.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfUp" scoped="" ref="0x7f929a617cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f929b42cb18"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f929b42c250"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f929a6168f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AdcConfigure" ref="0x7f929b0679b0" loc="44:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/chips/s1087/HamamatsuS1087ParP.nc">
      <component-ref qname="HamamatsuS1087ParP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7f929b0679b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f929b42cb18"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f929b42c250"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f929b066560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DeviceMetadata" ref="0x7f929b0670c0" loc="43:/home/kai/wsnpr/tinyos-main/tos/platforms/telosa/chips/s1087/HamamatsuS1087ParP.nc">
      <component-ref qname="HamamatsuS1087ParP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DeviceMetadata" scoped="" ref="0x7f929b0670c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x7f929b067410"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/home/kai/wsnpr/tinyos-main/tos/interfaces/Init.nc">
      <documentation loc="34:/home/kai/wsnpr/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f929ca9e598" loc="62:/home/kai/wsnpr/tinyos-main/tos/interfaces/Init.nc">
        <documentation loc="53:/home/kai/wsnpr/tinyos-main/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/home/kai/wsnpr/tinyos-main/tos/interfaces/Boot.nc">
      <documentation loc="42:/home/kai/wsnpr/tinyos-main/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7f929caa0258" loc="60:/home/kai/wsnpr/tinyos-main/tos/interfaces/Boot.nc">
        <documentation loc="51:/home/kai/wsnpr/tinyos-main/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="33:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x7f929ca71020" loc="48:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x7f929ca743e0" loc="43:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x7f929ca73920" loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x7f929ca75d20" loc="42:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x7f929ca74af0" loc="45:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x7f929ca75020" loc="40:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x7f929ca756a0" loc="41:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x7f929ca73258" loc="46:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/home/kai/wsnpr/tinyos-main/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:/home/kai/wsnpr/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7f929cb9f830" loc="62:/home/kai/wsnpr/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/home/kai/wsnpr/tinyos-main/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7f929ceb6450"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x7f929ca23e08" loc="55:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="49:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7f929ca23b98" loc="55:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x7f929ca25448" loc="42:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f929ca6a978"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f929ca69438"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7f929ca22678" loc="57:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x7f929ca204c0" loc="59:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f929cf6b1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x7f929ca234a0" loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7f929ca22d50" loc="58:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7f929ca25b80" loc="43:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f929cf6b1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x7f929ca24328" loc="44:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7f929ca24cf8" loc="46:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f929ca6a978"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f929ca69438"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f929ca24a88" loc="46:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f929ca6a978"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f929ca69438"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="39:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="33:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7f929ca15470" loc="44:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="41:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x7f929ca139e0" loc="84:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="75:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f929cf6b1d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x7f929ca13770" loc="84:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f929cf6b1d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f929ca11588" loc="91:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="86:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f929ca11318" loc="91:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f929ca13020" loc="73:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f929ca14728" loc="68:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="58:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; TI calls this overflow but it is actually an overrun.&#10; If COV is set it says that another capture has occurred&#10; prior to reading a previous capture.  The previous value&#10; of a capture has been lost.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f929cf6b1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x7f929ca15d98" loc="56:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="46:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7f929ca15b28" loc="56:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="38:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="33:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7f929ca1ecc0" loc="40:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x7f929ca1b600" loc="41:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f929ca1b390" loc="41:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x7f929ca1a020" loc="42:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7f929ca1bcf0" loc="42:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x7f929ca1a970" loc="43:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7f929ca1a700" loc="43:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f929ca18020" loc="45:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f929ca2ce28" loc="52:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7f929ca295c8" loc="55:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x7f929ca29358" loc="55:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7f929ca2a528" loc="53:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f929ca2e328" loc="45:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7f929ca2ac00" loc="54:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f929ca2d178" loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7f929ca2c7a0" loc="51:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f929ca2ea58" loc="46:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f929cf6b1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f929ca2d820" loc="48:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x7f929ca2c108" loc="50:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f929ca2de50" loc="50:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x7f929ca28020" loc="56:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x7f929ca29cf0" loc="56:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f929c9ed290" loc="39:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="77:/home/kai/wsnpr/tinyos-main/tos/interfaces/McuSleep.nc">
      <documentation loc="65:/home/kai/wsnpr/tinyos-main/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @date   Oct 25, 2016&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="irq_preamble" ref="0x7f929cb231d8" loc="85:/home/kai/wsnpr/tinyos-main/tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="irq_postamble" ref="0x7f929cb238b0" loc="86:/home/kai/wsnpr/tinyos-main/tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7f929cb28a38" loc="79:/home/kai/wsnpr/tinyos-main/tos/interfaces/McuSleep.nc">
        <documentation loc="78:/home/kai/wsnpr/tinyos-main/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/home/kai/wsnpr/tinyos-main/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/home/kai/wsnpr/tinyos-main/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7f929cc6f1d8" loc="52:/home/kai/wsnpr/tinyos-main/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/home/kai/wsnpr/tinyos-main/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/home/kai/wsnpr/tinyos-main/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/home/kai/wsnpr/tinyos-main/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f929cf68020" loc="57:/home/kai/wsnpr/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/home/kai/wsnpr/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7f929cf67020" loc="72:/home/kai/wsnpr/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/home/kai/wsnpr/tinyos-main/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7f929cf68718" loc="65:/home/kai/wsnpr/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/home/kai/wsnpr/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f929cf6b1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/home/kai/wsnpr/tinyos-main/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7f929cf5c070" loc="67:/home/kai/wsnpr/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/home/kai/wsnpr/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7f929cf5c860" loc="75:/home/kai/wsnpr/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/home/kai/wsnpr/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/home/kai/wsnpr/tinyos-main/tos/lib/timer/Timer.nc">
      <documentation loc="36:/home/kai/wsnpr/tinyos-main/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f929c8d10f0" loc="53:/home/kai/wsnpr/tinyos-main/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f929c8d10f0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f929c8cb918" loc="136:/home/kai/wsnpr/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="132:/home/kai/wsnpr/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f929d8b1020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f929c8cf488" loc="83:/home/kai/wsnpr/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="80:/home/kai/wsnpr/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7f929c8cc0b8" loc="114:/home/kai/wsnpr/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="100:/home/kai/wsnpr/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f929d8b1020"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f929d8b1020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f929c8ceab0" loc="114:/home/kai/wsnpr/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f929d8b1020"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f929c8cedc8" loc="114:/home/kai/wsnpr/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f929d8b1020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7f929c8ce378" loc="98:/home/kai/wsnpr/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="94:/home/kai/wsnpr/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f929cf6b1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7f929c8ca878" loc="151:/home/kai/wsnpr/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="146:/home/kai/wsnpr/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f929d8b1020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7f929c8ca070" loc="144:/home/kai/wsnpr/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="138:/home/kai/wsnpr/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f929d8b1020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f929c8cfbb8" loc="92:/home/kai/wsnpr/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="86:/home/kai/wsnpr/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f929cf6b1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7f929c8d1bc0" loc="64:/home/kai/wsnpr/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="56:/home/kai/wsnpr/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f929d8b1020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f929c8d1950" loc="64:/home/kai/wsnpr/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f929d8b1020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7f929c8cb020" loc="129:/home/kai/wsnpr/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="116:/home/kai/wsnpr/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f929d8b1020"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f929d8b1020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f929c8cc9e8" loc="129:/home/kai/wsnpr/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f929d8b1020"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f929c8ccd00" loc="129:/home/kai/wsnpr/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f929d8b1020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7f929c8d0628" loc="73:/home/kai/wsnpr/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="66:/home/kai/wsnpr/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f929d8b1020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f929c8d03b8" loc="73:/home/kai/wsnpr/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f929d8b1020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f929c8d0dd0" loc="78:/home/kai/wsnpr/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="75:/home/kai/wsnpr/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Intercept" loc="15:/home/kai/wsnpr/tinyos-main/tos/interfaces/Intercept.nc">
      <documentation loc="34:/home/kai/wsnpr/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="forward" ref="0x7f929c8d83b8" loc="31:/home/kai/wsnpr/tinyos-main/tos/interfaces/Intercept.nc">
        <documentation loc="16:/home/kai/wsnpr/tinyos-main/tos/interfaces/Intercept.nc">
          <short>&#10; Signals that a message has been received, which is supposed to be&#10; forwarded to another destination.</short>
          <long>&#10; Signals that a message has been received, which is supposed to be&#10; forwarded to another destination. &#10;&#10; @param 'message_t* ONE msg' The complete message received.&#10;&#10; @param 'void* COUNT(len) payload' The payload portion of the packet for this&#10; protocol layer.&#10;&#10; @param len The length of the payload buffer.&#10;&#10; @return TRUE indicates the packet should be forwarded, FALSE&#10; indicates that it should not be forwarded.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Intercept"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f929cf6b1d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f929c8dbab0" loc="31:/home/kai/wsnpr/tinyos-main/tos/interfaces/Intercept.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f929c8dbdd8" loc="31:/home/kai/wsnpr/tinyos-main/tos/interfaces/Intercept.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f929c8d8128" loc="31:/home/kai/wsnpr/tinyos-main/tos/interfaces/Intercept.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadStream" loc="57:/home/kai/wsnpr/tinyos-main/tos/interfaces/ReadStream.nc">
      <documentation loc="33:/home/kai/wsnpr/tinyos-main/tos/interfaces/ReadStream.nc">
        <short>&#10; The ReadStream interface is intended for buffered high data rate&#10; reading, usually from sensor devices.</short>
        <long>&#10; The ReadStream interface is intended for buffered high data rate&#10; reading, usually from sensor devices. The type of the values being&#10; read is given as a template argument. &#10;&#10; &#60;p> To use this interface, allocate one or more buffers in your own&#10; space. Then, call postBuffer to pass these buffers into the&#10; device. Call read() to begin the sampling process. The buffers will&#10; be filled in the order originally posted, and a bufferDone() event&#10; will be signaled once each buffer has been filled with data. At any&#10; time while the read() is running, you may post new buffers to be&#10; filled. If the lower layer finishes signaling readDone() and then&#10; finds that no more buffers have been posted, it will consider the&#10; read to be finished, and signal readDone(). &#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f929c8c4e68" loc="57:/home/kai/wsnpr/tinyos-main/tos/interfaces/ReadStream.nc">
          <interfacedef-ref qname="ReadStream"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f929c8c4e68"/></type-var>
        </typedef>
      </parameters>
      <function event="" provided="0" name="bufferDone" ref="0x7f929c8bb020" loc="89:/home/kai/wsnpr/tinyos-main/tos/interfaces/ReadStream.nc">
        <documentation loc="80:/home/kai/wsnpr/tinyos-main/tos/interfaces/ReadStream.nc">
          <short>&#10; Signalled when a previously posted buffer has been filled by the&#10; device.</short>
          <long>&#10; Signalled when a previously posted buffer has been filled by the&#10; device. In the event of a read error, result will not equal&#10; SUCCESS, and the buffer will be filled with zeroes.&#10;&#10; @param result SUCCESS if the buffer was filled without errors&#10; @param 'val_t* COUNT(count) buf' a pointer to the buffer that has been filled&#10; @param count the number of values actually read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f929c8c4e68"/></type-var>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f929c8be5f0" loc="89:/home/kai/wsnpr/tinyos-main/tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7f929c8be948" loc="90:/home/kai/wsnpr/tinyos-main/tos/interfaces/ReadStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f929c8c4e68"/></type-var>
            </type-pointer>
          </variable>
          <variable name="count" ref="0x7f929c8bec80" loc="90:/home/kai/wsnpr/tinyos-main/tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="postBuffer" ref="0x7f929c8bfcb8" loc="68:/home/kai/wsnpr/tinyos-main/tos/interfaces/ReadStream.nc">
        <documentation loc="58:/home/kai/wsnpr/tinyos-main/tos/interfaces/ReadStream.nc">
          <short>&#10; Passes a buffer to the device, and indicates how many values&#10; should be placed into the buffer.</short>
          <long>&#10; Passes a buffer to the device, and indicates how many values&#10; should be placed into the buffer. Make sure your count doesn't&#10; overrun the buffer.&#10;&#10; @param 'val_t* COUNT(count) buf' a pointer to the buffer&#10; @param count the number of values the buffer should hold&#10;&#10; @return SUCCESS if the post was successful&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f929c8c4e68"/></type-var>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f929c8bf700" loc="68:/home/kai/wsnpr/tinyos-main/tos/interfaces/ReadStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f929c8c4e68"/></type-var>
            </type-pointer>
          </variable>
          <variable name="count" ref="0x7f929c8bfa38" loc="68:/home/kai/wsnpr/tinyos-main/tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7f929c8bde20" loc="78:/home/kai/wsnpr/tinyos-main/tos/interfaces/ReadStream.nc">
        <documentation loc="70:/home/kai/wsnpr/tinyos-main/tos/interfaces/ReadStream.nc">
          <short>&#10; Directs the device to start filling buffers by sampling with the&#10; specified period.</short>
          <long>&#10; Directs the device to start filling buffers by sampling with the&#10; specified period. &#10; &#10; @param usPeriod the between-sample period in microseconds&#10; &#10; @return SUCCESS if the reading process began&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f929d8b1020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="usPeriod" ref="0x7f929c8bdbb0" loc="78:/home/kai/wsnpr/tinyos-main/tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f929d8b1020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f929c8ba630" loc="102:/home/kai/wsnpr/tinyos-main/tos/interfaces/ReadStream.nc">
        <documentation loc="92:/home/kai/wsnpr/tinyos-main/tos/interfaces/ReadStream.nc">
          <short>&#10; Signalled when a buffer has been filled but no more buffers have&#10; been posted.</short>
          <long>&#10; Signalled when a buffer has been filled but no more buffers have&#10; been posted. In the event of a read error, all previously posted&#10; buffers will have their bufferDone() event signalled, and then&#10; this event will be signalled with a non-SUCCESS argument.&#10;&#10; @param result SUCCESS if all buffers were filled without errors&#10; @param usActualPeriod Actual sampling period used - may be different&#10;   from period requested at read time. Undefined if result != SUCCESS.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f929d8b1020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f929c8ba020" loc="102:/home/kai/wsnpr/tinyos-main/tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
            </type-int>
          </variable>
          <variable name="usActualPeriod" ref="0x7f929c8ba3b0" loc="102:/home/kai/wsnpr/tinyos-main/tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f929d8b1020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x7f929c8b3118" loc="56:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f929c8b5b38" loc="56:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x7f929c8b5e60" loc="56:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x7f929c8af5f0" loc="77:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f929c8af020" loc="77:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x7f929c8af370" loc="77:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x7f929c8b3b78" loc="64:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x7f929d8b3728"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f929c8b3908" loc="64:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x7f929c8b14b0" loc="75:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f929c8b1240" loc="75:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x7f929c8b53b0" loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f929c8b5140" loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x7f929c8b2648" loc="72:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f929c8b23d8" loc="72:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/home/kai/wsnpr/tinyos-main/tos/interfaces/Read.nc">
      <documentation loc="33:/home/kai/wsnpr/tinyos-main/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f929c8c6410" loc="49:/home/kai/wsnpr/tinyos-main/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f929c8c6410"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f929c8c6c48" loc="55:/home/kai/wsnpr/tinyos-main/tos/interfaces/Read.nc">
        <documentation loc="50:/home/kai/wsnpr/tinyos-main/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f929c8c2910" loc="63:/home/kai/wsnpr/tinyos-main/tos/interfaces/Read.nc">
        <documentation loc="57:/home/kai/wsnpr/tinyos-main/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f929c8c6410"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f929c8c2390" loc="63:/home/kai/wsnpr/tinyos-main/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7f929c8c2690" loc="63:/home/kai/wsnpr/tinyos-main/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f929c8c6410"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/home/kai/wsnpr/tinyos-main/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/home/kai/wsnpr/tinyos-main/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7f929c884c08" loc="113:/home/kai/wsnpr/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/home/kai/wsnpr/tinyos-main/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f929c884998" loc="113:/home/kai/wsnpr/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7f929c8820a8" loc="138:/home/kai/wsnpr/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/home/kai/wsnpr/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f929c883db8" loc="138:/home/kai/wsnpr/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f929c884020" loc="104:/home/kai/wsnpr/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/home/kai/wsnpr/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f929c883448" loc="130:/home/kai/wsnpr/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/home/kai/wsnpr/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/home/kai/wsnpr/tinyos-main/tos/interfaces/Receive.nc">
      <documentation loc="34:/home/kai/wsnpr/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f929c8756d8" loc="78:/home/kai/wsnpr/tinyos-main/tos/interfaces/Receive.nc">
        <documentation loc="58:/home/kai/wsnpr/tinyos-main/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
              <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f929c885db0" loc="78:/home/kai/wsnpr/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f929c875100" loc="78:/home/kai/wsnpr/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f929c875410" loc="78:/home/kai/wsnpr/tinyos-main/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/home/kai/wsnpr/tinyos-main/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/home/kai/wsnpr/tinyos-main/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7f929c85cb08" loc="177:/home/kai/wsnpr/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/home/kai/wsnpr/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f929cab6cb8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f929c85c898" loc="177:/home/kai/wsnpr/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7f929c866b80" loc="88:/home/kai/wsnpr/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/home/kai/wsnpr/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f929cab40c8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f929c866910" loc="88:/home/kai/wsnpr/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7f929c868110" loc="68:/home/kai/wsnpr/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/home/kai/wsnpr/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f929cab40c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7f929c868b68" loc="78:/home/kai/wsnpr/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/home/kai/wsnpr/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f929cab40c8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f929c8688f8" loc="78:/home/kai/wsnpr/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7f929c863450" loc="121:/home/kai/wsnpr/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/home/kai/wsnpr/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f929cab40c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f929c865e60" loc="121:/home/kai/wsnpr/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f929c8631d0" loc="121:/home/kai/wsnpr/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f929cab40c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7f929c865020" loc="103:/home/kai/wsnpr/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/home/kai/wsnpr/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f929cab40c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f929c864900" loc="103:/home/kai/wsnpr/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f929c864c38" loc="103:/home/kai/wsnpr/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f929cab40c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7f929c860768" loc="147:/home/kai/wsnpr/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/home/kai/wsnpr/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f929cab6908"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f929c8604f8" loc="147:/home/kai/wsnpr/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7f929c85f9d8" loc="162:/home/kai/wsnpr/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/home/kai/wsnpr/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f929cab6908"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f929c85f458" loc="162:/home/kai/wsnpr/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7f929c85f758" loc="162:/home/kai/wsnpr/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f929cab6908"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7f929c861600" loc="136:/home/kai/wsnpr/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/home/kai/wsnpr/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f929cf6b1d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f929c861390" loc="136:/home/kai/wsnpr/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7f929c85a020" loc="187:/home/kai/wsnpr/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/home/kai/wsnpr/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f929cab6cb8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f929c85b920" loc="187:/home/kai/wsnpr/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7f929c85bc50" loc="187:/home/kai/wsnpr/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f929cab6cb8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7f929c85ad88" loc="195:/home/kai/wsnpr/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/home/kai/wsnpr/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f929cab6cb8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/home/kai/wsnpr/tinyos-main/tos/interfaces/Packet.nc">
      <documentation loc="42:/home/kai/wsnpr/tinyos-main/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f929c8715b8" loc="65:/home/kai/wsnpr/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="58:/home/kai/wsnpr/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f929c871348" loc="65:/home/kai/wsnpr/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7f929c8705b8" loc="78:/home/kai/wsnpr/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="67:/home/kai/wsnpr/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f929c870348" loc="78:/home/kai/wsnpr/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f929c86d6c8" loc="126:/home/kai/wsnpr/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="109:/home/kai/wsnpr/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f929c86d100" loc="126:/home/kai/wsnpr/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f929c86d410" loc="126:/home/kai/wsnpr/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f929c86c828" loc="106:/home/kai/wsnpr/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="96:/home/kai/wsnpr/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7f929c86e950" loc="94:/home/kai/wsnpr/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="80:/home/kai/wsnpr/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f929c86e3c0" loc="94:/home/kai/wsnpr/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f929c86e6d0" loc="94:/home/kai/wsnpr/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/home/kai/wsnpr/tinyos-main/tos/interfaces/Leds.nc">
      <documentation loc="33:/home/kai/wsnpr/tinyos-main/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7f929c84e070" loc="61:/home/kai/wsnpr/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="58:/home/kai/wsnpr/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7f929c84e7a8" loc="67:/home/kai/wsnpr/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="63:/home/kai/wsnpr/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7f929c84d020" loc="72:/home/kai/wsnpr/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="69:/home/kai/wsnpr/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7f929c84de70" loc="83:/home/kai/wsnpr/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="79:/home/kai/wsnpr/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7f929c84a480" loc="100:/home/kai/wsnpr/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="96:/home/kai/wsnpr/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f929c84ac18" loc="117:/home/kai/wsnpr/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="103:/home/kai/wsnpr/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7f929c84d738" loc="77:/home/kai/wsnpr/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="74:/home/kai/wsnpr/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f929c849768" loc="134:/home/kai/wsnpr/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="120:/home/kai/wsnpr/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f929c8494f8" loc="134:/home/kai/wsnpr/tinyos-main/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7f929c84f900" loc="56:/home/kai/wsnpr/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="53:/home/kai/wsnpr/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7f929c84c608" loc="89:/home/kai/wsnpr/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="86:/home/kai/wsnpr/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7f929c84cd20" loc="94:/home/kai/wsnpr/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="91:/home/kai/wsnpr/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/home/kai/wsnpr/tinyos-main/tos/interfaces/AMSend.nc">
      <documentation loc="34:/home/kai/wsnpr/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f929c880dc0" loc="80:/home/kai/wsnpr/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="60:/home/kai/wsnpr/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f929cab40c8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f929c8804c0" loc="80:/home/kai/wsnpr/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f929cab40c8"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f929c880820" loc="80:/home/kai/wsnpr/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f929c880b30" loc="80:/home/kai/wsnpr/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f929c8792d8" loc="135:/home/kai/wsnpr/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="126:/home/kai/wsnpr/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f929c87abe8" loc="135:/home/kai/wsnpr/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f929c879020" loc="135:/home/kai/wsnpr/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f929c87a3e0" loc="123:/home/kai/wsnpr/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="113:/home/kai/wsnpr/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f929c87d108" loc="96:/home/kai/wsnpr/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="82:/home/kai/wsnpr/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f929c87ee50" loc="96:/home/kai/wsnpr/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f929c87c5c8" loc="110:/home/kai/wsnpr/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="98:/home/kai/wsnpr/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f929c87c020" loc="110:/home/kai/wsnpr/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f929c87c348" loc="110:/home/kai/wsnpr/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/home/kai/wsnpr/tinyos-main/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/home/kai/wsnpr/tinyos-main/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f929c7e9ae8" loc="44:/home/kai/wsnpr/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f929c7e81d8" loc="45:/home/kai/wsnpr/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f929cf6b1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f929c7ebd70" loc="42:/home/kai/wsnpr/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f929c7e7020" loc="47:/home/kai/wsnpr/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f929cf6b1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f929c7e9438" loc="43:/home/kai/wsnpr/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f929cf6b1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f929c7e8890" loc="46:/home/kai/wsnpr/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f929c7eb070" loc="40:/home/kai/wsnpr/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f929c7eb6e0" loc="41:/home/kai/wsnpr/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:/home/kai/wsnpr/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f929c7be750" loc="78:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f929c7bee38" loc="80:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f929cf6b1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x7f929c7b9428" loc="110:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f929c7b91b8" loc="110:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f929c7c0030" loc="58:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f929c7bdc68" loc="87:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f929cf6b1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x7f929c7b9ca8" loc="117:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f929c7bd570" loc="85:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f929c7be020" loc="73:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f929cf6b1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x7f929c7ba258" loc="99:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x7f929c7c0758" loc="66:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f929c7c1290" loc="48:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x7f929c7bc3e0" loc="92:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x7f929c7ba958" loc="101:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f929cf6b1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x7f929c7bcb10" loc="94:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f929cf6b1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f929c7c1938" loc="53:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/home/kai/wsnpr/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x7f929c595db0" loc="35:/home/kai/wsnpr/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f929c595db0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f929c58e020" loc="35:/home/kai/wsnpr/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f929c58e020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x7f929c58bcb8" loc="63:/home/kai/wsnpr/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/home/kai/wsnpr/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f929c58e020"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f929c58ba48" loc="63:/home/kai/wsnpr/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7f929c589020" loc="70:/home/kai/wsnpr/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/home/kai/wsnpr/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f929c58cca8" loc="70:/home/kai/wsnpr/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x7f929c58eb40" loc="49:/home/kai/wsnpr/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/home/kai/wsnpr/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f929cf6b1d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f929c58e8d0" loc="49:/home/kai/wsnpr/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f929c5882a0" loc="78:/home/kai/wsnpr/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/home/kai/wsnpr/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f929c58e020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f929c589c48" loc="78:/home/kai/wsnpr/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7f929c588020" loc="78:/home/kai/wsnpr/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f929c58e020"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/home/kai/wsnpr/tinyos-main/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/home/kai/wsnpr/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x7f929c57ed88" loc="65:/home/kai/wsnpr/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/home/kai/wsnpr/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f929c57e7a0" loc="65:/home/kai/wsnpr/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x7f929c57eb08" loc="65:/home/kai/wsnpr/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x7f929c57b020" loc="71:/home/kai/wsnpr/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/home/kai/wsnpr/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f929c57cc48" loc="71:/home/kai/wsnpr/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x7f929c57e020" loc="57:/home/kai/wsnpr/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/home/kai/wsnpr/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x7f929c57f5c0" loc="52:/home/kai/wsnpr/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/home/kai/wsnpr/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x7f929c57f350" loc="52:/home/kai/wsnpr/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/home/kai/wsnpr/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/home/kai/wsnpr/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7f929c5933b0" loc="59:/home/kai/wsnpr/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/home/kai/wsnpr/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f929c593140" loc="59:/home/kai/wsnpr/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7f929c5924e8" loc="71:/home/kai/wsnpr/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/home/kai/wsnpr/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f929c592278" loc="71:/home/kai/wsnpr/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7f929c5905b8" loc="85:/home/kai/wsnpr/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/home/kai/wsnpr/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f929cf6b1d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f929c590348" loc="85:/home/kai/wsnpr/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x7f929c55dd88" loc="95:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f929c55db18" loc="95:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x7f929c55f0a8" loc="81:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f929c560dd0" loc="81:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x7f929c561838" loc="66:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7f929c5615c8" loc="66:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x7f929c566d70" loc="60:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7f929c566b00" loc="60:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x7f929c560290" loc="73:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f929cf6b1d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x7f929c560020" loc="73:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f929cf6b1d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x7f929c55d020" loc="88:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f929c55fc28" loc="88:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/home/kai/wsnpr/tinyos-main/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/home/kai/wsnpr/tinyos-main/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x7f929c5512a0" loc="59:/home/kai/wsnpr/tinyos-main/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/home/kai/wsnpr/tinyos-main/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f929cab40c8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7f929c55bb60" loc="59:/home/kai/wsnpr/tinyos-main/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f929cab40c8"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f929c551020" loc="59:/home/kai/wsnpr/tinyos-main/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/home/kai/wsnpr/tinyos-main/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/home/kai/wsnpr/tinyos-main/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x7f929c555cd8" loc="65:/home/kai/wsnpr/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/home/kai/wsnpr/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f929c555a68" loc="65:/home/kai/wsnpr/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x7f929c558020" loc="46:/home/kai/wsnpr/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/home/kai/wsnpr/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f929c5639c8" loc="46:/home/kai/wsnpr/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x7f929c563d30" loc="46:/home/kai/wsnpr/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x7f929c557d80" loc="59:/home/kai/wsnpr/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/home/kai/wsnpr/tinyos-main/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f929c557b10" loc="59:/home/kai/wsnpr/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x7f929c557348" loc="53:/home/kai/wsnpr/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/home/kai/wsnpr/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f929c558d20" loc="53:/home/kai/wsnpr/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x7f929c5570c8" loc="53:/home/kai/wsnpr/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x7f929c553c10" loc="71:/home/kai/wsnpr/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/home/kai/wsnpr/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f929cf6b1d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f929c5539a0" loc="71:/home/kai/wsnpr/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/home/kai/wsnpr/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/home/kai/wsnpr/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x7f929c567e08" loc="47:/home/kai/wsnpr/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/home/kai/wsnpr/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f929cf6b1d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f929c567b98" loc="47:/home/kai/wsnpr/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/home/kai/wsnpr/tinyos-main/tos/interfaces/Send.nc">
      <documentation loc="34:/home/kai/wsnpr/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f929c54ae18" loc="75:/home/kai/wsnpr/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="57:/home/kai/wsnpr/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f929c54a888" loc="75:/home/kai/wsnpr/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f929c54ab98" loc="75:/home/kai/wsnpr/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f929c53e2d8" loc="125:/home/kai/wsnpr/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="115:/home/kai/wsnpr/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f929c53fc90" loc="125:/home/kai/wsnpr/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f929c53e020" loc="125:/home/kai/wsnpr/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f929c53f488" loc="112:/home/kai/wsnpr/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="102:/home/kai/wsnpr/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f929c5420a8" loc="89:/home/kai/wsnpr/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="77:/home/kai/wsnpr/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f929c543e08" loc="89:/home/kai/wsnpr/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f929c5405c8" loc="100:/home/kai/wsnpr/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="91:/home/kai/wsnpr/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f929c540020" loc="100:/home/kai/wsnpr/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f929c540348" loc="100:/home/kai/wsnpr/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/home/kai/wsnpr/tinyos-main/tos/interfaces/Resource.nc">
      <documentation loc="63:/home/kai/wsnpr/tinyos-main/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f929c547020" loc="120:/home/kai/wsnpr/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="104:/home/kai/wsnpr/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7f929c548020" loc="97:/home/kai/wsnpr/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="90:/home/kai/wsnpr/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7f929c549700" loc="88:/home/kai/wsnpr/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="78:/home/kai/wsnpr/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f929c5487a8" loc="102:/home/kai/wsnpr/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="99:/home/kai/wsnpr/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f929c547a08" loc="128:/home/kai/wsnpr/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="122:/home/kai/wsnpr/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f929cf6b1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f929c51f050" loc="51:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f929cf6b1d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f929c520a88" loc="51:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x7f929c520da0" loc="51:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f929cf6b1d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f929c51d258" loc="65:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x7f929c51b8d8" loc="84:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f929c51cae0" loc="84:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7f929c51b338" loc="84:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f929c51b648" loc="84:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f929c51c348" loc="73:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f929c51dd30" loc="73:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f929c51c0c8" loc="73:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x7f929c51fa60" loc="58:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f929cf6b1d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x7f929c51f7f0" loc="58:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f929cf6b1d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/home/kai/wsnpr/tinyos-main/tos/interfaces/Random.nc">
      <documentation loc="34:/home/kai/wsnpr/tinyos-main/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7f929c517a28" loc="52:/home/kai/wsnpr/tinyos-main/tos/interfaces/Random.nc">
        <documentation loc="48:/home/kai/wsnpr/tinyos-main/tos/interfaces/Random.nc">
          <short> &#10; Produces a 16-bit pseudorandom number.</short>
          <long> &#10; Produces a 16-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7f929c517290" loc="46:/home/kai/wsnpr/tinyos-main/tos/interfaces/Random.nc">
        <documentation loc="42:/home/kai/wsnpr/tinyos-main/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f929d8b1020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/home/kai/wsnpr/tinyos-main/tos/interfaces/StdControl.nc">
      <documentation loc="72:/home/kai/wsnpr/tinyos-main/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f929c5227d0" loc="95:/home/kai/wsnpr/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="88:/home/kai/wsnpr/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f929c521020" loc="105:/home/kai/wsnpr/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="97:/home/kai/wsnpr/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x7f929c512a50" loc="49:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f929c5127a8" loc="49:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x7f929c512020" loc="42:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x7f929caef3f8"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x7f929caeec80"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f929c513c38" loc="42:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x7f929c510cb0" loc="53:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x7f929caec778"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x7f929cae9020"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f929c5109c8" loc="53:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x7f929c5277e8" loc="71:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x7f929c524778" loc="97:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x7f929c524020" loc="90:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x7f929c528020" loc="51:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x7f929c527020" loc="63:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x7f929c526020" loc="76:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x7f929c526798" loc="83:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x7f929c528818" loc="56:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:/home/kai/wsnpr/tinyos-main/tos/interfaces/State.nc">
      <documentation loc="33:/home/kai/wsnpr/tinyos-main/tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x7f929c50a020" loc="71:/home/kai/wsnpr/tinyos-main/tos/interfaces/State.nc">
        <documentation loc="68:/home/kai/wsnpr/tinyos-main/tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x7f929c50c730" loc="56:/home/kai/wsnpr/tinyos-main/tos/interfaces/State.nc">
        <documentation loc="53:/home/kai/wsnpr/tinyos-main/tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x7f929c50b7e8" loc="66:/home/kai/wsnpr/tinyos-main/tos/interfaces/State.nc">
        <documentation loc="63:/home/kai/wsnpr/tinyos-main/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f929cf6b1d0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x7f929c50b578" loc="66:/home/kai/wsnpr/tinyos-main/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x7f929c50ce38" loc="61:/home/kai/wsnpr/tinyos-main/tos/interfaces/State.nc">
        <documentation loc="58:/home/kai/wsnpr/tinyos-main/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f929cf6b1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x7f929c50e508" loc="45:/home/kai/wsnpr/tinyos-main/tos/interfaces/State.nc">
        <documentation loc="40:/home/kai/wsnpr/tinyos-main/tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7f929c50e298" loc="45:/home/kai/wsnpr/tinyos-main/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x7f929c50c020" loc="51:/home/kai/wsnpr/tinyos-main/tos/interfaces/State.nc">
        <documentation loc="47:/home/kai/wsnpr/tinyos-main/tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7f929c50ecc0" loc="51:/home/kai/wsnpr/tinyos-main/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x7f929c4b35d8" loc="106:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f929cf6b1d0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f929cf6b1d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x7f929c4b3020" loc="106:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f929cf6b1d0"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x7f929c4b3358" loc="106:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f929cf6b1d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x7f929c4b4020" loc="93:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f929cf6b1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x7f929c4b5660" loc="87:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f929cf6b1d0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f929cf6b1d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x7f929c4b5020" loc="87:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f929cf6b1d0"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x7f929c4b53e0" loc="87:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f929cf6b1d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x7f929c4bcdb0" loc="55:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f929c4bcb40" loc="55:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x7f929c4b4828" loc="98:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f929cf6b1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x7f929c4b8658" loc="72:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7f929c4b83e8" loc="72:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7f929c4bade8" loc="61:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f929c4bab78" loc="61:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x7f929c4b27d8" loc="117:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f929cf6b1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x7f929c4b76f8" loc="78:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7f929c4b7488" loc="78:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x7f929c4b2020" loc="112:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f929cf6b1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x7f929c4b9538" loc="66:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7f929c579340"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7f929c579a68"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x7f929c4b9cb8" loc="71:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x7f929c4bc410" loc="54:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f929c4ba4c8" loc="60:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x7f929c4b8d88" loc="77:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f929c485020" loc="55:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f929caf1710"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f929c48fcf0" loc="55:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f929c485a78" loc="63:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f929caf1710"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f929c485808" loc="63:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:/home/kai/wsnpr/tinyos-main/tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:/home/kai/wsnpr/tinyos-main/tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x7f929c4a24d0" loc="48:/home/kai/wsnpr/tinyos-main/tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:/home/kai/wsnpr/tinyos-main/tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7f929c579340"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7f929c579a68"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/home/kai/wsnpr/tinyos-main/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/home/kai/wsnpr/tinyos-main/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f929c4a4670" loc="56:/home/kai/wsnpr/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f929c4a4670"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f929c4a48a0" loc="56:/home/kai/wsnpr/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f929c4a48a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f929c49b178" loc="109:/home/kai/wsnpr/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/home/kai/wsnpr/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f929c4a48a0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f929c49e328" loc="78:/home/kai/wsnpr/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/home/kai/wsnpr/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7f929c49d810" loc="103:/home/kai/wsnpr/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/home/kai/wsnpr/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f929c4a48a0"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f929c4a48a0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f929c49d270" loc="103:/home/kai/wsnpr/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f929c4a48a0"/></type-var>
          </variable>
          <variable name="dt" ref="0x7f929c49d590" loc="103:/home/kai/wsnpr/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f929c4a48a0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f929c49ea70" loc="88:/home/kai/wsnpr/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/home/kai/wsnpr/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f929cf6b1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7f929c49b8f8" loc="116:/home/kai/wsnpr/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/home/kai/wsnpr/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f929c4a48a0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f929c49f390" loc="66:/home/kai/wsnpr/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/home/kai/wsnpr/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f929c4a48a0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f929c49f120" loc="66:/home/kai/wsnpr/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f929c4a48a0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f929c49fb60" loc="73:/home/kai/wsnpr/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/home/kai/wsnpr/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/home/kai/wsnpr/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/home/kai/wsnpr/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x7f929c48d020" loc="50:/home/kai/wsnpr/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/home/kai/wsnpr/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f929cab40c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7f929c48de70" loc="60:/home/kai/wsnpr/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/home/kai/wsnpr/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x7f929c48d780" loc="55:/home/kai/wsnpr/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/home/kai/wsnpr/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f929cab6cb8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x7f929c48e730" loc="45:/home/kai/wsnpr/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/home/kai/wsnpr/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f929cab6cb8"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f929cab40c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x7f929c48e178" loc="45:/home/kai/wsnpr/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f929cab6cb8"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f929c48e4b0" loc="45:/home/kai/wsnpr/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f929cab40c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x7f929c47e020" loc="53:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f929caf1710"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f929c489468" loc="52:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f929caf1710"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f929c48b670" loc="52:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f929c48be78" loc="52:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f929c4891d8" loc="52:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f929c488af8" loc="63:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f929caf1710"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f929c489cb8" loc="63:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f929c488538" loc="63:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f929c488868" loc="63:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:/home/kai/wsnpr/tinyos-main/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:/home/kai/wsnpr/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f929c491770" loc="68:/home/kai/wsnpr/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:/home/kai/wsnpr/tinyos-main/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f929c491020" loc="61:/home/kai/wsnpr/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:/home/kai/wsnpr/tinyos-main/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x7f929c492868" loc="54:/home/kai/wsnpr/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x7f929c492020" loc="53:/home/kai/wsnpr/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/home/kai/wsnpr/tinyos-main/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/home/kai/wsnpr/tinyos-main/tos/lib/timer/Counter.nc">
      <documentation loc="36:/home/kai/wsnpr/tinyos-main/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f929c38bc98" loc="57:/home/kai/wsnpr/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f929c38bc98"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f929c386020" loc="57:/home/kai/wsnpr/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f929c386020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f929c3868b8" loc="64:/home/kai/wsnpr/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="59:/home/kai/wsnpr/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f929c386020"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f929c385900" loc="76:/home/kai/wsnpr/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="73:/home/kai/wsnpr/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f929c385110" loc="71:/home/kai/wsnpr/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="66:/home/kai/wsnpr/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f929cf6b1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f929c383020" loc="82:/home/kai/wsnpr/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="78:/home/kai/wsnpr/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:/home/kai/wsnpr/tinyos-main/tos/interfaces/GpioCapture.nc">
      <documentation loc="34:/home/kai/wsnpr/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7f929c2c7498" loc="54:/home/kai/wsnpr/tinyos-main/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f929c2c6550" loc="66:/home/kai/wsnpr/tinyos-main/tos/interfaces/GpioCapture.nc">
        <documentation loc="63:/home/kai/wsnpr/tinyos-main/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f929c2c7dc0" loc="61:/home/kai/wsnpr/tinyos-main/tos/interfaces/GpioCapture.nc">
        <documentation loc="56:/home/kai/wsnpr/tinyos-main/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f929c2c7b50" loc="61:/home/kai/wsnpr/tinyos-main/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7f929c2cac38" loc="53:/home/kai/wsnpr/tinyos-main/tos/interfaces/GpioCapture.nc">
        <documentation loc="48:/home/kai/wsnpr/tinyos-main/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Interrupt" loc="37:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
      <documentation loc="33:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f929c2a4e50" loc="52:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="49:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f929c2a17d8" loc="72:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="69:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f929c2a4768" loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="44:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Disables MSP430 hardware interrupt on a particular port.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7f929c2a1020" loc="67:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="61:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10;&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f929cf6b1d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7f929c2a2d40" loc="67:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f929cf6b1d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7f929c2a4070" loc="42:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="39:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Enables MSP430 hardware interrupt on a particular port.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7f929c2a25d8" loc="59:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="54:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port.</short>
          <long> &#10; Gets the current value of the input voltage of a port.&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f929cf6b1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x7f929c1988c8" loc="24:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x7f929c1970d8" loc="31:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x7f929c1978a8" loc="39:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x7f929c171348" loc="62:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f929c172d58" loc="62:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f929c1710c8" loc="62:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7f929c16c2b0" loc="91:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f929c16d940" loc="91:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f929c16dc70" loc="91:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f929c16c020" loc="91:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f929c16ec50" loc="82:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f929caf1710"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f929c16e6a0" loc="82:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f929c16e9d0" loc="82:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x7f929c172020" loc="51:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f929caf1710"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f929c173908" loc="51:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f929c173c38" loc="51:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f929c170948" loc="71:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f929c170060" loc="71:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f929c170390" loc="71:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f929c1706b8" loc="71:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="60:/home/kai/wsnpr/tinyos-main/tos/interfaces/SpiPacket.nc">
      <documentation loc="34:/home/kai/wsnpr/tinyos-main/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both.&#10;&#10; The SPI bus both sends and receives at the same time.  So this interface&#10; can be used to send, receive, or both.  The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; This is split phase and typically is implemented using interrupts.  However&#10; as the SPI clock is increased the interrupt overhead become more onerous&#10; wrt each byte time being transfered.  See SpiBLock for a single phase&#10; transfer mechanism that doesn't have interrupt overhead issues.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f929c1539d8" loc="76:/home/kai/wsnpr/tinyos-main/tos/interfaces/SpiPacket.nc">
        <documentation loc="62:/home/kai/wsnpr/tinyos-main/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f929c1530c8" loc="76:/home/kai/wsnpr/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f929c153428" loc="76:/home/kai/wsnpr/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f929c153748" loc="76:/home/kai/wsnpr/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f929c151d68" loc="88:/home/kai/wsnpr/tinyos-main/tos/interfaces/SpiPacket.nc">
        <documentation loc="78:/home/kai/wsnpr/tinyos-main/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f929c151100" loc="88:/home/kai/wsnpr/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f929c151460" loc="88:/home/kai/wsnpr/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f929c151780" loc="88:/home/kai/wsnpr/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f929c151ac8" loc="89:/home/kai/wsnpr/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/home/kai/wsnpr/tinyos-main/tos/interfaces/SpiByte.nc">
      <documentation loc="34:/home/kai/wsnpr/tinyos-main/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7f929c1579a8" loc="45:/home/kai/wsnpr/tinyos-main/tos/interfaces/SpiByte.nc">
        <documentation loc="40:/home/kai/wsnpr/tinyos-main/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7f929c157738" loc="45:/home/kai/wsnpr/tinyos-main/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/home/kai/wsnpr/tinyos-main/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/home/kai/wsnpr/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7f929c07ba80" loc="53:/home/kai/wsnpr/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/home/kai/wsnpr/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f929c078378" loc="61:/home/kai/wsnpr/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/home/kai/wsnpr/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430SpiConfigure" loc="38:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430SpiConfigure.nc">
      <documentation loc="31:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7f929c071360" loc="39:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <interfacedef-ref qname="Msp430SpiConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f929c0ab898"/>
              <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f929c0abca0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:/home/kai/wsnpr/tinyos-main/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:/home/kai/wsnpr/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x7f929c0764a8" loc="62:/home/kai/wsnpr/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:/home/kai/wsnpr/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f929c076238" loc="62:/home/kai/wsnpr/tinyos-main/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x7f929c0756f8" loc="74:/home/kai/wsnpr/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:/home/kai/wsnpr/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f929c075488" loc="74:/home/kai/wsnpr/tinyos-main/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x7f929c076ca8" loc="68:/home/kai/wsnpr/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:/home/kai/wsnpr/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f929c074108" loc="81:/home/kai/wsnpr/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:/home/kai/wsnpr/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f929c075e28" loc="81:/home/kai/wsnpr/tinyos-main/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/home/kai/wsnpr/tinyos-main/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/home/kai/wsnpr/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7f929c06b578" loc="65:/home/kai/wsnpr/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/home/kai/wsnpr/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7f929c06ed90" loc="59:/home/kai/wsnpr/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/home/kai/wsnpr/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="31:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x7f929c063798" loc="54:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f929c063528" loc="54:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x7f929c067dd0" loc="49:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="31:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x7f929c041c88" loc="213:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f929cf6b1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x7f929c04b0d8" loc="143:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x7f929c058740" loc="50:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f929c0c6528"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7f929c0c6d50"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f929c0584d0" loc="50:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f929c0c6528"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7f929c0c6d50"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x7f929c04e3a0" loc="123:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x7f929c056b20" loc="70:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f929c0c2280"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7f929c0c2aa8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f929c0568b0" loc="70:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f929c0c2280"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7f929c0c2aa8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7f929c045258" loc="180:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x7f929c042738" loc="197:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x7f929c056178" loc="65:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f929c0c4350"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x7f929c0c4ac8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x7f929c054328" loc="75:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f929c0c2280"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x7f929c0c2aa8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x7f929c052de0" loc="97:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f929cf6b1d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x7f929c052b70" loc="97:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f929cf6b1d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x7f929c0524b8" loc="95:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x7f929c046b28" loc="179:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x7f929c0579c0" loc="60:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f929c0c4350"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7f929c0c4ac8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f929c057750" loc="60:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f929c0c4350"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7f929c0c4ac8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x7f929c0533e0" loc="85:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7f929c045928" loc="181:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x7f929c053d40" loc="90:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x7f929c053ad0" loc="90:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x7f929c04f530" loc="113:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f929cf6b1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x7f929c04fc48" loc="118:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f929cf6b1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7f929c047d58" loc="177:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x7f929c04ae20" loc="163:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f929cf6b1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x7f929c04d258" loc="133:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7f929c046468" loc="178:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x7f929c04b810" loc="148:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x7f929c043020" loc="182:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7f929c050588" loc="103:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f929c0cd568"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x7f929c0c9ce0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x7f929c043758" loc="187:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f929cf6b1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x7f929c041550" loc="207:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x7f929c054c58" loc="80:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x7f929c0549e8" loc="80:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x7f929c0405f0" loc="224:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10; The mode of transmission (Uart or Spi) depends on the current&#10; state of the USART, which must be managed by a higher layer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f929c040380" loc="224:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x7f929c057020" loc="55:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f929c0c6528"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x7f929c0c6d50"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x7f929c04eab0" loc="128:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7f929c04a020" loc="153:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x7f929c0475b0" loc="174:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f929c098180"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f929c098588"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f929c047340" loc="174:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f929c098180"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f929c098588"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x7f929c0498c0" loc="168:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f929c0ab898"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f929c0abca0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f929c049650" loc="168:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f929c0ab898"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f929c0abca0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x7f929c040e38" loc="231:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="226:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x7f929c042020" loc="192:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f929cf6b1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x7f929c050cd0" loc="108:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f929cf6b1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x7f929c042e30" loc="202:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x7f929c04a720" loc="158:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x7f929c04d990" loc="138:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f929bfdfcb0" loc="39:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2C" loc="4:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
      <documentation loc="31:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="disableOwnAddress" ref="0x7f929bfb6258" loc="80:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartByte" ref="0x7f929bfc8720" loc="31:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f929cf6b1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveAddress" ref="0x7f929bfbd290" loc="62:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f929bfbd020" loc="62:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterMode" ref="0x7f929bfd0178" loc="11:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTransmitReady" ref="0x7f929bfba740" loc="71:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPrescaler" ref="0x7f929bfc2510" loc="49:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransmitMode" ref="0x7f929bfc98c0" loc="28:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStopBit" ref="0x7f929bfc7520" loc="34:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f929cf6b1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7f929bfcb940" loc="25:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7f929bfcb6d0" loc="25:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRepeatMode" ref="0x7f929bfcde38" loc="21:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f929cf6b1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getData" ref="0x7f929bfc4110" loc="41:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableStartDetect" ref="0x7f929bfbb110" loc="66:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAccessReady" ref="0x7f929bfb7ae0" loc="78:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSlaveAddress" ref="0x7f929bfbe868" loc="61:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isGeneralCallPending" ref="0x7f929bfb28c8" loc="91:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f929cf6b1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getIV" ref="0x7f929bfaed00" loc="100:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableI2C" ref="0x7f929bfce020" loc="14:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartBit" ref="0x7f929bfc69e8" loc="38:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransferByteCount" ref="0x7f929bfc31d8" loc="45:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitReceiveMode" ref="0x7f929bfc91d8" loc="27:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f929cf6b1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearModeI2C" ref="0x7f929bfd1020" loc="7:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setOwnAddress" ref="0x7f929bfbe108" loc="58:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f929bfbfe38" loc="58:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isI2C" ref="0x7f929bfd48a0" loc="6:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f929cf6b1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableGeneralCall" ref="0x7f929bfba020" loc="69:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableOwnAddress" ref="0x7f929bfb6950" loc="81:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isAccessReadyPending" ref="0x7f929bfb0020" loc="94:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f929cf6b1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isArbitrationLostPending" ref="0x7f929bfae610" loc="97:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f929cf6b1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveReady" ref="0x7f929bfb95a8" loc="74:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableNoAck" ref="0x7f929bfb5070" loc="83:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableStartDetect" ref="0x7f929bfbd9b8" loc="65:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableArbitrationLost" ref="0x7f929bfb39c0" loc="87:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableI2C" ref="0x7f929bfce6d8" loc="15:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShiftClock" ref="0x7f929bfc05e8" loc="53:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableArbitrationLost" ref="0x7f929bfb5e60" loc="86:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAccessReady" ref="0x7f929bfb73e0" loc="77:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransferByteCount" ref="0x7f929bfc3d50" loc="46:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="count" ref="0x7f929bfc3ae0" loc="46:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwnAddressPending" ref="0x7f929bfb0760" loc="95:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f929cf6b1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOwnAddress" ref="0x7f929bfbf770" loc="57:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTransmitReady" ref="0x7f929bfbae50" loc="72:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeI2C" ref="0x7f929bfd1a28" loc="8:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f929c086500"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7f929c086908"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f929bfd17b8" loc="8:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f929c086500"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7f929c086908"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartBit" ref="0x7f929bfc6328" loc="37:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f929cf6b1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWordMode" ref="0x7f929bfcd730" loc="19:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f929cf6b1d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f929bfcd4c0" loc="19:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f929cf6b1d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setData" ref="0x7f929bfc49f8" loc="42:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f929bfc4788" loc="42:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isStartDetectPending" ref="0x7f929bfb2178" loc="90:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f929cf6b1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockSource" ref="0x7f929bfcb020" loc="24:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getWordMode" ref="0x7f929bfcede8" loc="18:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f929cf6b1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShiftClock" ref="0x7f929bfbf020" loc="54:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="shift" ref="0x7f929bfc0cb8" loc="54:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveMode" ref="0x7f929bfd0848" loc="12:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableNoAck" ref="0x7f929bfb5730" loc="84:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveReady" ref="0x7f929bfb9cb0" loc="75:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableGeneralCall" ref="0x7f929bfbb818" loc="68:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPrescaler" ref="0x7f929bfc2e70" loc="50:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scaler" ref="0x7f929bfc2c00" loc="50:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setStopBit" ref="0x7f929bfc7bd8" loc="35:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setReceiveMode" ref="0x7f929bfc8020" loc="29:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isNoAckPending" ref="0x7f929bfb0e70" loc="96:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f929cf6b1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatMode" ref="0x7f929bfcc7a8" loc="22:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f929cf6b1d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f929bfcc538" loc="22:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f929cf6b1d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isTransmitReadyPending" ref="0x7f929bfb1070" loc="92:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f929cf6b1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartByte" ref="0x7f929bfc8df0" loc="32:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isReceiveReadyPending" ref="0x7f929bfb17c8" loc="93:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f929cf6b1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/home/kai/wsnpr/tinyos-main/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/home/kai/wsnpr/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7f929bf1a0d8" loc="90:/home/kai/wsnpr/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/home/kai/wsnpr/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f929cf6b1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7f929bf1a8c8" loc="98:/home/kai/wsnpr/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/home/kai/wsnpr/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/home/kai/wsnpr/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/home/kai/wsnpr/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f929bee3020" loc="56:/home/kai/wsnpr/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/home/kai/wsnpr/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7f929bee2020" loc="73:/home/kai/wsnpr/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/home/kai/wsnpr/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f929bee5750" loc="46:/home/kai/wsnpr/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/home/kai/wsnpr/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f929bee3820" loc="65:/home/kai/wsnpr/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/home/kai/wsnpr/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f929cf6b1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f929bee28e8" loc="81:/home/kai/wsnpr/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/home/kai/wsnpr/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/home/kai/wsnpr/tinyos-main/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/home/kai/wsnpr/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7f929bed7c80" loc="79:/home/kai/wsnpr/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/home/kai/wsnpr/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f929bedd020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f929bed7a10" loc="79:/home/kai/wsnpr/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f929bedd020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7f929bedbe18" loc="53:/home/kai/wsnpr/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/home/kai/wsnpr/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f929cf6b1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7f929bed88f0" loc="62:/home/kai/wsnpr/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/home/kai/wsnpr/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f929cf6b1d0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f929bedd020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f929bed8680" loc="62:/home/kai/wsnpr/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f929bedd020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f929bed71d8" loc="70:/home/kai/wsnpr/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/home/kai/wsnpr/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7f929bedd020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadId48" loc="8:/home/kai/wsnpr/tinyos-main/tos/chips/ds2411/ReadId48.nc">
      <documentation loc="4:/home/kai/wsnpr/tinyos-main/tos/chips/ds2411/ReadId48.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f929bce73b0" loc="13:/home/kai/wsnpr/tinyos-main/tos/chips/ds2411/ReadId48.nc">
        <interfacedef-ref qname="ReadId48"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f929bce7140" loc="13:/home/kai/wsnpr/tinyos-main/tos/chips/ds2411/ReadId48.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OneWireReadWrite" loc="9:/home/kai/wsnpr/tinyos-main/tos/lib/onewire/OneWireReadWrite.nc">
      <documentation loc="5:/home/kai/wsnpr/tinyos-main/tos/lib/onewire/OneWireReadWrite.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f929bcd4358" loc="10:/home/kai/wsnpr/tinyos-main/tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x7f929bcd7a10" loc="10:/home/kai/wsnpr/tinyos-main/tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7f929bcd7d58" loc="10:/home/kai/wsnpr/tinyos-main/tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f929bcd40c8" loc="10:/home/kai/wsnpr/tinyos-main/tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f929bcd2020" loc="11:/home/kai/wsnpr/tinyos-main/tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f929bcd4a30" loc="11:/home/kai/wsnpr/tinyos-main/tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f929bcd4d40" loc="11:/home/kai/wsnpr/tinyos-main/tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:/home/kai/wsnpr/tinyos-main/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:/home/kai/wsnpr/tinyos-main/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f929bcbb420" loc="59:/home/kai/wsnpr/tinyos-main/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f929bcbb420"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f929bcbb650" loc="59:/home/kai/wsnpr/tinyos-main/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f929bcbb650"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x7f929bcba118" loc="66:/home/kai/wsnpr/tinyos-main/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:/home/kai/wsnpr/tinyos-main/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f929bcbb650"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f929bcbbe78" loc="66:/home/kai/wsnpr/tinyos-main/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f929bcbb650"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x7f929bc5f8d0" loc="43:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f929cf6b1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f929bc2c400" loc="63:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7f929bc2da68" loc="63:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x7f929bc2c180" loc="63:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x7f929bc2d328" loc="55:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x7f929bc31b40" loc="49:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f929d8b1020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f929bc318d0" loc="49:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f929d8b1020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x7f929bc41ae8" loc="58:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f929bc41878" loc="58:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x7f929bc45b58" loc="50:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f929cf6b1d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f929bc458e8" loc="50:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f929bc3e938" loc="72:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f929bc3e6c8" loc="72:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f929bc3fa20" loc="65:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f929bc3f7b0" loc="65:/home/kai/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/home/kai/wsnpr/tinyos-main/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/home/kai/wsnpr/tinyos-main/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f929bad6a60" loc="53:/home/kai/wsnpr/tinyos-main/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f929bad6a60"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f929bad3328" loc="61:/home/kai/wsnpr/tinyos-main/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/home/kai/wsnpr/tinyos-main/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f929d8b1020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/home/kai/wsnpr/tinyos-main/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/home/kai/wsnpr/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7f929b954488" loc="53:/home/kai/wsnpr/tinyos-main/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f929b954488"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7f929b950020" loc="64:/home/kai/wsnpr/tinyos-main/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/home/kai/wsnpr/tinyos-main/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f929b954488"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7f929b954cc0" loc="64:/home/kai/wsnpr/tinyos-main/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f929b954488"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x7f929b74e640" loc="31:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f929b74e060" loc="31:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x7f929b74e3c0" loc="31:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x7f929b752950" loc="15:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x7f929b74f760" loc="23:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f929b74f198" loc="23:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f929caa7780"/>
                <typename><typedef-ref name="message_t" ref="0x7f929caa6cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x7f929b74f4e0" loc="23:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x7f929b736b60" loc="54:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x7f929b736450" loc="49:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x7f929b73e1d8" loc="56:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x7f929b73d528" loc="72:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x7f929b73a020" loc="94:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f929b73bcf0" loc="94:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x7f929b73dd40" loc="79:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x7f929b73ecc8" loc="65:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f929b73ea58" loc="65:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x7f929b73a818" loc="100:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x7f929b73b5b8" loc="85:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x7f929b745020" loc="71:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x7f929b7458d8" loc="81:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x7f929b7466c8" loc="62:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x7f929b746458" loc="62:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x7f929b744430" loc="91:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f929b7441c0" loc="91:/home/kai/wsnpr/tinyos-main/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:/home/kai/wsnpr/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:/home/kai/wsnpr/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x7f929b741020" loc="62:/home/kai/wsnpr/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:/home/kai/wsnpr/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x7f929b741bc8" loc="69:/home/kai/wsnpr/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:/home/kai/wsnpr/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f929b741958" loc="69:/home/kai/wsnpr/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x7f929b740640" loc="80:/home/kai/wsnpr/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:/home/kai/wsnpr/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f929b7403d0" loc="80:/home/kai/wsnpr/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/home/kai/wsnpr/tinyos-main/tos/interfaces/UartStream.nc">
      <documentation loc="32:/home/kai/wsnpr/tinyos-main/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f929b615b50" loc="48:/home/kai/wsnpr/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="39:/home/kai/wsnpr/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f929b6155b0" loc="48:/home/kai/wsnpr/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f929b6158d0" loc="48:/home/kai/wsnpr/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x7f929b6104e0" loc="79:/home/kai/wsnpr/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="74:/home/kai/wsnpr/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f929b610270" loc="79:/home/kai/wsnpr/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7f929b60f2a0" loc="90:/home/kai/wsnpr/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="81:/home/kai/wsnpr/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f929b610c58" loc="90:/home/kai/wsnpr/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f929b60f020" loc="90:/home/kai/wsnpr/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x7f929b611258" loc="65:/home/kai/wsnpr/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="59:/home/kai/wsnpr/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x7f929b60ea38" loc="99:/home/kai/wsnpr/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="92:/home/kai/wsnpr/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f929b60e160" loc="99:/home/kai/wsnpr/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f929b60e480" loc="99:/home/kai/wsnpr/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f929b60e7a8" loc="99:/home/kai/wsnpr/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x7f929b611ad0" loc="72:/home/kai/wsnpr/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="67:/home/kai/wsnpr/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f929b614358" loc="57:/home/kai/wsnpr/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="50:/home/kai/wsnpr/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f929b6139f8" loc="57:/home/kai/wsnpr/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f929b613d18" loc="57:/home/kai/wsnpr/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f929b6140c8" loc="57:/home/kai/wsnpr/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="41:/home/kai/wsnpr/tinyos-main/tos/interfaces/UartByte.nc">
      <documentation loc="36:/home/kai/wsnpr/tinyos-main/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f929b5f1ad8" loc="50:/home/kai/wsnpr/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="43:/home/kai/wsnpr/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f929b5f1868" loc="50:/home/kai/wsnpr/tinyos-main/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sendAvail" ref="0x7f929b5ee328" loc="59:/home/kai/wsnpr/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="52:/home/kai/wsnpr/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; sendAvail: is space available for another TX byte.</short>
          <long>&#10; sendAvail: is space available for another TX byte.&#10;&#10; @return TRUE&#9;the TX subsystem can take another byte.  ie.&#10;&#9;&#9;&#9;UartByte.send() would not block if called.&#10;&#9;     FALSE&#9;TX pipeline is full, UartByte.send() would block.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f929cf6b1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7f929b5ec2a0" loc="69:/home/kai/wsnpr/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="61:/home/kai/wsnpr/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received or the timeout occurs.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7f929b5eeb58" loc="69:/home/kai/wsnpr/tinyos-main/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x7f929b5ec020" loc="69:/home/kai/wsnpr/tinyos-main/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receiveAvail" ref="0x7f929b5eb020" loc="79:/home/kai/wsnpr/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="71:/home/kai/wsnpr/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; receiveAvail: incoming has another byte available.</short>
          <long>&#10; receiveAvail: incoming has another byte available.&#10;&#10; @return TRUE&#9;the RX subsystem has another byte to receive.  ie.&#10;&#9;&#9;&#9;UartByte.receive() would not block if called.&#10;&#9;     FALSE&#9;RX pipeline is empty, UartByte.receive() would block&#10;&#9;&#9;&#9;waiting for a byte and/or the timeout.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f929cf6b1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430UartConfigure" loc="38:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UartConfigure.nc">
      <documentation loc="31:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7f929b5e4648" loc="39:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UartConfigure.nc">
        <interfacedef-ref qname="Msp430UartConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f929c098180"/>
              <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f929c098588"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/home/kai/wsnpr/tinyos-main/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/home/kai/wsnpr/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f929b5598e8" loc="95:/home/kai/wsnpr/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/home/kai/wsnpr/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f929b558110" loc="105:/home/kai/wsnpr/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/home/kai/wsnpr/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:/home/kai/wsnpr/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:/home/kai/wsnpr/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x7f929b49b020" loc="62:/home/kai/wsnpr/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:/home/kai/wsnpr/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DeviceMetadata" loc="40:/home/kai/wsnpr/tinyos-main/tos/interfaces/DeviceMetadata.nc">
      <documentation loc="32:/home/kai/wsnpr/tinyos-main/tos/interfaces/DeviceMetadata.nc">
        <short>&#10; DeviceMetadata is a way to obtain information about a generic data&#10; access device represented by a SID.</short>
        <long>&#10; DeviceMetadata is a way to obtain information about a generic data&#10; access device represented by a SID. See TEP109 and TEP114 for details.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="getSignificantBits" ref="0x7f929b434648" loc="41:/home/kai/wsnpr/tinyos-main/tos/interfaces/DeviceMetadata.nc">
        <interfacedef-ref qname="DeviceMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AdcConfigure" loc="45:/home/kai/wsnpr/tinyos-main/tos/interfaces/AdcConfigure.nc">
      <documentation loc="36:/home/kai/wsnpr/tinyos-main/tos/interfaces/AdcConfigure.nc">
        <short> &#10; This interface is intended to be provided by an ADC client and used by the&#10; ADC subsystem to retrieve the client's ADC configuration.</short>
        <long> &#10; This interface is intended to be provided by an ADC client and used by the&#10; ADC subsystem to retrieve the client's ADC configuration. &#10; &#10; @author Jan Hauer &#10; @see  Please refer to TEP 101 for more information about this interface and&#10; its intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="adc_config_t" ref="0x7f929b413c88" loc="45:/home/kai/wsnpr/tinyos-main/tos/interfaces/AdcConfigure.nc">
          <interfacedef-ref qname="AdcConfigure"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="adc_config_t" scoped="" ref="0x7f929b413c88"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getConfiguration" ref="0x7f929b4105f0" loc="58:/home/kai/wsnpr/tinyos-main/tos/interfaces/AdcConfigure.nc">
        <documentation loc="48:/home/kai/wsnpr/tinyos-main/tos/interfaces/AdcConfigure.nc">
          <short> &#10; Returns the configuration of an ADC client.</short>
          <long> &#10; Returns the configuration of an ADC client.  &#60;code>adc_config_t&#60;/code> is&#10; a hardware specific data type that contains all information necessary to&#10; configure the respective ADC hardware for the client. A client MUST always&#10; return the same configuration and, if configuration data is passed as a&#10; pointer, the ADC subsystem (HIL component) MUST NOT reference it after the&#10; return of this command.&#10;  &#10; @return chip specific configuration.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AdcConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="adc_config_t" scoped="" ref="0x7f929b413c88"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadNow" loc="52:/home/kai/wsnpr/tinyos-main/tos/interfaces/ReadNow.nc">
      <documentation loc="33:/home/kai/wsnpr/tinyos-main/tos/interfaces/ReadNow.nc">
        <short>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values.</short>
        <long>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values. The type of the value is given as a&#10; template argument. Because this interface is split-phase, these&#10; values may be backed by hardware. Providers of this interface&#10; should also provide a Resource interface, and this interface should&#10; only be used after the resource has been acquired. Otherwise, the&#10; low-latency requirement may be impossible to meet.&#10;&#10; &#60;p>&#10; This interface has the same calling semantics as the Read interface&#10; described in TEP 114, except that it is async.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-16 18:58:51 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f929b40bcc0" loc="52:/home/kai/wsnpr/tinyos-main/tos/interfaces/ReadNow.nc">
          <interfacedef-ref qname="ReadNow"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f929b40bcc0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f929b4085c0" loc="58:/home/kai/wsnpr/tinyos-main/tos/interfaces/ReadNow.nc">
        <documentation loc="53:/home/kai/wsnpr/tinyos-main/tos/interfaces/ReadNow.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f929b4072e0" loc="66:/home/kai/wsnpr/tinyos-main/tos/interfaces/ReadNow.nc">
        <documentation loc="60:/home/kai/wsnpr/tinyos-main/tos/interfaces/ReadNow.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f929b40bcc0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f929b408d08" loc="66:/home/kai/wsnpr/tinyos-main/tos/interfaces/ReadNow.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7f929b407060" loc="66:/home/kai/wsnpr/tinyos-main/tos/interfaces/ReadNow.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f929b40bcc0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Adc12SingleChannel" loc="69:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
      <documentation loc="36:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <short> &#10; &#10; This interface provides access to the ADC12 on the level of HAL.</short>
        <long> &#10; &#10; This interface provides access to the ADC12 on the level of HAL. It can be&#10; used to sample a single adc channel once or repeatedly (one event is&#10; signalled per conversion result) or perform multiple conversions for a&#10; single channel once or repeatedly (one event is signalled per multiple&#10; conversion results). It cannot be used to sample different adc channels with&#10; a single command (use the Msp430Adc12MultiChannel interface instead).&#10; Sampling a channel requires calling a sequence of two commands, configureX()&#10; and getData(), where X is either 'Single', 'SingleRepeat', 'Multiple' or&#10; 'MultipleRepeat'. Conversion results will be signalled by the&#10; dataReadySingle() or dataReadyMultiple() event, depending on the previous&#10; configuration, i.e. there are four possible sequences:&#10; &#10; &#60;p> configureSingle()          -> ( getData() -> singleDataReady() )*&#10; &#60;p> configureSingleRepeat()    -> ( getData() -> singleDataReady() )*&#10; &#60;p> configureMultiple()        -> ( getData() -> multipleDataReady() )*&#10; &#60;p> configureMultipleRepeat()  -> getData() -> multipleDataReady()&#10;&#10; &#60;p> where configureX() and getData() are commands called by the client and&#10; singleDataReady() and multipleDataReady() are events signalled back to the&#10; client by the adc subsystem. Note that a configuration is valid until the&#10; client reconfigures or releases the ADC (using the Resource interface),&#10; except for configureMultipleRepeat(), which is only valid for a single call&#10; to getData(). This means that after a successful configuration with, for&#10; example, configureSingle() the client may call getData() more than once&#10; without reconfiguring the ADC in between (if the client has not released the&#10; ADC via the Resource interface).&#10;&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x7f929b3ea328" loc="189:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="180:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Starts sampling an adc channel using the configuration as specified by&#10; the last call to any of the four available configuration commands.</short>
          <long> &#10; Starts sampling an adc channel using the configuration as specified by&#10; the last call to any of the four available configuration commands.&#10;&#10; @return SUCCESS means that the conversion was started successfully and an&#10; event singleDataReady() or multipleDataReady() will be signalled&#10; (depending on the previous configuration). Otherwise no such event will be&#10; signalled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configureSingle" ref="0x7f929b3f33b0" loc="84:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="72:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Configures the ADC to perform a single conversion.</short>
          <long> &#10; Configures the ADC to perform a single conversion. Any previous&#10; configuration will be overwritten.  If SUCCESS is returned calling&#10; &#60;code>getData()&#60;/code> will start the conversion immediately and a&#10; &#60;code>singleDataReady()&#60;/code> event will be signalled with the conversion&#10; result when the conversion has finished.&#10;&#10; @param config ADC12 configuration data.  &#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start the conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f929b42cb18"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f929b42c250"/></type-tag>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f929b3f3140" loc="84:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f929b42cb18"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f929b42c250"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="configureSingleRepeat" ref="0x7f929b3f1810" loc="106:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="86:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Configures the ADC for repeated single channel conversion mode.</short>
          <long> &#10; Configures the ADC for repeated single channel conversion mode. Any&#10; previous configuration will be overwritten. If SUCCESS is returned calling&#10; &#60;code>getData()&#60;/code> will start sampling the adc channel periodically&#10; (the first conversion is started immediately).  The sampling period is&#10; specified by the &#60;code>jiffies&#60;/code> parameter, which defines the time&#10; between successive conversions in terms of clock ticks of clock source&#10; &#34;sampcon_ssel&#34; and clock input divider &#34;sampcon_id&#34; as specified in the&#10; &#60;code>config&#60;/code> parameter. If jiffies is zero successive conversions&#10; are performed as quickly as possible.  Conversion result are signalled&#10; until the client returns &#60;code>FAIL&#60;/code> in the&#10; &#60;code>singleDataReady()&#60;/code> event handler.&#10; &#10; @param config ADC12 configuration data.  &#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34; and&#10; input divider &#34;sampcon_id&#34;.&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start with the first conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f929b42cb18"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f929b42c250"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f929b3f1248" loc="106:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f929b42cb18"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f929b42c250"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="jiffies" ref="0x7f929b3f1590" loc="106:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="configureMultipleRepeat" ref="0x7f929b3eb368" loc="177:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="140:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10;&#10; Configures the ADC for sampling a channel multiple times repeatedly.</short>
          <long> &#10;&#10; Configures the ADC for sampling a channel multiple times repeatedly.  Any&#10; previous configuration will be overwritten. In contrast to the&#10; &#60;code>configureSingleRepeat()&#60;/code> command this configuration means that&#10; an event with &#60;code>numSamples&#60;/code> conversion results will be&#10; signalled, where 0 &#60; &#60;code>numSamples&#60;/code> &#60;= 16. In contrast to the&#10; &#60;code>configureMultiple()&#60;/code> command, this configuration means that&#10; &#60;code>numSamples&#60;/code> conversion results will be signalled repeatedly&#10; until the client returns &#60;code>FAIL&#60;/code> in the&#10; &#60;code>multipleDataReady()&#60;/code> event handler. &#10;&#10; If &#60;code>configureMultipleRepeat()&#60;/code> returns SUCCESS calling&#10; &#60;code>getData()&#60;/code> will start the the first conversion immediately.&#10; The sampling period is specified by the &#60;code>jiffies&#60;/code> parameter,&#10; which defines the time between successive conversions in terms of clock&#10; ticks of clock source &#34;sampcon_ssel&#34; and clock input divider &#34;sampcon_id&#34;&#10; as specified in the &#60;code>config&#60;/code> parameter. If jiffies is zero&#10; successive conversions are performed as quickly as possible. After&#10; &#60;code>numSamples&#60;/code> conversions an event&#10; &#60;code>multipleDataReady()&#60;/code> is signalled with &#60;code>numSamples&#60;/code>&#10; conversion results. If the client returns &#60;code>SUCCESS&#60;/code> in the&#10; &#60;code>multipleDataReady()&#60;/code> event handler, &#60;code>numSamples&#60;/code>&#10; new conversions will be performed, otherwise not.&#10;&#10; @param config ADC12 configuration data.  &#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34;&#10; and input divider &#34;sampcon_id&#34;.&#10; @param buffer The user-allocated buffer in which the conversion results&#10; will be stored. It must have at least &#60;code>numSamples&#60;/code> entries,&#10; i.e. it must have a size of at least &#60;code>numSamples&#60;/code> * 2 byte.&#10; @param numSamples Number of adc samples to take, 0 &#60;&#10; &#60;code>numSamples&#60;/code> &#60;= 16&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start with the first conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f929b42cb18"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f929b42c250"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f929b3ec180" loc="177:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f929b42cb18"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f929b42c250"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="buffer" ref="0x7f929b3ec9a8" loc="177:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7f929b3ecd00" loc="177:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </variable>
          <variable name="jiffies" ref="0x7f929b3eb0c8" loc="177:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="multipleDataReady" ref="0x7f929b3e8b38" loc="227:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="208:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Multiple ADC conversion results are ready.</short>
          <long> &#10; Multiple ADC conversion results are ready.  If the ADC was configured&#10; with the &#60;code>configureMultiple()&#60;/code> command, then the return value&#10; is ignored. If the ADC was configured with the&#10; &#60;code>configureMultipleRepeat()&#60;/code> command then the returned pointer&#10; defines where to store the next &#60;code>numSamples&#60;/code>&#10; conversion results (the client must make sure that the buffer is big&#10; enough!).  Returning a null pointer means that the repeated conversion&#10; mode will be stopped.&#10; &#10; @param buffer Conversion results (lower 12 bit are valid, respectively).&#10; @param numSamples Number of samples stored in &#60;code>buffer&#60;/code> &#10;&#10; @return&#10; A null pointer stops a repeated conversion mode. Any non-zero value is&#10; interpreted as the next buffer, which must have at least&#10; &#60;code>numSamples&#60;/code> entries. The return value is ignored if the ADC&#10; was configured with &#60;code>configureMultiple()&#60;/code>.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buffer" ref="0x7f929b3e84d8" loc="227:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7f929b3e8840" loc="227:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="configureMultiple" ref="0x7f929b3efa90" loc="138:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="109:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Configures the ADC for sampling a channel &#60;code>numSamples&#60;/code> times&#10; with a given sampling period.</short>
          <long> &#10; Configures the ADC for sampling a channel &#60;code>numSamples&#60;/code> times&#10; with a given sampling period. Any previous configuration will be&#10; overwritten.  In contrast to the &#60;code>configureSingleRepeat()&#60;/code>&#10; command, this configuration means that only one event will be signalled&#10; after all samples have been taken (which is useful for high-frequency&#10; sampling). If SUCCESS is returned calling &#60;code>getData()&#60;/code> will&#10; start sampling the adc channel &#60;code>numSamples&#60;/code> times and the first&#10; conversion is started immediately. Conversion results are stored in a&#10; buffer allocated by the client (the &#60;code>buffer&#60;/code>&#10; parameter). The sampling period is specified by the &#60;code>jiffies&#60;/code>&#10; parameter, which defines the time between successive conversions in terms&#10; of clock ticks of clock source &#34;sampcon_ssel&#34; and clock input divider&#10; &#34;sampcon_id&#34; as specified in the &#60;code>config&#60;/code> parameter. If jiffies&#10; is zero successive conversions are performed as quickly as possible. After&#10; &#60;code>numSamples&#60;/code> conversions an event&#10; &#60;code>multipleDataReady()&#60;/code> is signalled with the conversion results.&#10;&#10; @param config ADC12 configuration data.  &#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34;&#10; and input divider &#34;sampcon_id&#34;.&#10; @param buffer The user-allocated buffer in which the conversion results&#10; will be stored. It must have at least &#60;code>numSamples&#60;/code> entries,&#10; i.e. it must have a size of at least &#60;code>numSamples&#60;/code> * 2 byte.&#10; @param numSamples Number of adc samples&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start with the first conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f929b42cb18"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f929b42c250"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f929b3f08e8" loc="138:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f929b42cb18"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f929b42c250"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="buffer" ref="0x7f929b3ef140" loc="138:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7f929b3ef4a8" loc="138:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
            </type-int>
          </variable>
          <variable name="jiffies" ref="0x7f929b3ef7f0" loc="138:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="singleDataReady" ref="0x7f929b3e9020" loc="206:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="191:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; A single ADC conversion result is ready.</short>
          <long> &#10; A single ADC conversion result is ready. If the ADC was configured with&#10; the &#60;code>configureSingle()&#60;/code> command, then the return value is&#10; ignored. If the ADC was configured with the&#10; &#60;code>configureSingleRepeat()&#60;/code> command then the return value tells&#10; whether another conversion should be performed (&#60;code>SUCCESS()&#60;/code>) or&#10; not (&#60;code>FAIL&#60;/code>).&#10; &#10; @param data Conversion result (lower 12 bit).  &#10;&#10; @return If this event is signalled as response to a call to&#10; &#60;code>configureSingleRepeat()&#60;/code> then &#60;code>SUCCESS&#60;/code> results in&#10; another sampling and &#60;code>FAIL&#60;/code> stops the repeated sampling.&#10; Otherwise the return value is ignored.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f929b3eac70" loc="206:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Adc12MultiChannel" loc="51:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
      <documentation loc="36:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <short> &#10; This interface provides access to the ADC12 on the level of HAL.</short>
        <long> &#10; This interface provides access to the ADC12 on the level of HAL. It can be&#10; used to sample up to 16 (different) ADC channels. It separates between&#10; configuration and data collection: every time a client has been granted&#10; access to the ADC subsystem (via the Resource interface), it first has to&#10; configure the ADC.  Afterwards the client may call getData() more than once&#10; without reconfiguring the ADC in between (if the client has not released the&#10; ADC via the Resource interface), i.e.&#60;p>&#10; &#10;    configure() -> ( getData() -> dataReady() )*&#10;&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x7f929b39a110" loc="97:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <documentation loc="90:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
          <short> &#10; Starts sampling the adc channels using the configuration as specified by&#10; the last call to &#60;code>configure()&#60;/code>.</short>
          <long> &#10; Starts sampling the adc channels using the configuration as specified by&#10; the last call to &#60;code>configure()&#60;/code>.&#10;&#10; @return SUCCESS means that the conversion was started successfully and an&#10; event dataReady() will be signalled. Otherwise no event will be signalled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7f929b39b4a0" loc="86:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <documentation loc="54:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
          <short> &#10; Configures the ADC to perform conversion(s) on multiple channels.</short>
          <long> &#10; Configures the ADC to perform conversion(s) on multiple channels.  Any&#10; previous configuration will be overwritten.  If SUCCESS is returned&#10; calling &#60;code>getData()&#60;/code> will start the conversion immediately and a&#10; &#60;code>dataReady()&#60;/code> event will be signalled with the conversion&#10; result when the conversion has finished.&#10;&#10; @param config Main ADC12 configuration and configuration of the first&#10; channel &#10;&#10; @param memctl List of additional channels and respective reference&#10; voltages&#10;&#10; @param numMemctl Number of entries in the list&#10; &#10; @param buffer Buffer to store the conversion results, it must have&#10; numSamples entries. Results will be stored in the order the channels where&#10; specified.&#10;&#10; @param numSamples Total number of samples. Note: numSamples %&#10; (numMemctl+1) must be zero. For example, to sample every channel twice use&#10; numSamples = (numMemctl+1) * 2&#10;&#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34;&#10; and input divider &#34;sampcon_id&#34;. Samples are taken equally-spaced in&#10; time iterating round-robin over the channels (different channels are  &#10; not sampled simultaneously but one after another).&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start the conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f929cf60ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f929b42cb18"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f929b42c250"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f929b42b700"/>
                <typename><typedef-ref name="adc12memctl_t" ref="0x7f929b42bbb8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f929b39d020" loc="86:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f929b42cb18"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f929b42c250"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="memctl" ref="0x7f929b39d3e8" loc="87:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f929b42b700"/>
                <typename><typedef-ref name="adc12memctl_t" ref="0x7f929b42bbb8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="numMemctl" ref="0x7f929b39d738" loc="87:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </variable>
          <variable name="buffer" ref="0x7f929b39dab0" loc="87:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7f929b39de38" loc="88:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
            </type-int>
          </variable>
          <variable name="jiffies" ref="0x7f929b39b1e0" loc="88:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7f929b399020" loc="107:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <documentation loc="99:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
          <short> &#10; Conversion results are ready.</short>
          <long> &#10; Conversion results are ready. Results are stored in the buffer in the&#10; order the channels where specified in the &#60;code>configure()&#60;/code>&#10; command, i.e. every (numMemctl+1)-th entry maps to the same channel. &#10; &#10; @param buffer Conversion results (lower 12 bit are valid, respectively).&#10; @param numSamples Number of results stored in &#60;code>buffer&#60;/code> &#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buffer" ref="0x7f929b39a9a8" loc="107:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7f929b39ad10" loc="107:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Adc12Overflow" loc="44:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
      <documentation loc="36:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
        <short> &#10; Signals an ADC12MEMx overflow or conversion time overflow condition to the&#10; client.</short>
        <long> &#10; Signals an ADC12MEMx overflow or conversion time overflow condition to the&#10; client.&#10;&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <function event="" provided="0" name="memOverflow" ref="0x7f929b39f7f0" loc="49:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
        <documentation loc="46:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
          <short> &#10; An ADC12MEMx overflow condition has occured.</short>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="conversionTimeOverflow" ref="0x7f929b396020" loc="54:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
        <documentation loc="51:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
          <short> &#10; A conversion time overflow condition has occured.</short>
          <long> &#10; A conversion time overflow condition has occured.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAdc12" loc="45:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
      <documentation loc="36:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <short>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.</short>
        <long>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.&#10;&#10; @author Jan Hauer&#10; @see  Please refer to TEP 101 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getCtl0" ref="0x7f929b380650" loc="63:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="59:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 control register ADC12CTL0.</short>
          <long> &#10; Returns the ADC12 control register ADC12CTL0.&#10; @return ADC12CTL0&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f929b419020"/>
            <typename><typedef-ref name="adc12ctl0_t" ref="0x7f929b419a48"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMCtl" ref="0x7f929b37e5e0" loc="82:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="77:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 conversion memory control register ADC12MCTLx.</short>
          <long> &#10; Returns the ADC12 conversion memory control register ADC12MCTLx.&#10; @param idx The register index (the 'x' in ADC12MCTLx) [0..15] &#10; @return memControl ADC12MCTLx register data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f929b42b700"/>
            <typename><typedef-ref name="adc12memctl_t" ref="0x7f929b42bbb8"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f929b37e370" loc="82:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetIFGs" ref="0x7f929b37ba88" loc="106:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="103:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Resets the ADC12 interrupt flag register, ADC12IFG.</short>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isBusy" ref="0x7f929b37ac00" loc="118:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="114:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 BUSY flag.</short>
          <long> &#10; Returns the ADC12 BUSY flag.&#10; @return ADC12BUSY &#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f929cf6b1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="conversionDone" ref="0x7f929b37a4a0" loc="112:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="108:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Signals a conversion result.</short>
          <long> &#10; Signals a conversion result. &#10; @param iv ADC12 interrupt vector value 0x6, 0x8, ... , 0x24&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="iv" ref="0x7f929b37a230" loc="112:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtl1" ref="0x7f929b380df8" loc="68:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="65:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> Returns the ADC12 control register ADC12CTL1.</short>
          <long> Returns the ADC12 control register ADC12CTL1. &#10;  @return ADC12CTL1&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f929b417078"/>
            <typename><typedef-ref name="adc12ctl1_t" ref="0x7f929b417940"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMCtl" ref="0x7f929b37fb38" loc="75:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="70:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 conversion memory control register ADC12MCTLx.</short>
          <long> &#10; Sets the ADC12 conversion memory control register ADC12MCTLx.&#10; @param idx The register index (the 'x' in ADC12MCTLx) [0..15] &#10; @param memControl ADC12MCTLx register data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f929b42b700"/>
              <typename><typedef-ref name="adc12memctl_t" ref="0x7f929b42bbb8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f929b37f520" loc="75:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </variable>
          <variable name="memControl" ref="0x7f929b37f8b8" loc="75:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f929b42b700"/>
              <typename><typedef-ref name="adc12memctl_t" ref="0x7f929b42bbb8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startConversion" ref="0x7f929b379bc0" loc="128:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="125:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short>&#10; Starts a conversion.</short>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtl0" ref="0x7f929b382478" loc="51:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="47:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 control register ADC12CTL0.</short>
          <long> &#10; Sets the ADC12 control register ADC12CTL0.&#10; @param control0 ADC12CTL0 register data.&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f929b419020"/>
              <typename><typedef-ref name="adc12ctl0_t" ref="0x7f929b419a48"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control0" ref="0x7f929b382208" loc="51:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f929b419020"/>
              <typename><typedef-ref name="adc12ctl0_t" ref="0x7f929b419a48"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMem" ref="0x7f929b37d0a8" loc="89:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="84:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 conversion memory register ADC12MEMx.</short>
          <long> &#10; Returns the ADC12 conversion memory register ADC12MEMx.&#10; @param idx The register index (the 'x' in ADC12MEMx) [0..15] &#10; @return ADC12MEMx &#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f929b37edb8" loc="89:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f929d8b2790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setIEFlags" ref="0x7f929b37dab0" loc="95:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="91:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 interrupt enable register, ADC12IE.</short>
          <long> &#10; Sets the ADC12 interrupt enable register, ADC12IE.&#10; @param mask Bitmask (0 means interrupt disabled, 1 menas interrupt enabled) &#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f929b37d840" loc="95:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIEFlags" ref="0x7f929b37b328" loc="101:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="97:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 interrupt enable register, ADC12IE.</short>
          <long> &#10; Returns the ADC12 interrupt enable register, ADC12IE.&#10; @return ADC12IE&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f929d8b2b20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopConversion" ref="0x7f929b3793a0" loc="123:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="120:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short>&#10; Stops a conversion.</short>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableConversion" ref="0x7f929b378328" loc="133:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="130:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short>&#10; Enables conversion (sets the ENC bit).</short>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtl1" ref="0x7f929b382e60" loc="57:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="53:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 control register ADC12CTL1.</short>
          <long> &#10; Sets the ADC12 control register ADC12CTL1. &#10; @param control1 ADC12CTL1 register data.&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f929b417078"/>
              <typename><typedef-ref name="adc12ctl1_t" ref="0x7f929b417940"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control1" ref="0x7f929b382bf0" loc="57:/home/kai/wsnpr/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f929b417078"/>
              <typename><typedef-ref name="adc12ctl1_t" ref="0x7f929b417940"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
