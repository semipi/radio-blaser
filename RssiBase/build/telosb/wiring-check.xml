<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="43:RssiBaseAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7ff8a5464b28"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7ff8a5461650"/></to>
    </wire>
    <wire loc="72:/home/paul/wsnpr/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7ff8a5461650"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7ff8a5460c40"/></to>
    </wire>
    <wire loc="48:RssiBaseAppC.nc">
      <from><interface-ref name="LaserTimer" scoped="" ref="0x7ff8a528bdf8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7ff8a3e00128"/></to>
    </wire>
    <wire loc="52:/home/paul/wsnpr/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7ff8a3e00128"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7ff8a436d6a0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="51:RssiBaseAppC.nc">
      <from><interface-ref name="LaserSensor" scoped="" ref="0x7ff8a5286020"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7ff8a3df83b0"/></to>
    </wire>
    <wire loc="47:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/chips/s1087/HamamatsuS1087ParC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7ff8a3df83b0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7ff8a30b7a78"/></to>
    </wire>
    <wire loc="55:RssiBaseAppC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7ff8a5270888"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7ff8a4f2a908"/></to>
    </wire>
    <wire loc="92:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7ff8a4f2a908"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7ff8a4efd7e8"/></to>
    </wire>
    <wire loc="67:RssiBaseAppC.nc">
      <from><interface-ref name="RssiMsgIntercept" scoped="" ref="0x7ff8a52954e0"/></from>
      <to><interface-ref name="RadioIntercept" scoped="" ref="0x7ff8a524edd8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="37:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ff8a545fa40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ff8a3ae0020"/></to>
    </wire>
    <wire loc="96:/home/paul/wsnpr/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ff8a545fa40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ff8a3085de0"/></to>
    </wire>
    <wire loc="56:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ff8a545fa40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ff8a3d4c5f8"/></to>
    </wire>
    <wire loc="103:/home/paul/wsnpr/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ff8a545fa40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ff8a30fb080"/></to>
    </wire>
    <wire loc="59:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ff8a545fa40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ff8a4117110"/></to>
    </wire>
    <wire loc="104:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ff8a545fa40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ff8a424cc28"/></to>
    </wire>
    <wire loc="60:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ff8a545fa40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ff8a42d0020"/></to>
    </wire>
    <wire loc="58:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ff8a545fa40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ff8a42efe80"/></to>
    </wire>
    <wire loc="52:/home/paul/wsnpr/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ff8a545fa40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ff8a4313b38"/></to>
    </wire>
    <wire loc="53:/home/paul/wsnpr/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ff8a545fa40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ff8a4436080"/></to>
    </wire>
    <wire loc="66:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ff8a545fa40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ff8a4531df8"/></to>
    </wire>
    <wire loc="62:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ff8a545fa40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ff8a4617b28"/></to>
    </wire>
    <wire loc="63:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ff8a545fa40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ff8a4dbe3e0"/></to>
    </wire>
    <wire loc="103:/home/paul/wsnpr/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ff8a545fa40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ff8a33da8e0"/></to>
    </wire>
    <wire loc="74:/home/paul/wsnpr/tinyos-main/tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ff8a545fa40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ff8a4aaa5d8"/></to>
    </wire>
    <wire loc="60:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ff8a545fa40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ff8a4e6b020"/></to>
    </wire>
    <wire loc="67:/home/paul/wsnpr/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7ff8a52b4308"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7ff8a5928390"/></to>
    </wire>
    <wire loc="53:/home/paul/wsnpr/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7ff8a5928390"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7ff8a54ec940"/></to>
    </wire>
    <wire loc="68:/home/paul/wsnpr/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7ff8a52b4ce0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ff8a5462980"/></to>
    </wire>
    <wire loc="48:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7ff8a5462980"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ff8a545dae0"/></to>
    </wire>
    <wire loc="71:/home/paul/wsnpr/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7ff8a52a7418"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7ff8a545fa40"/></to>
    </wire>
    <wire loc="49:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7ff8a545a1d8"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x7ff8a543d0e8"/></to>
    </wire>
    <wire loc="46:/home/paul/wsnpr/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7ff8a543d0e8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ff8a5439020"/></to>
    </wire>
    <wire loc="50:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7ff8a545a878"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ff8a545c888"/></to>
    </wire>
    <wire loc="56:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x7ff8a5459020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ff8a5188020"/></to>
    </wire>
    <wire loc="46:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7ff8a5439020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ff8a5424d10"/></to>
    </wire>
    <wire loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x7ff8a54322b8"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x7ff8a54223c0"/></to>
    </wire>
    <wire loc="48:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7ff8a5560cc0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7ff8a5421660"/></to>
    </wire>
    <wire loc="113:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x7ff8a53e0060"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7ff8a5326c80"/></to>
    </wire>
    <wire loc="126:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x7ff8a53cf060"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7ff8a531ec80"/></to>
    </wire>
    <wire loc="108:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x7ff8a53d8868"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7ff8a532bc58"/></to>
    </wire>
    <wire loc="149:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x7ff8a53bc3d0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7ff8a5306c58"/></to>
    </wire>
    <wire loc="107:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x7ff8a53de0c0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7ff8a532b020"/></to>
    </wire>
    <wire loc="148:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x7ff8a53c4868"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7ff8a5306020"/></to>
    </wire>
    <wire loc="170:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x7ff8a53b93d0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7ff8a52efc58"/></to>
    </wire>
    <wire loc="154:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x7ff8a53ca120"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7ff8a5300c80"/></to>
    </wire>
    <wire loc="99:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x7ff8a53e1818"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7ff8a5377c80"/></to>
    </wire>
    <wire loc="135:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x7ff8a53be3d0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7ff8a5315c58"/></to>
    </wire>
    <wire loc="134:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x7ff8a53c6d40"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7ff8a5315020"/></to>
    </wire>
    <wire loc="133:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x7ff8a53ce400"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7ff8a5317c80"/></to>
    </wire>
    <wire loc="115:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x7ff8a53d7868"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7ff8a5324c58"/></to>
    </wire>
    <wire loc="156:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x7ff8a53bb3d0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7ff8a52fec58"/></to>
    </wire>
    <wire loc="140:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x7ff8a53cd898"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7ff8a530fc80"/></to>
    </wire>
    <wire loc="114:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x7ff8a53dede0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7ff8a5324020"/></to>
    </wire>
    <wire loc="93:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7ff8a53e9378"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7ff8a5385960"/></to>
    </wire>
    <wire loc="155:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x7ff8a53c36e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7ff8a52fe020"/></to>
    </wire>
    <wire loc="106:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x7ff8a53e8bb8"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7ff8a532dc80"/></to>
    </wire>
    <wire loc="161:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x7ff8a53c9588"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7ff8a52f9c80"/></to>
    </wire>
    <wire loc="101:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x7ff8a53d2960"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7ff8a5333c58"/></to>
    </wire>
    <wire loc="142:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x7ff8a53bd3d0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7ff8a530dc58"/></to>
    </wire>
    <wire loc="100:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x7ff8a53d9378"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7ff8a5333020"/></to>
    </wire>
    <wire loc="141:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x7ff8a53c5aa8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7ff8a530d020"/></to>
    </wire>
    <wire loc="163:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x7ff8a53ba3d0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7ff8a52f7c58"/></to>
    </wire>
    <wire loc="147:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x7ff8a53ccd30"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7ff8a5308c80"/></to>
    </wire>
    <wire loc="120:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x7ff8a53d1830"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7ff8a537e1e8"/></to>
    </wire>
    <wire loc="162:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x7ff8a53c2558"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7ff8a52f7020"/></to>
    </wire>
    <wire loc="128:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x7ff8a53c03d0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7ff8a531cc58"/></to>
    </wire>
    <wire loc="169:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x7ff8a53c13d0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7ff8a52ef020"/></to>
    </wire>
    <wire loc="127:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x7ff8a53c6020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7ff8a531c020"/></to>
    </wire>
    <wire loc="168:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x7ff8a53c8a20"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7ff8a52f1c80"/></to>
    </wire>
    <wire loc="94:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7ff8a5383700"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7ff8a53830c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7ff8a5383d18"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x7ff8a52e8520"/></to>
    </wire>
    <wire loc="96:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7ff8a5382368"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x7ff8a52e8c68"/></to>
    </wire>
    <wire loc="102:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7ff8a5332a90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7ff8a5385960"/></to>
    </wire>
    <wire loc="103:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7ff8a532f100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7ff8a53830c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7ff8a532aa90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7ff8a5385960"/></to>
    </wire>
    <wire loc="110:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7ff8a5328100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7ff8a53830c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7ff8a5323a90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7ff8a5385960"/></to>
    </wire>
    <wire loc="117:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7ff8a5320100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7ff8a53830c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7ff8a537c020"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7ff8a537d8a0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7ff8a537c638"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x7ff8a52e7418"/></to>
    </wire>
    <wire loc="123:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7ff8a537cc50"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x7ff8a52e7b60"/></to>
    </wire>
    <wire loc="129:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7ff8a531ba90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7ff8a537e1e8"/></to>
    </wire>
    <wire loc="130:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7ff8a5319100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7ff8a537d8a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7ff8a5314a90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7ff8a537e1e8"/></to>
    </wire>
    <wire loc="137:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7ff8a5312100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7ff8a537d8a0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7ff8a530ca90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7ff8a537e1e8"/></to>
    </wire>
    <wire loc="144:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7ff8a530a100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7ff8a537d8a0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7ff8a5305a90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7ff8a537e1e8"/></to>
    </wire>
    <wire loc="151:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7ff8a5303100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7ff8a537d8a0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7ff8a52fda90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7ff8a537e1e8"/></to>
    </wire>
    <wire loc="158:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7ff8a52fb100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7ff8a537d8a0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7ff8a52f6a90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7ff8a537e1e8"/></to>
    </wire>
    <wire loc="165:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7ff8a52f4100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7ff8a537d8a0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7ff8a52eea90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7ff8a537e1e8"/></to>
    </wire>
    <wire loc="172:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7ff8a52ec100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7ff8a537d8a0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/paul/wsnpr/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7ff8a595d1c8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ff8a54eb7f8"/></to>
    </wire>
    <wire loc="55:/home/paul/wsnpr/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7ff8a54e4b48"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7ff8a592ae10"/></to>
    </wire>
    <wire loc="49:RssiBaseC.nc">
      <from><interface-ref name="checkLaser" scoped="" ref="0x7ff8a526caf0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ff8a595d1c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../InterceptBase/BaseStationC.nc">
      <from><interface-ref name="SerialIntercept" scoped="" ref="0x7ff8a524da38"/></from>
      <to><interface-ref name="SerialIntercept" scoped="" ref="0x7ff8a5209700"/></to>
    </wire>
    <wire loc="85:../InterceptBase/BaseStationC.nc">
      <from><interface-ref name="RadioIntercept" scoped="" ref="0x7ff8a524edd8"/></from>
      <to><interface-ref name="RadioIntercept" scoped="" ref="0x7ff8a5213a88"/></to>
    </wire>
    <wire loc="88:../InterceptBase/BaseStationC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7ff8a5248020"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7ff8a5461650"/></to>
    </wire>
    <wire loc="90:../InterceptBase/BaseStationC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x7ff8a52473a8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7ff8a4f5c020"/></to>
    </wire>
    <wire loc="78:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7ff8a4f5c020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7ff8a4f30310"/></to>
    </wire>
    <wire loc="91:../InterceptBase/BaseStationC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7ff8a52436f8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7ff8a417f760"/></to>
    </wire>
    <wire loc="61:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7ff8a417f760"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7ff8a4117728"/></to>
    </wire>
    <wire loc="93:../InterceptBase/BaseStationC.nc">
      <from><interface-ref name="UartSend" scoped="" ref="0x7ff8a5238820"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7ff8a417c798"/></to>
    </wire>
    <wire loc="63:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7ff8a417c798"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7ff8a4173460"/></to>
    </wire>
    <wire loc="94:../InterceptBase/BaseStationC.nc">
      <from><interface-ref name="UartReceive" scoped="" ref="0x7ff8a52413c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7ff8a417b928"/></to>
    </wire>
    <wire loc="64:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7ff8a417b928"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7ff8a411f180"/></to>
    </wire>
    <wire loc="95:../InterceptBase/BaseStationC.nc">
      <from><interface-ref name="UartPacket" scoped="" ref="0x7ff8a522a840"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7ff8a4179020"/></to>
    </wire>
    <wire loc="65:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7ff8a4179020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7ff8a411ed20"/></to>
    </wire>
    <wire loc="96:../InterceptBase/BaseStationC.nc">
      <from><interface-ref name="UartAMPacket" scoped="" ref="0x7ff8a521a1d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7ff8a4179c30"/></to>
    </wire>
    <wire loc="66:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7ff8a4179c30"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7ff8a411f738"/></to>
    </wire>
    <wire loc="98:../InterceptBase/BaseStationC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x7ff8a5235cd0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7ff8a4f5b020"/></to>
    </wire>
    <wire loc="80:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7ff8a4f5b020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7ff8a4f2f2b0"/></to>
    </wire>
    <wire loc="99:../InterceptBase/BaseStationC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x7ff8a5219020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7ff8a4f5a1c8"/></to>
    </wire>
    <wire loc="81:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7ff8a4f5a1c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7ff8a4f2d3c8"/></to>
    </wire>
    <wire loc="100:../InterceptBase/BaseStationC.nc">
      <from><interface-ref name="RadioSnoop" scoped="" ref="0x7ff8a5219b98"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7ff8a4f5ad10"/></to>
    </wire>
    <wire loc="82:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7ff8a4f5ad10"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7ff8a4f2c020"/></to>
    </wire>
    <wire loc="101:../InterceptBase/BaseStationC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x7ff8a5218358"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7ff8a4f59328"/></to>
    </wire>
    <wire loc="83:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7ff8a4f59328"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7ff8a4f2bbd8"/></to>
    </wire>
    <wire loc="102:../InterceptBase/BaseStationC.nc">
      <from><interface-ref name="RadioAMPacket" scoped="" ref="0x7ff8a5216060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7ff8a4f58020"/></to>
    </wire>
    <wire loc="84:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7ff8a4f58020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7ff8a4f2c610"/></to>
    </wire>
    <wire loc="104:../InterceptBase/BaseStationC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7ff8a520ac38"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7ff8a51b7908"/></to>
    </wire>
    <wire loc="51:/home/paul/wsnpr/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7ff8a51b7908"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7ff8a51af110"/></to>
    </wire>
    <wire loc="99:../InterceptBase/BaseStationP.nc">
      <from><interface-ref name="uartSendTask" scoped="" ref="0x7ff8a5204cc0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ff8a595d1c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="100:../InterceptBase/BaseStationP.nc">
      <from><interface-ref name="radioSendTask" scoped="" ref="0x7ff8a5203b80"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ff8a595d1c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/home/paul/wsnpr/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7ff8a5188020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ff8a51b2b18"/></to>
    </wire>
    <wire loc="54:/home/paul/wsnpr/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7ff8a51a7348"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7ff8a51b0aa0"/></to>
    </wire>
    <wire loc="58:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7ff8a51b0aa0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7ff8a4f85c30"/></to>
    </wire>
    <wire loc="55:/home/paul/wsnpr/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7ff8a51ad4c0"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7ff8a518bca8"/></to>
    </wire>
    <wire loc="61:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7ff8a518bca8"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7ff8a4f70448"/></to>
    </wire>
    <wire loc="56:/home/paul/wsnpr/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7ff8a51ac648"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7ff8a518ae30"/></to>
    </wire>
    <wire loc="64:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7ff8a518ae30"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7ff8a4f6ccd0"/></to>
    </wire>
    <wire loc="59:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7ff8a4f84da0"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x7ff8a5132568"/></to>
    </wire>
    <wire loc="486:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x7ff8a5132568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff8a5017ca0"/></to>
    </wire>
    <wire loc="62:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7ff8a4f6f5f8"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x7ff8a5130568"/></to>
    </wire>
    <wire loc="487:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x7ff8a5130568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff8a50123d8"/></to>
    </wire>
    <wire loc="65:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7ff8a4f6be20"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x7ff8a512e568"/></to>
    </wire>
    <wire loc="488:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x7ff8a512e568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff8a500eca0"/></to>
    </wire>
    <wire loc="442:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7ff8a5174b00"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff8a50abca0"/></to>
    </wire>
    <wire loc="455:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7ff8a515f568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff8a507dca0"/></to>
    </wire>
    <wire loc="531:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x7ff8a51167d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff8a506e3d8"/></to>
    </wire>
    <wire loc="551:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x7ff8a50f1558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff8a4fe9ca0"/></to>
    </wire>
    <wire loc="532:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x7ff8a5114660"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff8a506aca0"/></to>
    </wire>
    <wire loc="460:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x7ff8a515b568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff8a5073ca0"/></to>
    </wire>
    <wire loc="473:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x7ff8a5147568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff8a5045ca0"/></to>
    </wire>
    <wire loc="497:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7ff8a5122568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff8a4ff2ca0"/></to>
    </wire>
    <wire loc="535:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x7ff8a510e560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff8a5061ca0"/></to>
    </wire>
    <wire loc="545:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x7ff8a50fd558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff8a5004ca0"/></to>
    </wire>
    <wire loc="557:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x7ff8a50e9560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff8a4fe33d8"/></to>
    </wire>
    <wire loc="445:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7ff8a516e668"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff8a509d3d8"/></to>
    </wire>
    <wire loc="536:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x7ff8a510b560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff8a505c3d8"/></to>
    </wire>
    <wire loc="450:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7ff8a5169568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff8a50933d8"/></to>
    </wire>
    <wire loc="463:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x7ff8a5155568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff8a50653d8"/></to>
    </wire>
    <wire loc="476:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x7ff8a5141568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff8a50373d8"/></to>
    </wire>
    <wire loc="489:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x7ff8a512c568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff8a50083d8"/></to>
    </wire>
    <wire loc="500:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x7ff8a511c568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff8a4fe33d8"/></to>
    </wire>
    <wire loc="440:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7ff8a5178e10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff8a50b4ca0"/></to>
    </wire>
    <wire loc="453:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7ff8a5163568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff8a5086d08"/></to>
    </wire>
    <wire loc="466:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x7ff8a514f568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff8a5058ca0"/></to>
    </wire>
    <wire loc="530:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x7ff8a5118970"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff8a506e3d8"/></to>
    </wire>
    <wire loc="548:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x7ff8a50f7558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff8a4ff63d8"/></to>
    </wire>
    <wire loc="555:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x7ff8a50eb558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff8a4fe33d8"/></to>
    </wire>
    <wire loc="541:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x7ff8a5103560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff8a501b3d8"/></to>
    </wire>
    <wire loc="471:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x7ff8a514b568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff8a504edd8"/></to>
    </wire>
    <wire loc="484:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x7ff8a5136568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff8a5020ca0"/></to>
    </wire>
    <wire loc="495:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7ff8a5126568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff8a4ffbca0"/></to>
    </wire>
    <wire loc="549:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x7ff8a50f5558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff8a4ff2ca0"/></to>
    </wire>
    <wire loc="538:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x7ff8a5109558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff8a5029ca0"/></to>
    </wire>
    <wire loc="443:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7ff8a5172978"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff8a50a63d8"/></to>
    </wire>
    <wire loc="456:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7ff8a515d568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff8a50783d8"/></to>
    </wire>
    <wire loc="493:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x7ff8a512a568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff8a5004ca0"/></to>
    </wire>
    <wire loc="461:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x7ff8a5159568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff8a506e3d8"/></to>
    </wire>
    <wire loc="474:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x7ff8a5145568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff8a50403d8"/></to>
    </wire>
    <wire loc="498:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x7ff8a5120568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff8a4fed3d8"/></to>
    </wire>
    <wire loc="540:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x7ff8a5105560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff8a5020ca0"/></to>
    </wire>
    <wire loc="438:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7ff8a51840a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff8a50e3e18"/></to>
    </wire>
    <wire loc="451:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7ff8a5167568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff8a508fca0"/></to>
    </wire>
    <wire loc="464:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x7ff8a5153568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff8a5061ca0"/></to>
    </wire>
    <wire loc="477:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x7ff8a513f568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff8a5033ca0"/></to>
    </wire>
    <wire loc="542:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x7ff8a5101560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff8a5058ca0"/></to>
    </wire>
    <wire loc="546:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x7ff8a50fb558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff8a4fff3d8"/></to>
    </wire>
    <wire loc="552:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x7ff8a50ef558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff8a4fe33d8"/></to>
    </wire>
    <wire loc="482:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x7ff8a513a568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff8a5029ca0"/></to>
    </wire>
    <wire loc="543:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x7ff8a50ff560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff8a50533d8"/></to>
    </wire>
    <wire loc="441:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7ff8a5176c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff8a50af3d8"/></to>
    </wire>
    <wire loc="454:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7ff8a5161568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff8a50813d8"/></to>
    </wire>
    <wire loc="467:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x7ff8a514d568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff8a50533d8"/></to>
    </wire>
    <wire loc="539:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x7ff8a5107560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff8a50243d8"/></to>
    </wire>
    <wire loc="550:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x7ff8a50f3558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff8a4fed3d8"/></to>
    </wire>
    <wire loc="472:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x7ff8a5149668"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff8a5049478"/></to>
    </wire>
    <wire loc="485:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x7ff8a5134568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff8a501b3d8"/></to>
    </wire>
    <wire loc="496:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7ff8a5124568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff8a4ff63d8"/></to>
    </wire>
    <wire loc="444:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7ff8a51707f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff8a50a2ca0"/></to>
    </wire>
    <wire loc="494:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x7ff8a5128568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff8a4fff3d8"/></to>
    </wire>
    <wire loc="449:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7ff8a516c568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff8a5098ca0"/></to>
    </wire>
    <wire loc="462:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x7ff8a5157568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff8a506aca0"/></to>
    </wire>
    <wire loc="475:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x7ff8a5143568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff8a503cca0"/></to>
    </wire>
    <wire loc="499:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x7ff8a511e568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff8a4fe9ca0"/></to>
    </wire>
    <wire loc="439:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7ff8a5179020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff8a50b8478"/></to>
    </wire>
    <wire loc="452:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7ff8a5165568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff8a508a3d8"/></to>
    </wire>
    <wire loc="465:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x7ff8a5151568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff8a505c3d8"/></to>
    </wire>
    <wire loc="478:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x7ff8a513d568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff8a502d3d8"/></to>
    </wire>
    <wire loc="534:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x7ff8a5110548"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff8a50653d8"/></to>
    </wire>
    <wire loc="547:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x7ff8a50f9558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff8a4ffbca0"/></to>
    </wire>
    <wire loc="533:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x7ff8a5112560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff8a50653d8"/></to>
    </wire>
    <wire loc="483:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x7ff8a5138568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff8a50243d8"/></to>
    </wire>
    <wire loc="554:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x7ff8a50ed558"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff8a4fe9ca0"/></to>
    </wire>
    <wire loc="558:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x7ff8a50e7568"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff8a50083d8"/></to>
    </wire>
    <wire loc="529:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x7ff8a511a5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7ff8a5073ca0"/></to>
    </wire>
    <wire loc="82:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7ff8a4f30310"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7ff8a4f0d020"/></to>
    </wire>
    <wire loc="85:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7ff8a4f2f2b0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7ff8a4212980"/></to>
    </wire>
    <wire loc="88:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7ff8a4f2c020"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7ff8a4210628"/></to>
    </wire>
    <wire loc="84:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7ff8a4f2bbd8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7ff8a420d2a8"/></to>
    </wire>
    <wire loc="89:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7ff8a4f55020"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7ff8a44af130"/></to>
    </wire>
    <wire loc="59:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7ff8a44af130"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7ff8a449f060"/></to>
    </wire>
    <wire loc="86:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7ff8a4f3c848"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7ff8a4f26628"/></to>
    </wire>
    <wire loc="91:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7ff8a4f26628"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7ff8a4efa668"/></to>
    </wire>
    <wire loc="87:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7ff8a4f2d3c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7ff8a4211ab0"/></to>
    </wire>
    <wire loc="85:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7ff8a4f56020"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7ff8a4f297e0"/></to>
    </wire>
    <wire loc="93:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7ff8a4f297e0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7ff8a4efb658"/></to>
    </wire>
    <wire loc="89:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7ff8a4f2c610"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7ff8a4210c18"/></to>
    </wire>
    <wire loc="90:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7ff8a4f47e48"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7ff8a44ab020"/></to>
    </wire>
    <wire loc="60:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7ff8a44ab020"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7ff8a449b020"/></to>
    </wire>
    <wire loc="97:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7ff8a4f0d020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7ff8a4240dc8"/></to>
    </wire>
    <wire loc="83:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7ff8a4f1d700"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7ff8a420b020"/></to>
    </wire>
    <wire loc="86:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7ff8a4f1b1c8"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7ff8a420c400"/></to>
    </wire>
    <wire loc="84:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7ff8a4efd7e8"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7ff8a44b44b0"/></to>
    </wire>
    <wire loc="83:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7ff8a4efa668"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7ff8a4240318"/></to>
    </wire>
    <wire loc="85:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7ff8a4efb658"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7ff8a44b13b8"/></to>
    </wire>
    <wire loc="90:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7ff8a4f12450"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7ff8a4ef9128"/></to>
    </wire>
    <wire loc="82:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7ff8a4ef9128"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7ff8a422d2d0"/></to>
    </wire>
    <wire loc="94:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7ff8a4f257b0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7ff8a4efa020"/></to>
    </wire>
    <wire loc="86:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7ff8a4efa020"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7ff8a44b06b0"/></to>
    </wire>
    <wire loc="97:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0x7ff8a4204698"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ff8a4f0c340"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7ff8a420a020"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7ff8a4f054c8"/></to>
    </wire>
    <wire loc="93:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7ff8a4f054c8"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7ff8a42a6db8"/></to>
    </wire>
    <wire loc="99:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7ff8a420acc8"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7ff8a4efd1d0"/></to>
    </wire>
    <wire loc="94:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7ff8a4efd1d0"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7ff8a42a5ae8"/></to>
    </wire>
    <wire loc="101:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7ff8a42068d0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7ff8a46c4690"/></to>
    </wire>
    <wire loc="102:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7ff8a4209368"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7ff8a44b44b0"/></to>
    </wire>
    <wire loc="55:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7ff8a44b44b0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7ff8a44a32e8"/></to>
    </wire>
    <wire loc="103:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ff8a4208188"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ff8a44b1d08"/></to>
    </wire>
    <wire loc="57:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ff8a44b1d08"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ff8a44a2b60"/></to>
    </wire>
    <wire loc="104:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7ff8a4208ab0"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7ff8a4e73aa8"/></to>
    </wire>
    <wire loc="55:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7ff8a4e73aa8"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7ff8a4e6a328"/></to>
    </wire>
    <wire loc="106:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7ff8a42056a0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7ff8a4ef4678"/></to>
    </wire>
    <wire loc="54:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7ff8a4ef4678"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7ff8a4eee948"/></to>
    </wire>
    <wire loc="109:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7ff8a42032a8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7ff8a51b7908"/></to>
    </wire>
    <wire loc="63:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7ff8a4240dc8"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7ff8a423dd28"/></to>
    </wire>
    <wire loc="58:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7ff8a44b06b0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7ff8a44a1630"/></to>
    </wire>
    <wire loc="53:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7ff8a422d2d0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7ff8a422b548"/></to>
    </wire>
    <wire loc="97:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7ff8a42a6db8"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7ff8a429a490"/></to>
    </wire>
    <wire loc="64:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7ff8a4240318"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7ff8a4239170"/></to>
    </wire>
    <wire loc="90:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7ff8a4f06020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7ff8a42a6748"/></to>
    </wire>
    <wire loc="92:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7ff8a42a6748"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x7ff8a429bdc8"/></to>
    </wire>
    <wire loc="56:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7ff8a44b13b8"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7ff8a44a2210"/></to>
    </wire>
    <wire loc="88:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7ff8a4f0c340"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ff8a42aae28"/></to>
    </wire>
    <wire loc="96:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7ff8a42aae28"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ff8a429d440"/></to>
    </wire>
    <wire loc="89:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7ff8a4efc330"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7ff8a42a7a40"/></to>
    </wire>
    <wire loc="91:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7ff8a42a7a40"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7ff8a429b118"/></to>
    </wire>
    <wire loc="91:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7ff8a4f066a0"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7ff8a42a41a8"/></to>
    </wire>
    <wire loc="93:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7ff8a42a41a8"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7ff8a4299808"/></to>
    </wire>
    <wire loc="98:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7ff8a42a5ae8"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7ff8a4299188"/></to>
    </wire>
    <wire loc="98:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7ff8a423dd28"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7ff8a4ef8780"/></to>
    </wire>
    <wire loc="55:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7ff8a4ef8780"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7ff8a4eef140"/></to>
    </wire>
    <wire loc="101:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7ff8a42a3670"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7ff8a42faa78"/></to>
    </wire>
    <wire loc="55:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7ff8a42faa78"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7ff8a42ef298"/></to>
    </wire>
    <wire loc="102:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7ff8a42f3838"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7ff8a42305d0"/></to>
    </wire>
    <wire loc="54:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7ff8a42305d0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7ff8a422c020"/></to>
    </wire>
    <wire loc="103:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7ff8a422c020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7ff8a4241080"/></to>
    </wire>
    <wire loc="61:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7ff8a4241080"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7ff8a423e838"/></to>
    </wire>
    <wire loc="104:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7ff8a423e838"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7ff8a4ef52d8"/></to>
    </wire>
    <wire loc="56:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7ff8a4ef52d8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7ff8a4eefbe0"/></to>
    </wire>
    <wire loc="107:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7ff8a42a3020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7ff8a4241c80"/></to>
    </wire>
    <wire loc="62:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7ff8a4241c80"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7ff8a423d668"/></to>
    </wire>
    <wire loc="108:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7ff8a423d668"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7ff8a42d6080"/></to>
    </wire>
    <wire loc="56:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7ff8a42d6080"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7ff8a42d22b0"/></to>
    </wire>
    <wire loc="109:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7ff8a42d6e50"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7ff8a4ef4020"/></to>
    </wire>
    <wire loc="68:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7ff8a4ef4020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7ff8a4532168"/></to>
    </wire>
    <wire loc="63:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7ff8a4532168"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7ff8a452d600"/></to>
    </wire>
    <wire loc="59:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7ff8a4eed798"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ff8a4e83b80"/></to>
    </wire>
    <wire loc="54:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7ff8a4e83b80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ff8a4e6b650"/></to>
    </wire>
    <wire loc="60:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7ff8a4ee5a78"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7ff8a4e7e8b0"/></to>
    </wire>
    <wire loc="56:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7ff8a4e7e8b0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7ff8a4e68080"/></to>
    </wire>
    <wire loc="63:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7ff8a4ee2500"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7ff8a4625c58"/></to>
    </wire>
    <wire loc="69:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7ff8a4ee2500"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7ff8a4534020"/></to>
    </wire>
    <wire loc="61:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7ff8a4534020"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7ff8a452e460"/></to>
    </wire>
    <wire loc="55:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7ff8a4625c58"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7ff8a4616198"/></to>
    </wire>
    <wire loc="64:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7ff8a4edccc8"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x7ff8a4622480"/></to>
    </wire>
    <wire loc="56:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7ff8a4622480"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7ff8a46169f8"/></to>
    </wire>
    <wire loc="65:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7ff8a4eeaa70"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7ff8a4621140"/></to>
    </wire>
    <wire loc="57:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7ff8a4621140"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7ff8a46127c0"/></to>
    </wire>
    <wire loc="72:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7ff8a4ed9c58"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7ff8a44b44b0"/></to>
    </wire>
    <wire loc="73:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ff8a4ed6020"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ff8a44b1d08"/></to>
    </wire>
    <wire loc="76:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7ff8a4ed8d58"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7ff8a4314690"/></to>
    </wire>
    <wire loc="56:/home/paul/wsnpr/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7ff8a4314690"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7ff8a430d568"/></to>
    </wire>
    <wire loc="79:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x7ff8a4ecb3e8"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7ff8a4316bb0"/></to>
    </wire>
    <wire loc="74:/home/paul/wsnpr/tinyos-main/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7ff8a4316bb0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7ff8a4ab0858"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7ff8a4eda518"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7ff8a51b7908"/></to>
    </wire>
    <wire loc="76:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x7ff8a4ec7988"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ff8a595d1c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x7ff8a4ec8b30"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ff8a595d1c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x7ff8a4ecac00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ff8a595d1c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x7ff8a4e71c78"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x7ff8a4e674d0"/></to>
    </wire>
    <wire loc="63:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x7ff8a4e63060"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7ff8a4dbed58"/></to>
    </wire>
    <wire loc="55:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7ff8a4dbed58"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7ff8a4ccb060"/></to>
    </wire>
    <wire loc="66:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7ff8a4e59020"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7ff8a4cc4e20"/></to>
    </wire>
    <wire loc="72:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7ff8a4cc4e20"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7ff8a4cb6020"/></to>
    </wire>
    <wire loc="67:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7ff8a4e581b0"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x7ff8a4cc0378"/></to>
    </wire>
    <wire loc="75:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7ff8a4cc0378"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7ff8a4ca9720"/></to>
    </wire>
    <wire loc="68:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7ff8a4e57378"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x7ff8a4cbe688"/></to>
    </wire>
    <wire loc="77:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7ff8a4cbe688"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7ff8a4c9f720"/></to>
    </wire>
    <wire loc="71:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7ff8a4e52b78"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x7ff8a4c8a578"/></to>
    </wire>
    <wire loc="64:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7ff8a4c8a578"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7ff8a4b76b58"/></to>
    </wire>
    <wire loc="74:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7ff8a4e403b0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ff8a474e7d0"/></to>
    </wire>
    <wire loc="126:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7ff8a474e7d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ff8a4b28020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7ff8a4e3f460"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x7ff8a474b020"/></to>
    </wire>
    <wire loc="132:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7ff8a474b020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff8a4b24ad8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7ff8a4e3fb38"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x7ff8a47492e8"/></to>
    </wire>
    <wire loc="135:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7ff8a47492e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff8a4b24ad8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7ff8a4e41ca0"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x7ff8a474c3a0"/></to>
    </wire>
    <wire loc="130:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7ff8a474c3a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff8a4b24ad8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7ff8a4e413c0"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x7ff8a4749900"/></to>
    </wire>
    <wire loc="136:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7ff8a4749900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff8a4b24ad8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7ff8a4e46e60"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x7ff8a473fe10"/></to>
    </wire>
    <wire loc="154:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7ff8a473fe10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7ff8a4e48708"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x7ff8a473dd60"/></to>
    </wire>
    <wire loc="158:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7ff8a473dd60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7ff8a4e47020"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x7ff8a473c528"/></to>
    </wire>
    <wire loc="159:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7ff8a473c528"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7ff8a4e478a8"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x7ff8a4745470"/></to>
    </wire>
    <wire loc="147:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7ff8a4745470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7ff8a4e44158"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7ff8a4745c10"/></to>
    </wire>
    <wire loc="148:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7ff8a4745c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7ff8a4e54958"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x7ff8a472f7c0"/></to>
    </wire>
    <wire loc="184:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7ff8a472f7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff8a4b25020"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7ff8a4e54020"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x7ff8a472f020"/></to>
    </wire>
    <wire loc="183:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7ff8a472f020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff8a4b25020"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7ff8a4e449d0"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x7ff8a473f470"/></to>
    </wire>
    <wire loc="153:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7ff8a473f470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7ff8a4e433a8"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x7ff8a4743470"/></to>
    </wire>
    <wire loc="149:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7ff8a4743470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7ff8a4e43c18"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7ff8a4740470"/></to>
    </wire>
    <wire loc="151:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7ff8a4740470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x7ff8a4e3ee50"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ff8a471ee60"/></to>
    </wire>
    <wire loc="126:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7ff8a471ee60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ff8a4b28020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x7ff8a4e3e140"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ff8a46f1558"/></to>
    </wire>
    <wire loc="126:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7ff8a46f1558"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ff8a4b28020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7ff8a4e4d170"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7ff8a46c4690"/></to>
    </wire>
    <wire loc="100:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7ff8a4e627f0"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7ff8a46c6cd8"/></to>
    </wire>
    <wire loc="23:/home/paul/wsnpr/tinyos-main/tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7ff8a46c6cd8"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7ff8a46ab190"/></to>
    </wire>
    <wire loc="126:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x7ff8a4e323f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ff8a595d1c8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x7ff8a4e33598"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ff8a595d1c8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7ff8a4dbe3e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ff8a4db77d8"/></to>
    </wire>
    <wire loc="51:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7ff8a4db77d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ff8a3563398"/></to>
    </wire>
    <wire loc="52:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7ff8a4ccb060"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7ff8a3563b80"/></to>
    </wire>
    <wire loc="52:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7ff8a3563398"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ff8a355dd98"/></to>
    </wire>
    <wire loc="53:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7ff8a3563b80"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7ff8a3542420"/></to>
    </wire>
    <wire loc="51:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7ff8a355dd98"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ff8a352d330"/></to>
    </wire>
    <wire loc="55:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7ff8a353c860"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7ff8a355c608"/></to>
    </wire>
    <wire loc="52:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7ff8a355c608"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7ff8a352db58"/></to>
    </wire>
    <wire loc="56:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7ff8a353e648"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7ff8a4d44630"/></to>
    </wire>
    <wire loc="50:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7ff8a4d44630"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7ff8a4d28878"/></to>
    </wire>
    <wire loc="54:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7ff8a352aad8"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7ff8a3532288"/></to>
    </wire>
    <wire loc="49:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7ff8a3532288"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7ff8a4d9dba8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7ff8a35270c0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7ff8a35318c8"/></to>
    </wire>
    <wire loc="50:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7ff8a35318c8"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7ff8a4d99850"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7ff8a3526430"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7ff8a3530bd8"/></to>
    </wire>
    <wire loc="51:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7ff8a3530bd8"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7ff8a4d961c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7ff8a4d9dba8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7ff8a53d1830"/></to>
    </wire>
    <wire loc="59:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7ff8a4d99850"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x7ff8a53cf060"/></to>
    </wire>
    <wire loc="60:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7ff8a4d961c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x7ff8a53c6020"/></to>
    </wire>
    <wire loc="66:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7ff8a4d9dba8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7ff8a53d1830"/></to>
    </wire>
    <wire loc="67:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7ff8a4d99850"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x7ff8a53cd898"/></to>
    </wire>
    <wire loc="68:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7ff8a4d961c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x7ff8a53c5aa8"/></to>
    </wire>
    <wire loc="70:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7ff8a4d9dba8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7ff8a53d1830"/></to>
    </wire>
    <wire loc="71:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7ff8a4d99850"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x7ff8a53ccd30"/></to>
    </wire>
    <wire loc="72:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7ff8a4d961c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x7ff8a53c4868"/></to>
    </wire>
    <wire loc="74:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7ff8a4d9dba8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7ff8a53d1830"/></to>
    </wire>
    <wire loc="75:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7ff8a4d99850"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x7ff8a53ca120"/></to>
    </wire>
    <wire loc="76:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7ff8a4d961c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x7ff8a53c36e0"/></to>
    </wire>
    <wire loc="78:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7ff8a4d9dba8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7ff8a53d1830"/></to>
    </wire>
    <wire loc="79:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7ff8a4d99850"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x7ff8a53c9588"/></to>
    </wire>
    <wire loc="80:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7ff8a4d961c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x7ff8a53c2558"/></to>
    </wire>
    <wire loc="82:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7ff8a4d9dba8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7ff8a53d1830"/></to>
    </wire>
    <wire loc="83:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7ff8a4d99850"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x7ff8a53c8a20"/></to>
    </wire>
    <wire loc="84:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7ff8a4d961c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x7ff8a53c13d0"/></to>
    </wire>
    <wire loc="52:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7ff8a4d0cb10"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7ff8a4d41420"/></to>
    </wire>
    <wire loc="50:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7ff8a4d41420"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7ff8a4d3d980"/></to>
    </wire>
    <wire loc="51:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7ff8a4d2d928"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7ff8a53d1830"/></to>
    </wire>
    <wire loc="73:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7ff8a4cc2020"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7ff8a4cb2720"/></to>
    </wire>
    <wire loc="74:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7ff8a4cc11b8"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7ff8a4cad020"/></to>
    </wire>
    <wire loc="71:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7ff8a4dbfc28"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7ff8a4cbc7d0"/></to>
    </wire>
    <wire loc="76:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7ff8a4cbf4f0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7ff8a4ca4020"/></to>
    </wire>
    <wire loc="63:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7ff8a4cbb908"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7ff8a5174b00"/></to>
    </wire>
    <wire loc="64:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7ff8a4cb5120"/></from>
      <to><interface-ref name="Port42" scoped="" ref="0x7ff8a5147568"/></to>
    </wire>
    <wire loc="65:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7ff8a4cb1908"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7ff8a5176c88"/></to>
    </wire>
    <wire loc="66:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7ff8a4cac120"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7ff8a51840a0"/></to>
    </wire>
    <wire loc="67:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7ff8a4ca8908"/></from>
      <to><interface-ref name="Port46" scoped="" ref="0x7ff8a513f568"/></to>
    </wire>
    <wire loc="68:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7ff8a4ca3120"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7ff8a5149668"/></to>
    </wire>
    <wire loc="69:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7ff8a4c9e908"/></from>
      <to><interface-ref name="Port45" scoped="" ref="0x7ff8a5141568"/></to>
    </wire>
    <wire loc="63:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7ff8a4c878d0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7ff8a4c83450"/></to>
    </wire>
    <wire loc="65:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7ff8a4c86190"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7ff8a4b67a78"/></to>
    </wire>
    <wire loc="53:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7ff8a4c70020"/></from>
      <to><interface-ref name="ControlB1" scoped="" ref="0x7ff8a53ce400"/></to>
    </wire>
    <wire loc="54:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430Capture" scoped="" ref="0x7ff8a4c6f2a8"/></from>
      <to><interface-ref name="CaptureB1" scoped="" ref="0x7ff8a53be3d0"/></to>
    </wire>
    <wire loc="55:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x7ff8a4c6e0a0"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7ff8a5149668"/></to>
    </wire>
    <wire loc="60:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7ff8a4b75780"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7ff8a4c60b88"/></to>
    </wire>
    <wire loc="70:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7ff8a4c60b88"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7ff8a4c4c878"/></to>
    </wire>
    <wire loc="61:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7ff8a4b665f8"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7ff8a4c62b40"/></to>
    </wire>
    <wire loc="66:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7ff8a4c62b40"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7ff8a4c52928"/></to>
    </wire>
    <wire loc="82:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7ff8a4c55b88"/></from>
      <to><interface-ref name="Port26" scoped="" ref="0x7ff8a4c42878"/></to>
    </wire>
    <wire loc="73:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7ff8a4c5db88"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x7ff8a4c49878"/></to>
    </wire>
    <wire loc="77:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7ff8a4c5bb88"/></from>
      <to><interface-ref name="Port21" scoped="" ref="0x7ff8a4c47878"/></to>
    </wire>
    <wire loc="68:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7ff8a4c66b88"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x7ff8a4c4e878"/></to>
    </wire>
    <wire loc="80:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7ff8a4c57b88"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7ff8a4c44878"/></to>
    </wire>
    <wire loc="71:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7ff8a4c5fb88"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x7ff8a4c4b878"/></to>
    </wire>
    <wire loc="83:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7ff8a4c54b88"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x7ff8a4c41878"/></to>
    </wire>
    <wire loc="78:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7ff8a4c5ab88"/></from>
      <to><interface-ref name="Port22" scoped="" ref="0x7ff8a4c46878"/></to>
    </wire>
    <wire loc="69:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7ff8a4c61b88"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7ff8a4c4d878"/></to>
    </wire>
    <wire loc="81:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7ff8a4c56b88"/></from>
      <to><interface-ref name="Port25" scoped="" ref="0x7ff8a4c43878"/></to>
    </wire>
    <wire loc="72:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7ff8a4c5eb88"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x7ff8a4c4a878"/></to>
    </wire>
    <wire loc="76:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7ff8a4c5cb88"/></from>
      <to><interface-ref name="Port20" scoped="" ref="0x7ff8a4c48878"/></to>
    </wire>
    <wire loc="67:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7ff8a4c67b88"/></from>
      <to><interface-ref name="Port11" scoped="" ref="0x7ff8a4c4f878"/></to>
    </wire>
    <wire loc="79:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7ff8a4c58b88"/></from>
      <to><interface-ref name="Port23" scoped="" ref="0x7ff8a4c45878"/></to>
    </wire>
    <wire loc="131:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7ff8a474c9b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff8a4b24ad8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7ff8a473ed98"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7ff8a4736470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7ff8a473d5c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7ff8a472a7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff8a4b25020"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7ff8a472c7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff8a4b25020"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7ff8a474bc50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff8a4b24ad8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7ff8a4732c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7ff8a472e7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff8a4b25020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7ff8a4738c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7ff8a4739470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7ff8a474d430"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7ff8a4b28cb0"/></to>
    </wire>
    <wire loc="56:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7ff8a4b28cb0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7ff8a4b22df0"/></to>
    </wire>
    <wire loc="138:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7ff8a4748638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff8a4b24ad8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7ff8a4748c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff8a4b24ad8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7ff8a4730060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7ff8a47473a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff8a4b24ad8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7ff8a472c020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff8a4b25020"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7ff8a4732470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7ff8a4743c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7ff8a4733470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7ff8a4736c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7ff8a4733c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7ff8a472a020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff8a4b25020"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7ff8a472b020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff8a4b25020"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7ff8a4739c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7ff8a4734470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7ff8a472e020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff8a4b25020"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7ff8a473ccc8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7ff8a4729020"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7ff8a4b27c00"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7ff8a474dd58"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff8a4b24ad8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7ff8a4746c50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7ff8a4740c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7ff8a4737470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7ff8a4737c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7ff8a473e5f8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7ff8a47479b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff8a4b24ad8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7ff8a4746638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff8a4b24ad8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7ff8a4748020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff8a4b24ad8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7ff8a4730800"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7ff8a472b7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff8a4b25020"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7ff8a4738470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7ff8a4734c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7ff8a474b638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff8a4b24ad8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7ff8a473a4f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7ff8a4746020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff8a4b24ad8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7ff8a473ac90"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7ff8a4731470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7ff8a4729c58"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7ff8a4b27c00"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x7ff8a4b27c00"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7ff8a4b1ee50"/></to>
    </wire>
    <wire loc="53:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x7ff8a4b25020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff8a4b1c040"/></to>
    </wire>
    <wire loc="54:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b1cd40"/></to>
    </wire>
    <wire loc="51:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7ff8a4b28020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ff8a4b1fc10"/></to>
    </wire>
    <wire loc="55:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x7ff8a4b24ad8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff8a4b1aa98"/></to>
    </wire>
    <wire loc="59:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x7ff8a4b16838"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7ff8a4ab2100"/></to>
    </wire>
    <wire loc="74:/home/paul/wsnpr/tinyos-main/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7ff8a4ab2100"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7ff8a4ab0858"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7ff8a4b191e8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ff8a4a92cf0"/></to>
    </wire>
    <wire loc="52:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7ff8a4a92cf0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ff8a34537d0"/></to>
    </wire>
    <wire loc="63:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7ff8a4b18d10"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7ff8a4a91948"/></to>
    </wire>
    <wire loc="53:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7ff8a4a91948"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7ff8a3452b90"/></to>
    </wire>
    <wire loc="64:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7ff8a4b16020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7ff8a4774020"/></to>
    </wire>
    <wire loc="54:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7ff8a4774020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7ff8a3450d18"/></to>
    </wire>
    <wire loc="67:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7ff8a4b15730"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7ff8a51b7908"/></to>
    </wire>
    <wire loc="88:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x7ff8a4b0a5d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ff8a595d1c8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/paul/wsnpr/tinyos-main/tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7ff8a4ab0858"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7ff8a4aa81c8"/></to>
    </wire>
    <wire loc="110:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7ff8a3450d18"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7ff8a4a2dc90"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7ff8a3452b90"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7ff8a4a2e5c8"/></to>
    </wire>
    <wire loc="105:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7ff8a34537d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ff8a4a304e8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7ff8a3452430"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7ff8a34488c8"/></to>
    </wire>
    <wire loc="64:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7ff8a34488c8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7ff8a48c5660"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7ff8a4a2e5c8"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7ff8a49b7500"/></to>
    </wire>
    <wire loc="108:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7ff8a34502a8"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7ff8a4a2ec10"/></to>
    </wire>
    <wire loc="92:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7ff8a4a2ec10"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7ff8a49b7ad8"/></to>
    </wire>
    <wire loc="111:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7ff8a4a29ce8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7ff8a344f4b0"/></to>
    </wire>
    <wire loc="115:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7ff8a343b8c8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7ff8a4a2cde0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7ff8a4a2aa40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ff8a3449b38"/></to>
    </wire>
    <wire loc="63:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7ff8a3449b38"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ff8a48c6498"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7ff8a4a24b50"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7ff8a3442020"/></to>
    </wire>
    <wire loc="67:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7ff8a3442020"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7ff8a48cba50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7ff8a4a2cde0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7ff8a49b8d58"/></to>
    </wire>
    <wire loc="93:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7ff8a4a2dc90"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7ff8a49b56d8"/></to>
    </wire>
    <wire loc="88:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7ff8a4a304e8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ff8a49b8020"/></to>
    </wire>
    <wire loc="90:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7ff8a49b4d58"/></from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7ff8a4a29ce8"/></to>
    </wire>
    <wire loc="94:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7ff8a49b4020"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7ff8a4a2aa40"/></to>
    </wire>
    <wire loc="95:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7ff8a49afc18"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7ff8a4a24b50"/></to>
    </wire>
    <wire loc="98:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7ff8a49b33b8"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7ff8a49a5080"/></to>
    </wire>
    <wire loc="85:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7ff8a49a5080"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7ff8a499c5a8"/></to>
    </wire>
    <wire loc="101:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7ff8a49ae430"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7ff8a51b7908"/></to>
    </wire>
    <wire loc="102:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <from><interface-ref name="signalDone_task" scoped="" ref="0x7ff8a49ada90"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ff8a595d1c8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7ff8a499f020"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7ff8a4996928"/></to>
    </wire>
    <wire loc="86:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7ff8a49a19c0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7ff8a4996020"/></to>
    </wire>
    <wire loc="90:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7ff8a496ab78"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7ff8a5118970"/></to>
    </wire>
    <wire loc="91:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7ff8a4968af0"/></from>
      <to><interface-ref name="SOMI0" scoped="" ref="0x7ff8a5114660"/></to>
    </wire>
    <wire loc="92:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7ff8a4966968"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7ff8a5112560"/></to>
    </wire>
    <wire loc="93:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7ff8a49647e0"/></from>
      <to><interface-ref name="URXD0" scoped="" ref="0x7ff8a510b560"/></to>
    </wire>
    <wire loc="94:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7ff8a4962658"/></from>
      <to><interface-ref name="UTXD0" scoped="" ref="0x7ff8a510e560"/></to>
    </wire>
    <wire loc="14:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplI2C" scoped="" ref="0x7ff8a4994060"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7ff8a4828b30"/></to>
    </wire>
    <wire loc="68:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7ff8a3442780"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7ff8a48c7940"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7ff8a3442d58"/></from>
      <to><interface-ref name="HplMsp430I2C" scoped="" ref="0x7ff8a4831298"/></to>
    </wire>
    <wire loc="11:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7ff8a4831298"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7ff8a4828b30"/></to>
    </wire>
    <wire loc="71:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7ff8a34477c0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7ff8a49a5080"/></to>
    </wire>
    <wire loc="66:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7ff8a3447060"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7ff8a48c5e30"/></to>
    </wire>
    <wire loc="58:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7ff8a48c5e30"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7ff8a48380e0"/></to>
    </wire>
    <wire loc="65:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7ff8a48c3b58"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7ff8a343b8c8"/></to>
    </wire>
    <wire loc="56:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7ff8a48c5660"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7ff8a483ad18"/></to>
    </wire>
    <wire loc="106:/home/paul/wsnpr/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7ff8a483ad18"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7ff8a33d7d58"/></to>
    </wire>
    <wire loc="51:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7ff8a48cba50"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7ff8a48c0480"/></to>
    </wire>
    <wire loc="55:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7ff8a48c6498"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ff8a483a020"/></to>
    </wire>
    <wire loc="105:/home/paul/wsnpr/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7ff8a483a020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ff8a33d7060"/></to>
    </wire>
    <wire loc="52:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="I2CInterrupts" scoped="" ref="0x7ff8a48c7940"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7ff8a48c0d60"/></to>
    </wire>
    <wire loc="108:/home/paul/wsnpr/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7ff8a48380e0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7ff8a33d40e0"/></to>
    </wire>
    <wire loc="57:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7ff8a4838960"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7ff8a48c3b58"/></to>
    </wire>
    <wire loc="59:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7ff8a48ae2a8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7ff8a48380e0"/></to>
    </wire>
    <wire loc="62:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7ff8a48b0438"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7ff8a49a19c0"/></to>
    </wire>
    <wire loc="63:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7ff8a48b0bd8"/></from>
      <to><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7ff8a499f020"/></to>
    </wire>
    <wire loc="107:/home/paul/wsnpr/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7ff8a48394a8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7ff8a33d54c0"/></to>
    </wire>
    <wire loc="109:/home/paul/wsnpr/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7ff8a33d4980"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7ff8a4838960"/></to>
    </wire>
    <wire loc="111:/home/paul/wsnpr/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7ff8a33d3130"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7ff8a33d9020"/></to>
    </wire>
    <wire loc="75:/home/paul/wsnpr/tinyos-main/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7ff8a33d12e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ff8a595d1c8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplUsart" scoped="" ref="0x7ff8a481f6e0"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7ff8a499c5a8"/></to>
    </wire>
    <wire loc="18:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7ff8a4819060"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7ff8a5118970"/></to>
    </wire>
    <wire loc="19:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7ff8a4818e00"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7ff8a5112560"/></to>
    </wire>
    <wire loc="153:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7ff8a4711a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7ff8a471a100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff8a4b24ad8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7ff8a4714a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7ff8a470e470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7ff8a4707c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7ff8a470ec10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7ff8a46fa2e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff8a4b25020"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7ff8a46fd2e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff8a4b25020"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7ff8a47193a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff8a4b24ad8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7ff8a4703470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7ff8a46fe2e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff8a4b25020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7ff8a4713a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7ff8a4712a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7ff8a4708470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7ff8a470bc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7ff8a470d470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7ff8a471da90"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7ff8a4b28cb0"/></to>
    </wire>
    <wire loc="138:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7ff8a4718c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff8a4b24ad8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7ff8a47172e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff8a4b24ad8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7ff8a4701a38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7ff8a4717a00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff8a4b24ad8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7ff8a46fea88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff8a4b25020"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7ff8a4718020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff8a4b24ad8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7ff8a4704c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7ff8a47122e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7ff8a47132e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7ff8a471ba88"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff8a4b24ad8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7ff8a4705c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7ff8a4706470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7ff8a4704470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7ff8a46fca88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff8a4b25020"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7ff8a46fda88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff8a4b25020"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7ff8a470a470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7ff8a4706c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7ff8a46ffa88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff8a4b25020"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7ff8a470c470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7ff8a46faa88"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7ff8a4b27c00"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7ff8a471b470"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff8a4b24ad8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7ff8a47142e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7ff8a47112e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7ff8a4708c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7ff8a470dc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7ff8a4707470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7ff8a470f470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7ff8a471a718"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff8a4b24ad8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7ff8a470fc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7ff8a4715060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff8a4b24ad8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7ff8a4715c90"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff8a4b24ad8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7ff8a46ff2e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff8a4b25020"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7ff8a4700a88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff8a4b25020"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7ff8a4718638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff8a4b24ad8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7ff8a47002e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7ff8a46fc2e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff8a4b25020"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7ff8a470ac10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7ff8a4705470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7ff8a471ad30"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff8a4b24ad8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7ff8a47199b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff8a4b24ad8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7ff8a470cc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7ff8a4715678"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff8a4b24ad8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7ff8a470b470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7ff8a4703c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7ff8a46f9780"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7ff8a4b27c00"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7ff8a46e4470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7ff8a46ef900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff8a4b24ad8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7ff8a46e8470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7ff8a46e3d98"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7ff8a46db470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7ff8a46e25c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7ff8a46cf7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff8a4b25020"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7ff8a46d17c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff8a4b25020"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7ff8a46eec50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff8a4b24ad8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7ff8a46d7c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7ff8a46d27c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff8a4b25020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7ff8a46e6470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7ff8a46e5470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7ff8a46ddc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7ff8a46de470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7ff8a46e2d60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7ff8a46f02a8"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7ff8a4b28cb0"/></to>
    </wire>
    <wire loc="138:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7ff8a46eb638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff8a4b24ad8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7ff8a46ebc50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff8a4b24ad8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7ff8a46d5060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7ff8a46ea3a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff8a4b24ad8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7ff8a46d1020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff8a4b25020"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7ff8a46ec900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff8a4b24ad8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7ff8a46d7470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7ff8a46e6c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7ff8a46e8c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7ff8a46ef2e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff8a4b24ad8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7ff8a46d8470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7ff8a46dbc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7ff8a46d8c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7ff8a46cf020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff8a4b25020"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7ff8a46d0020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff8a4b25020"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7ff8a46dec10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7ff8a46d9470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7ff8a46d2020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff8a4b25020"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7ff8a46e0cc8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7ff8a46ce020"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7ff8a4b27c00"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7ff8a46f0bd0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff8a4b24ad8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7ff8a46e9c50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7ff8a46e5c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7ff8a46dc470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7ff8a46e0528"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7ff8a46dcc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7ff8a46e4e10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7ff8a46ee020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff8a4b24ad8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7ff8a46e35f8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7ff8a46ea9b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff8a4b24ad8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7ff8a46e9638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff8a4b24ad8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7ff8a46d47c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff8a4b25020"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7ff8a46d4020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff8a4b25020"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7ff8a46eb020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff8a4b24ad8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7ff8a46d5800"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7ff8a46d07c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff8a4b25020"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7ff8a46dd470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7ff8a46d9c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7ff8a46ee638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff8a4b24ad8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7ff8a46ec2e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff8a4b24ad8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7ff8a46df4f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7ff8a46e9020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff8a4b24ad8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7ff8a46dfc90"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7ff8a46d6470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7ff8a46cec58"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7ff8a4b27c00"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:/home/paul/wsnpr/tinyos-main/tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x7ff8a46a8648"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x7ff8a46aead0"/></to>
    </wire>
    <wire loc="20:/home/paul/wsnpr/tinyos-main/tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x7ff8a46aead0"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x7ff8a4699b08"/></to>
    </wire>
    <wire loc="16:/home/paul/wsnpr/tinyos-main/tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x7ff8a46933f8"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x7ff8a469cba0"/></to>
    </wire>
    <wire loc="21:/home/paul/wsnpr/tinyos-main/tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x7ff8a469cba0"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x7ff8a4680108"/></to>
    </wire>
    <wire loc="17:/home/paul/wsnpr/tinyos-main/tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="PowerControl" scoped="" ref="0x7ff8a4693c40"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7ff8a462f020"/></to>
    </wire>
    <wire loc="18:/home/paul/wsnpr/tinyos-main/tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x7ff8a4684530"/></from>
      <to><interface-ref name="Gpio" scoped="" ref="0x7ff8a4685378"/></to>
    </wire>
    <wire loc="11:/home/paul/wsnpr/tinyos-main/tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="Gpio" scoped="" ref="0x7ff8a4685378"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7ff8a46374e0"/></to>
    </wire>
    <wire loc="18:/home/paul/wsnpr/tinyos-main/tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7ff8a467b748"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7ff8a4682b78"/></to>
    </wire>
    <wire loc="49:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7ff8a4682b78"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7ff8a4659bc8"/></to>
    </wire>
    <wire loc="19:/home/paul/wsnpr/tinyos-main/tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x7ff8a4680968"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x7ff8a4684530"/></to>
    </wire>
    <wire loc="50:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7ff8a4649020"/></from>
      <to><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7ff8a46433a8"/></to>
    </wire>
    <wire loc="54:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7ff8a46433a8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7ff8a4640980"/></to>
    </wire>
    <wire loc="55:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7ff8a463d928"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x7ff8a53e9378"/></to>
    </wire>
    <wire loc="9:/home/paul/wsnpr/tinyos-main/tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7ff8a46355f8"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7ff8a5163568"/></to>
    </wire>
    <wire loc="58:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x7ff8a4620cc0"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x7ff8a4611738"/></to>
    </wire>
    <wire loc="59:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x7ff8a461f458"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x7ff8a4611e80"/></to>
    </wire>
    <wire loc="66:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x7ff8a4610820"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7ff8a4dbed58"/></to>
    </wire>
    <wire loc="69:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7ff8a46058b8"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7ff8a4dbfc28"/></to>
    </wire>
    <wire loc="70:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7ff8a4603c98"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7ff8a4cc4e20"/></to>
    </wire>
    <wire loc="71:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7ff8a45fde20"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x7ff8a4cbf4f0"/></to>
    </wire>
    <wire loc="74:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7ff8a45fed60"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x7ff8a4c878d0"/></to>
    </wire>
    <wire loc="77:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7ff8a45fb020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ff8a45657d0"/></to>
    </wire>
    <wire loc="126:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7ff8a45657d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ff8a4b28020"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7ff8a45fbcb0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7ff8a4564430"/></to>
    </wire>
    <wire loc="125:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7ff8a4564430"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7ff8a4b28cb0"/></to>
    </wire>
    <wire loc="79:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7ff8a45f8670"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7ff8a4564d58"/></to>
    </wire>
    <wire loc="129:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7ff8a4564d58"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff8a4b24ad8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7ff8a45f8d40"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x7ff8a4562638"/></to>
    </wire>
    <wire loc="133:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7ff8a4562638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff8a4b24ad8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7ff8a45f7478"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x7ff8a4562c50"/></to>
    </wire>
    <wire loc="134:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7ff8a4562c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff8a4b24ad8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7ff8a45f7b68"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x7ff8a455f638"/></to>
    </wire>
    <wire loc="138:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7ff8a455f638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff8a4b24ad8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7ff8a45f9da8"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7ff8a4559470"/></to>
    </wire>
    <wire loc="151:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7ff8a4559470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7ff8a45fa720"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x7ff8a4542c58"/></to>
    </wire>
    <wire loc="196:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7ff8a4542c58"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7ff8a4b27c00"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7ff8a45f9538"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7ff8a45467c0"/></to>
    </wire>
    <wire loc="186:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7ff8a45467c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff8a4b25020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7ff8a45f63d0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7ff8a455cc10"/></to>
    </wire>
    <wire loc="148:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7ff8a455cc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7ff8a45f5558"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7ff8a45575f8"/></to>
    </wire>
    <wire loc="155:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7ff8a45575f8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7ff8a45f5de0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7ff8a4557d98"/></to>
    </wire>
    <wire loc="156:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7ff8a4557d98"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7ff8a45f6e30"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x7ff8a455d020"/></to>
    </wire>
    <wire loc="142:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7ff8a455d020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff8a4b24ad8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7ff8a45f36f0"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x7ff8a4543020"/></to>
    </wire>
    <wire loc="191:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7ff8a4543020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff8a4b25020"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7ff8a45f4650"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7ff8a45457c0"/></to>
    </wire>
    <wire loc="188:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7ff8a45457c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff8a4b25020"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7ff8a45f4e80"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7ff8a4544020"/></to>
    </wire>
    <wire loc="189:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7ff8a4544020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff8a4b25020"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7ff8a45ed750"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7ff8a4534808"/></to>
    </wire>
    <wire loc="62:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7ff8a4534808"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7ff8a452ec48"/></to>
    </wire>
    <wire loc="98:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7ff8a460d940"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7ff8a44b44b0"/></to>
    </wire>
    <wire loc="99:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ff8a460b7e8"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ff8a44b1d08"/></to>
    </wire>
    <wire loc="100:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7ff8a460a460"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7ff8a44af130"/></to>
    </wire>
    <wire loc="101:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7ff8a45fe1d8"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7ff8a44a8ac8"/></to>
    </wire>
    <wire loc="61:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7ff8a44a8ac8"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7ff8a4499ac8"/></to>
    </wire>
    <wire loc="104:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7ff8a45f10c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7ff8a51b7908"/></to>
    </wire>
    <wire loc="153:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7ff8a4558470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7ff8a45639b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff8a4b24ad8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7ff8a455c470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7ff8a454f470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7ff8a45565c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7ff8a45437c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff8a4b25020"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7ff8a454bc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7ff8a455a470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7ff8a4551c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7ff8a4552470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7ff8a4556d60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7ff8a455fc50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff8a4b24ad8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7ff8a4549060"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7ff8a455e3a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff8a4b24ad8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7ff8a4545020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff8a4b25020"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7ff8a4560900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff8a4b24ad8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7ff8a454b470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7ff8a455ac10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7ff8a45633a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff8a4b24ad8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7ff8a454c470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7ff8a454fc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7ff8a454cc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7ff8a4552c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7ff8a454d470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7ff8a4546020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff8a4b25020"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7ff8a4554cc8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7ff8a4542020"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7ff8a4b27c00"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7ff8a455dc50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7ff8a4559c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7ff8a4550470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7ff8a4554528"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7ff8a4550c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7ff8a4558e10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7ff8a4562020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff8a4b24ad8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7ff8a455e9b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff8a4b24ad8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7ff8a455d638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff8a4b24ad8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7ff8a45487c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff8a4b25020"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7ff8a4548020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff8a4b25020"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7ff8a455f020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff8a4b24ad8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7ff8a4549800"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7ff8a45447c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff8a4b25020"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7ff8a4551470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7ff8a454dc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7ff8a45602e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff8a4b24ad8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7ff8a45534f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7ff8a4553c90"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7ff8a454a470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x7ff8a45328c0"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x7ff8a452dd58"/></to>
    </wire>
    <wire loc="59:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7ff8a4519a18"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7ff8a51b7908"/></to>
    </wire>
    <wire loc="68:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7ff8a452c420"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7ff8a4cc4e20"/></to>
    </wire>
    <wire loc="69:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7ff8a452b688"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x7ff8a4cc2020"/></to>
    </wire>
    <wire loc="70:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7ff8a452a818"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x7ff8a4cc11b8"/></to>
    </wire>
    <wire loc="71:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7ff8a4529a30"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x7ff8a4c86190"/></to>
    </wire>
    <wire loc="72:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7ff8a45286c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ff8a435fdb8"/></to>
    </wire>
    <wire loc="126:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7ff8a435fdb8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ff8a4b28020"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7ff8a4527518"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x7ff8a433ba88"/></to>
    </wire>
    <wire loc="195:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7ff8a433ba88"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7ff8a4b27c00"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7ff8a4526a88"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x7ff8a4359638"/></to>
    </wire>
    <wire loc="137:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7ff8a4359638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff8a4b24ad8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7ff8a4526398"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x7ff8a43582e8"/></to>
    </wire>
    <wire loc="139:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7ff8a43582e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff8a4b24ad8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7ff8a4525328"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7ff8a44b44b0"/></to>
    </wire>
    <wire loc="77:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ff8a4524188"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ff8a44b1d08"/></to>
    </wire>
    <wire loc="78:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7ff8a4522b80"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7ff8a44af130"/></to>
    </wire>
    <wire loc="79:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7ff8a4524af0"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7ff8a4e73aa8"/></to>
    </wire>
    <wire loc="81:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7ff8a451edc8"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7ff8a4350c10"/></to>
    </wire>
    <wire loc="155:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7ff8a4350c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7ff8a451d6a8"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7ff8a434f470"/></to>
    </wire>
    <wire loc="156:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7ff8a434f470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7ff8a451e6c8"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x7ff8a4356060"/></to>
    </wire>
    <wire loc="141:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7ff8a4356060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff8a4b24ad8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7ff8a451a108"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x7ff8a433b2e8"/></to>
    </wire>
    <wire loc="192:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7ff8a433b2e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff8a4b25020"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7ff8a451b020"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7ff8a433e2e8"/></to>
    </wire>
    <wire loc="188:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7ff8a433e2e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff8a4b25020"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7ff8a451b850"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7ff8a433ea88"/></to>
    </wire>
    <wire loc="189:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7ff8a433ea88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff8a4b25020"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7ff8a451a970"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7ff8a433fa88"/></to>
    </wire>
    <wire loc="187:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7ff8a433fa88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff8a4b25020"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7ff8a4519210"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7ff8a435c470"/></to>
    </wire>
    <wire loc="129:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7ff8a435c470"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff8a4b24ad8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x7ff8a450ee38"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ff8a595d1c8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7ff8a4445720"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7ff8a4d44630"/></to>
    </wire>
    <wire loc="65:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x7ff8a44938b0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7ff8a4446528"/></to>
    </wire>
    <wire loc="69:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x7ff8a4495b20"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7ff8a442f020"/></to>
    </wire>
    <wire loc="59:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7ff8a442f020"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7ff8a437f988"/></to>
    </wire>
    <wire loc="58:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7ff8a4436d78"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7ff8a438c020"/></to>
    </wire>
    <wire loc="57:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7ff8a4436080"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ff8a442c560"/></to>
    </wire>
    <wire loc="52:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7ff8a442c560"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ff8a32d5520"/></to>
    </wire>
    <wire loc="61:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7ff8a4386208"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7ff8a43fdd88"/></to>
    </wire>
    <wire loc="62:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7ff8a43d3020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7ff8a442cd48"/></to>
    </wire>
    <wire loc="53:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7ff8a442cd48"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7ff8a32cfc78"/></to>
    </wire>
    <wire loc="63:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7ff8a437eb88"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7ff8a4421bd0"/></to>
    </wire>
    <wire loc="50:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7ff8a4421bd0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7ff8a44193f8"/></to>
    </wire>
    <wire loc="51:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7ff8a32d5520"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ff8a3298a18"/></to>
    </wire>
    <wire loc="55:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7ff8a32c81e8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7ff8a32d5d08"/></to>
    </wire>
    <wire loc="52:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7ff8a32d5d08"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7ff8a3297270"/></to>
    </wire>
    <wire loc="56:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7ff8a32cb020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7ff8a4421bd0"/></to>
    </wire>
    <wire loc="54:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7ff8a3293200"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7ff8a32c0a08"/></to>
    </wire>
    <wire loc="49:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7ff8a32c0a08"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7ff8a4d9dba8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7ff8a3292750"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7ff8a32be0c0"/></to>
    </wire>
    <wire loc="50:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7ff8a32be0c0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7ff8a4d99850"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7ff8a3291a50"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7ff8a329a430"/></to>
    </wire>
    <wire loc="51:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7ff8a329a430"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7ff8a4d961c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7ff8a4416688"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7ff8a4d41420"/></to>
    </wire>
    <wire loc="74:/home/paul/wsnpr/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7ff8a43d0020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ff8a595d1c8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/paul/wsnpr/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7ff8a4381478"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ff8a595d1c8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/home/paul/wsnpr/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7ff8a4376420"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7ff8a436d6a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/paul/wsnpr/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7ff8a436d6a0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7ff8a4436d78"/></to>
    </wire>
    <wire loc="153:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7ff8a4352a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7ff8a435b100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff8a4b24ad8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7ff8a4355a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7ff8a4348c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7ff8a434fc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7ff8a435a3a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff8a4b24ad8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7ff8a4343470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7ff8a433f2e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff8a4b25020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7ff8a4354a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7ff8a4353a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7ff8a4349470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7ff8a434cc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7ff8a434e470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7ff8a435da18"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7ff8a4b28cb0"/></to>
    </wire>
    <wire loc="138:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7ff8a4359c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff8a4b24ad8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7ff8a4342a38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7ff8a4358a00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff8a4b24ad8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7ff8a4359020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff8a4b24ad8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7ff8a4345c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7ff8a43532e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7ff8a43542e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7ff8a435ca88"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff8a4b24ad8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7ff8a4346c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7ff8a4347470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7ff8a4345470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7ff8a433da88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff8a4b25020"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7ff8a434b470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7ff8a4347c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7ff8a4340a88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff8a4b25020"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7ff8a434d470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7ff8a43552e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7ff8a43522e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7ff8a4349c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7ff8a434ec10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7ff8a4348470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7ff8a4350470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7ff8a435b718"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff8a4b24ad8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7ff8a4356c90"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff8a4b24ad8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7ff8a43402e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff8a4b25020"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7ff8a4341a88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff8a4b25020"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7ff8a43412e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7ff8a433d2e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7ff8a4b25020"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7ff8a434bc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7ff8a4346470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7ff8a435bd30"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff8a4b24ad8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7ff8a435a9b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff8a4b24ad8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7ff8a434dc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7ff8a4356678"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7ff8a4b24ad8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7ff8a434c470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7ff8a4343c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7ff8a433a780"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7ff8a4b27c00"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/paul/wsnpr/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7ff8a4311668"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7ff8a430e528"/></to>
    </wire>
    <wire loc="54:/home/paul/wsnpr/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7ff8a43188d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ff8a4313b38"/></to>
    </wire>
    <wire loc="56:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7ff8a42ee578"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7ff8a42f3838"/></to>
    </wire>
    <wire loc="60:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7ff8a42ed2a0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7ff8a42f0468"/></to>
    </wire>
    <wire loc="74:/home/paul/wsnpr/tinyos-main/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7ff8a42f0468"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7ff8a4ab0858"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7ff8a42ec080"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7ff8a4314690"/></to>
    </wire>
    <wire loc="62:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ff8a42ec848"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ff8a44b1d08"/></to>
    </wire>
    <wire loc="57:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x7ff8a42d6748"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x7ff8a42d2978"/></to>
    </wire>
    <wire loc="58:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7ff8a42d0728"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7ff8a42d6e50"/></to>
    </wire>
    <wire loc="62:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ff8a42d0d68"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ff8a44b1d08"/></to>
    </wire>
    <wire loc="94:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7ff8a4298528"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7ff8a42a3670"/></to>
    </wire>
    <wire loc="95:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7ff8a4297358"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7ff8a42a3020"/></to>
    </wire>
    <wire loc="100:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7ff8a4297970"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7ff8a44b44b0"/></to>
    </wire>
    <wire loc="101:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ff8a42967a8"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ff8a44b1d08"/></to>
    </wire>
    <wire loc="102:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7ff8a42951c0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7ff8a424b2a8"/></to>
    </wire>
    <wire loc="184:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x7ff8a426bac0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ff8a595d1c8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x7ff8a423f928"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7ff8a423bd50"/></to>
    </wire>
    <wire loc="74:/home/paul/wsnpr/tinyos-main/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7ff8a423bd50"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7ff8a4ab0858"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7ff8a42283c8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7ff8a4efb658"/></to>
    </wire>
    <wire loc="67:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7ff8a4117728"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7ff8a410dd00"/></to>
    </wire>
    <wire loc="67:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7ff8a4177348"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7ff8a411d908"/></to>
    </wire>
    <wire loc="69:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7ff8a4117110"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ff8a410d6e8"/></to>
    </wire>
    <wire loc="60:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7ff8a41128f8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7ff8a4177c80"/></to>
    </wire>
    <wire loc="69:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7ff8a411c308"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7ff8a4114208"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7ff8a411b020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7ff8a4116760"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x7ff8a4112020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x7ff8a3e18020"/></to>
    </wire>
    <wire loc="64:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7ff8a4114208"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7ff8a3fe3020"/></to>
    </wire>
    <wire loc="65:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7ff8a4116760"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7ff8a3fe4868"/></to>
    </wire>
    <wire loc="66:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x7ff8a3fe3db8"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x7ff8a4112020"/></to>
    </wire>
    <wire loc="70:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7ff8a4103bc8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7ff8a41128f8"/></to>
    </wire>
    <wire loc="71:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7ff8a3fe1a50"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7ff8a41128f8"/></to>
    </wire>
    <wire loc="72:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7ff8a3fd8420"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7ff8a41128f8"/></to>
    </wire>
    <wire loc="74:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7ff8a3fe26c8"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7ff8a4101b48"/></to>
    </wire>
    <wire loc="75:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x7ff8a3fe1020"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x7ff8a4105898"/></to>
    </wire>
    <wire loc="77:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x7ff8a40fbb38"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x7ff8a3fdcb38"/></to>
    </wire>
    <wire loc="78:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x7ff8a40fa398"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7ff8a3fdb7e8"/></to>
    </wire>
    <wire loc="17:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7ff8a3fdb7e8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7ff8a3e2f670"/></to>
    </wire>
    <wire loc="80:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7ff8a3fcc448"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7ff8a3fb3020"/></to>
    </wire>
    <wire loc="13:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7ff8a3fb3020"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7ff8a3e33b90"/></to>
    </wire>
    <wire loc="332:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x7ff8a40a6830"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ff8a595d1c8"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x7ff8a40dcd70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ff8a595d1c8"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x7ff8a40a8020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ff8a595d1c8"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7ff8a40a3918"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ff8a595d1c8"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x7ff8a3fde100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ff8a595d1c8"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x7ff8a3fde8a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ff8a595d1c8"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="14:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7ff8a3fac408"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7ff8a3e32bd8"/></to>
    </wire>
    <wire loc="61:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7ff8a3e32bd8"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7ff8a3f9ec88"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7ff8a3e33b90"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7ff8a3f9f800"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="18:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7ff8a3e31740"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7ff8a3e2c020"/></to>
    </wire>
    <wire loc="19:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7ff8a3e2c650"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ff8a3e347d0"/></to>
    </wire>
    <wire loc="59:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7ff8a3e347d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ff8a3fa17b8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7ff8a3e33430"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7ff8a31628c8"/></to>
    </wire>
    <wire loc="60:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7ff8a31628c8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7ff8a3e71848"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7ff8a3f9a020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7ff8a3e31740"/></to>
    </wire>
    <wire loc="66:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7ff8a315b780"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7ff8a3fa09d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7ff8a3f9cd50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ff8a3163bd0"/></to>
    </wire>
    <wire loc="59:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7ff8a3163bd0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ff8a3e72608"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7ff8a3f9acb8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7ff8a315b020"/></to>
    </wire>
    <wire loc="63:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7ff8a315b020"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7ff8a3e73910"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7ff8a3fa09d0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7ff8a3f32a68"/></to>
    </wire>
    <wire loc="59:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x7ff8a3f9ec88"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x7ff8a3f2f550"/></to>
    </wire>
    <wire loc="58:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x7ff8a3f9f800"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x7ff8a3f313c8"/></to>
    </wire>
    <wire loc="55:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7ff8a3fa17b8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ff8a3f33cb8"/></to>
    </wire>
    <wire loc="57:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7ff8a3f2d020"/></from>
      <to><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7ff8a3f9a020"/></to>
    </wire>
    <wire loc="60:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7ff8a3f2e180"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7ff8a3f9cd50"/></to>
    </wire>
    <wire loc="61:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7ff8a3f28020"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7ff8a3f9acb8"/></to>
    </wire>
    <wire loc="64:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7ff8a3f2d658"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7ff8a3f19d18"/></to>
    </wire>
    <wire loc="88:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7ff8a3f19d18"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7ff8a3f12060"/></to>
    </wire>
    <wire loc="67:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7ff8a3f289b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7ff8a3e8b020"/></to>
    </wire>
    <wire loc="49:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Counter32khz16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7ff8a3e8b020"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7ff8a4d41420"/></to>
    </wire>
    <wire loc="70:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7ff8a3f26928"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7ff8a51b7908"/></to>
    </wire>
    <wire loc="89:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7ff8a3f16528"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7ff8a3f0e8e0"/></to>
    </wire>
    <wire loc="87:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7ff8a3f19528"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7ff8a3f157d0"/></to>
    </wire>
    <wire loc="91:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7ff8a3f0d1e8"/></from>
      <to><interface-ref name="SIMO1" scoped="" ref="0x7ff8a5107560"/></to>
    </wire>
    <wire loc="92:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7ff8a3f0b020"/></from>
      <to><interface-ref name="SOMI1" scoped="" ref="0x7ff8a5105560"/></to>
    </wire>
    <wire loc="93:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7ff8a3f0ae00"/></from>
      <to><interface-ref name="UCLK1" scoped="" ref="0x7ff8a5103560"/></to>
    </wire>
    <wire loc="94:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7ff8a3f08c78"/></from>
      <to><interface-ref name="URXD1" scoped="" ref="0x7ff8a50ff560"/></to>
    </wire>
    <wire loc="95:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7ff8a3f06af0"/></from>
      <to><interface-ref name="UTXD1" scoped="" ref="0x7ff8a5101560"/></to>
    </wire>
    <wire loc="66:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7ff8a31607c0"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7ff8a3f19d18"/></to>
    </wire>
    <wire loc="62:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7ff8a3160060"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7ff8a3e6f080"/></to>
    </wire>
    <wire loc="58:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7ff8a3e6f080"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7ff8a3e66e20"/></to>
    </wire>
    <wire loc="61:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7ff8a3e6fd80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7ff8a315b780"/></to>
    </wire>
    <wire loc="56:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7ff8a3e71848"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7ff8a3e67af8"/></to>
    </wire>
    <wire loc="106:/home/paul/wsnpr/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7ff8a3e67af8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7ff8a30f7388"/></to>
    </wire>
    <wire loc="51:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7ff8a3e73910"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7ff8a3e6d480"/></to>
    </wire>
    <wire loc="55:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7ff8a3e72608"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ff8a3e68d80"/></to>
    </wire>
    <wire loc="105:/home/paul/wsnpr/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7ff8a3e68d80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ff8a30f8668"/></to>
    </wire>
    <wire loc="108:/home/paul/wsnpr/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7ff8a3e66e20"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7ff8a30f6700"/></to>
    </wire>
    <wire loc="52:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7ff8a3e6c438"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7ff8a3f16528"/></to>
    </wire>
    <wire loc="57:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7ff8a3e656d8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7ff8a3e6fd80"/></to>
    </wire>
    <wire loc="59:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7ff8a3e6b2a8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7ff8a3e66e20"/></to>
    </wire>
    <wire loc="62:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7ff8a3e4b268"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7ff8a3e66268"/></to>
    </wire>
    <wire loc="107:/home/paul/wsnpr/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7ff8a3e66268"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7ff8a30f7ac8"/></to>
    </wire>
    <wire loc="65:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7ff8a3e61478"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7ff8a3f19528"/></to>
    </wire>
    <wire loc="109:/home/paul/wsnpr/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7ff8a30f5020"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7ff8a3e656d8"/></to>
    </wire>
    <wire loc="111:/home/paul/wsnpr/tinyos-main/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7ff8a30f57a0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7ff8a30fb658"/></to>
    </wire>
    <wire loc="75:/home/paul/wsnpr/tinyos-main/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7ff8a30f2908"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ff8a595d1c8"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/paul/wsnpr/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7ff8a30c4600"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7ff8a3e61478"/></to>
    </wire>
    <wire loc="82:/home/paul/wsnpr/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7ff8a30c4d20"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7ff8a3e61b98"/></to>
    </wire>
    <wire loc="84:/home/paul/wsnpr/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7ff8a30c32e8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7ff8a3e4b268"/></to>
    </wire>
    <wire loc="85:/home/paul/wsnpr/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7ff8a30c2020"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7ff8a3e4be20"/></to>
    </wire>
    <wire loc="65:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7ff8a30b7a78"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7ff8a3dcd020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/chips/s1087/HamamatsuS1087ParC.nc">
      <from><interface-ref name="ReadStream" scoped="" ref="0x7ff8a3a21b10"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x7ff8a30b2358"/></to>
    </wire>
    <wire loc="66:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="ReadStream" scoped="" ref="0x7ff8a30b2358"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x7ff8a3aec3f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/chips/s1087/HamamatsuS1087ParC.nc">
      <from><interface-ref name="DeviceMetadata" scoped="" ref="0x7ff8a3df9c38"/></from>
      <to><interface-ref name="DeviceMetadata" scoped="" ref="0x7ff8a3a280c0"/></to>
    </wire>
    <wire loc="54:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/chips/s1087/HamamatsuS1087ParC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7ff8a30b41d8"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7ff8a3a289b0"/></to>
    </wire>
    <wire loc="55:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/chips/s1087/HamamatsuS1087ParC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7ff8a30ae020"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7ff8a3a289b0"/></to>
    </wire>
    <wire loc="66:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7ff8a3db94f8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7ff8a30b41d8"/></to>
    </wire>
    <wire loc="67:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="SingleChannel" scoped="" ref="0x7ff8a3da7ab8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7ff8a30a9cb8"/></to>
    </wire>
    <wire loc="59:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7ff8a30a9cb8"/></from>
      <to><interface-ref name="SingleChannel" scoped="" ref="0x7ff8a3d54db0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="ResourceRead" scoped="" ref="0x7ff8a3dbdc48"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ff8a30a9100"/></to>
    </wire>
    <wire loc="58:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7ff8a30a9100"/></from>
      <to><interface-ref name="ClientResource" scoped="" ref="0x7ff8a3bc5270"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7ff8a30a7e50"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7ff8a30b41d8"/></to>
    </wire>
    <wire loc="136:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/AdcP.nc">
      <from><interface-ref name="readDone" scoped="" ref="0x7ff8a3d8b590"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ff8a595d1c8"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7ff8a30a8c18"/></from>
      <to><interface-ref name="MultiChannel" scoped="" ref="0x7ff8a3d513c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7ff8a30a7578"/></from>
      <to><interface-ref name="Overflow" scoped="" ref="0x7ff8a3d50300"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="AdcResource" scoped="" ref="0x7ff8a3bc44f8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ff8a3d59ab0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="ConfUp" scoped="" ref="0x7ff8a3098b30"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7ff8a30a7e50"/></to>
    </wire>
    <wire loc="67:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7ff8a3bc3990"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ConfSub" scoped="" ref="0x7ff8a3099998"/></to>
    </wire>
    <wire loc="52:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="MultiChannel" scoped="" ref="0x7ff8a3d513c8"/></from>
      <to><interface-ref name="MultiChannel" scoped="" ref="0x7ff8a3d4a900"/></to>
    </wire>
    <wire loc="54:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="DMAExtension" scoped="" ref="0x7ff8a3d4f1c8"/></from>
      <to><interface-ref name="DMAExtension" scoped="" ref="0x7ff8a3d47670"/></to>
    </wire>
    <wire loc="53:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7ff8a3d50300"/></from>
      <to><interface-ref name="Overflow" scoped="" ref="0x7ff8a3d488b0"/></to>
    </wire>
    <wire loc="51:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="SingleChannel" scoped="" ref="0x7ff8a3d54db0"/></from>
      <to><interface-ref name="SingleChannel" scoped="" ref="0x7ff8a3d4b270"/></to>
    </wire>
    <wire loc="50:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7ff8a3d59ab0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ff8a3be2750"/></to>
    </wire>
    <wire loc="98:/home/paul/wsnpr/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7ff8a3be2750"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ff8a3082180"/></to>
    </wire>
    <wire loc="57:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="ADCArbiterInfo" scoped="" ref="0x7ff8a3d46020"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7ff8a3be0c50"/></to>
    </wire>
    <wire loc="100:/home/paul/wsnpr/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7ff8a3be0c50"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7ff8a30815e8"/></to>
    </wire>
    <wire loc="58:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="HplAdc12" scoped="" ref="0x7ff8a3d395f0"/></from>
      <to><interface-ref name="HplAdc12" scoped="" ref="0x7ff8a3c6f8e8"/></to>
    </wire>
    <wire loc="62:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x7ff8a3d33db0"/></from>
      <to><interface-ref name="Port60" scoped="" ref="0x7ff8a512a568"/></to>
    </wire>
    <wire loc="63:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x7ff8a3d31dd0"/></from>
      <to><interface-ref name="Port61" scoped="" ref="0x7ff8a5128568"/></to>
    </wire>
    <wire loc="64:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7ff8a3d2fc48"/></from>
      <to><interface-ref name="Port62" scoped="" ref="0x7ff8a5126568"/></to>
    </wire>
    <wire loc="65:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7ff8a3d2dac0"/></from>
      <to><interface-ref name="Port63" scoped="" ref="0x7ff8a5124568"/></to>
    </wire>
    <wire loc="66:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7ff8a3d2b938"/></from>
      <to><interface-ref name="Port64" scoped="" ref="0x7ff8a5122568"/></to>
    </wire>
    <wire loc="67:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x7ff8a3d297b0"/></from>
      <to><interface-ref name="Port65" scoped="" ref="0x7ff8a5120568"/></to>
    </wire>
    <wire loc="68:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x7ff8a3d27628"/></from>
      <to><interface-ref name="Port66" scoped="" ref="0x7ff8a511e568"/></to>
    </wire>
    <wire loc="69:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x7ff8a3d25528"/></from>
      <to><interface-ref name="Port67" scoped="" ref="0x7ff8a511c568"/></to>
    </wire>
    <wire loc="74:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7ff8a3d444e0"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x7ff8a53e9378"/></to>
    </wire>
    <wire loc="75:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x7ff8a3d37b68"/></from>
      <to><interface-ref name="ControlA0" scoped="" ref="0x7ff8a53e1818"/></to>
    </wire>
    <wire loc="76:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x7ff8a3d35060"/></from>
      <to><interface-ref name="ControlA1" scoped="" ref="0x7ff8a53e8bb8"/></to>
    </wire>
    <wire loc="77:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x7ff8a3d34390"/></from>
      <to><interface-ref name="CompareA0" scoped="" ref="0x7ff8a53d9378"/></to>
    </wire>
    <wire loc="78:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x7ff8a3d330c0"/></from>
      <to><interface-ref name="CompareA1" scoped="" ref="0x7ff8a53de0c0"/></to>
    </wire>
    <wire loc="99:/home/paul/wsnpr/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7ff8a3be0510"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7ff8a3082e78"/></to>
    </wire>
    <wire loc="101:/home/paul/wsnpr/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7ff8a3080020"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7ff8a3bdf550"/></to>
    </wire>
    <wire loc="103:/home/paul/wsnpr/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7ff8a30807a0"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x7ff8a30843f8"/></to>
    </wire>
    <wire loc="68:/home/paul/wsnpr/tinyos-main/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7ff8a307f2e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ff8a595d1c8"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="ClientResource" scoped="" ref="0x7ff8a3bc5270"/></from>
      <to><interface-ref name="ClientResource" scoped="" ref="0x7ff8a3b61208"/></to>
    </wire>
    <wire loc="65:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="AdcResource" scoped="" ref="0x7ff8a3b604c0"/></from>
      <to><interface-ref name="AdcResource" scoped="" ref="0x7ff8a3bc44f8"/></to>
    </wire>
    <wire loc="66:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7ff8a3b5c1c8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7ff8a3bc3990"/></to>
    </wire>
    <wire loc="68:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="RefVolt_1_5V" scoped="" ref="0x7ff8a3b5f200"/></from>
      <to><interface-ref name="RefVolt_1_5V" scoped="" ref="0x7ff8a3bbe368"/></to>
    </wire>
    <wire loc="69:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="RefVolt_2_5V" scoped="" ref="0x7ff8a3b5fd70"/></from>
      <to><interface-ref name="RefVolt_2_5V" scoped="" ref="0x7ff8a3bbd020"/></to>
    </wire>
    <wire loc="70:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="SwitchOnTimer" scoped="" ref="0x7ff8a3bbba48"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7ff8a3b2de08"/></to>
    </wire>
    <wire loc="52:/home/paul/wsnpr/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7ff8a3b2de08"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7ff8a436d6a0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="SwitchOffTimer" scoped="" ref="0x7ff8a3bb6c70"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7ff8a3b26350"/></to>
    </wire>
    <wire loc="52:/home/paul/wsnpr/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7ff8a3b26350"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7ff8a436d6a0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="SwitchOffSettleTimer" scoped="" ref="0x7ff8a3bb1db0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7ff8a3b20a60"/></to>
    </wire>
    <wire loc="52:/home/paul/wsnpr/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7ff8a3b20a60"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7ff8a436d6a0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="HplAdc12" scoped="" ref="0x7ff8a3bbdb28"/></from>
      <to><interface-ref name="HplAdc12" scoped="" ref="0x7ff8a3c6f8e8"/></to>
    </wire>
    <wire loc="52:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <from><interface-ref name="switchOff" scoped="" ref="0x7ff8a3b5a910"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ff8a595d1c8"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7ff8a30465a8"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7ff8a30ae020"/></to>
    </wire>
    <wire loc="67:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7ff8a3ae8668"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7ff8a30ae020"/></to>
    </wire>
    <wire loc="68:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7ff8a3ae41c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ff8a30496d8"/></to>
    </wire>
    <wire loc="58:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7ff8a30496d8"/></from>
      <to><interface-ref name="ClientResource" scoped="" ref="0x7ff8a3bc5270"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="69:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7ff8a3ae7c08"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7ff8a30483f0"/></to>
    </wire>
    <wire loc="59:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7ff8a30483f0"/></from>
      <to><interface-ref name="SingleChannel" scoped="" ref="0x7ff8a3d54db0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="31:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="ReadStream" scoped="" ref="0x7ff8a3aec3f0"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x7ff8a3a6fd58"/></to>
    </wire>
    <wire loc="32:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7ff8a3ad94c0"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7ff8a3ae8668"/></to>
    </wire>
    <wire loc="33:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7ff8a3a3f6b8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ff8a3ae41c8"/></to>
    </wire>
    <wire loc="35:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x7ff8a3a449d8"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x7ff8a3ae0c98"/></to>
    </wire>
    <wire loc="38:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="SingleChannel" scoped="" ref="0x7ff8a3adcd38"/></from>
      <to><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7ff8a3ae7c08"/></to>
    </wire>
    <wire loc="39:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7ff8a3ad8740"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7ff8a3a751a8"/></to>
    </wire>
    <wire loc="53:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7ff8a3a751a8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7ff8a3034020"/></to>
    </wire>
    <wire loc="156:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/AdcStreamP.nc">
      <from><interface-ref name="bufferDone" scoped="" ref="0x7ff8a3ab0a00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ff8a595d1c8"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/AdcStreamP.nc">
      <from><interface-ref name="readStreamDone" scoped="" ref="0x7ff8a3abd6a8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ff8a595d1c8"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/AdcStreamP.nc">
      <from><interface-ref name="readStreamFail" scoped="" ref="0x7ff8a3ab8b60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7ff8a595d1c8"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7ff8a3a76960"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ff8a303a630"/></to>
    </wire>
    <wire loc="51:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7ff8a303a630"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7ff8a3020bd8"/></to>
    </wire>
    <wire loc="55:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7ff8a302d450"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7ff8a303ae18"/></to>
    </wire>
    <wire loc="52:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7ff8a303ae18"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7ff8a301f4f8"/></to>
    </wire>
    <wire loc="56:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7ff8a30301a8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7ff8a4421bd0"/></to>
    </wire>
    <wire loc="54:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7ff8a301b568"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7ff8a3026c48"/></to>
    </wire>
    <wire loc="49:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7ff8a3026c48"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7ff8a4d9dba8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7ff8a301abd8"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7ff8a30232a8"/></to>
    </wire>
    <wire loc="50:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7ff8a30232a8"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7ff8a4d99850"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7ff8a3018020"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7ff8a30225b8"/></to>
    </wire>
    <wire loc="51:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7ff8a30225b8"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7ff8a4d961c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7ff8a30473f0"/></from>
      <to><interface-ref name="MultiChannel" scoped="" ref="0x7ff8a3d513c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7ff8a3047c98"/></from>
      <to><interface-ref name="Overflow" scoped="" ref="0x7ff8a3d50300"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="AdcResource" scoped="" ref="0x7ff8a3bc44f8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7ff8a3d59ab0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="ConfUp" scoped="" ref="0x7ff8a2fd8cf8"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7ff8a30465a8"/></to>
    </wire>
    <wire loc="67:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7ff8a3bc3990"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ConfSub" scoped="" ref="0x7ff8a2fdab28"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/home/paul/wsnpr/tinyos-main/tos/system/MainC.nc">
      <documentation loc="45:/home/paul/wsnpr/tinyos-main/tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="40:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <documentation loc="34:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:/home/paul/wsnpr/tinyos-main/tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:/home/paul/wsnpr/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:/home/paul/wsnpr/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="33:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="43:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="37:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="33:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="39(Msp430TimerC.Msp430TimerA):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="39(Msp430TimerC.Msp430TimerB):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="39(Msp430TimerC.Msp430TimerA0):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="39(Msp430TimerC.Msp430TimerA1):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="39(Msp430TimerC.Msp430TimerA2):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="39(Msp430TimerC.Msp430TimerB0):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="39(Msp430TimerC.Msp430TimerB1):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="39(Msp430TimerC.Msp430TimerB2):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="39(Msp430TimerC.Msp430TimerB3):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="39(Msp430TimerC.Msp430TimerB4):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="39(Msp430TimerC.Msp430TimerB5):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="39(Msp430TimerC.Msp430TimerB6):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="33:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @date   October 26, 2005&#10; @see  Please refer to TEP 112 for more information about this component and its&#10;          intended use.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:/home/paul/wsnpr/tinyos-main/tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:/home/paul/wsnpr/tinyos-main/tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/home/paul/wsnpr/tinyos-main/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/home/paul/wsnpr/tinyos-main/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/home/paul/wsnpr/tinyos-main/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/home/paul/wsnpr/tinyos-main/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/home/paul/wsnpr/tinyos-main/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="RssiBaseC" loc="4:RssiBaseC.nc">
      <documentation loc="32:../TicketMessage.h">
        <short>&#10; </short>
        <long>&#10; @author Dimas Abreu Dutra&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BaseStationC" loc="77:../InterceptBase/BaseStationC.nc">
      <documentation loc="41:../InterceptBase/BaseStationC.nc">
        <short>&#10; The TinyOS 2.x base station that forwards packets between the UART&#10; and radio.It replaces the GenericBase of TinyOS 1.0 and the&#10; TOSBase of TinyOS 1.1.</short>
        <long>&#10; The TinyOS 2.x base station that forwards packets between the UART&#10; and radio.It replaces the GenericBase of TinyOS 1.0 and the&#10; TOSBase of TinyOS 1.1.&#10;&#10; &#60;p>On the serial link, BaseStation sends and receives simple active&#10; messages (not particular radio packets): on the radio link, it&#10; sends radio active messages, whose format depends on the network&#10; stack being used. BaseStation will copy its compiled-in group ID to&#10; messages moving from the serial link to the radio, and will filter&#10; out incoming radio messages that do not contain that group ID.&#60;/p>&#10;&#10; &#60;p>BaseStation includes queues in both directions, with a guarantee&#10; that once a message enters a queue, it will eventually leave on the&#10; other interface. The queues allow the BaseStation to handle load&#10; spikes.&#60;/p>&#10;&#10; &#60;p>BaseStation acknowledges a message arriving over the serial link&#10; only if that message was successfully enqueued for delivery to the&#10; radio link.&#60;/p>&#10;&#10; &#60;p>The LEDS are programmed to toggle as follows:&#60;/p>&#10; &#60;ul>&#10; &#60;li>&#60;b>RED Toggle:&#60;/b>: Message bridged from serial to radio&#60;/li>&#10; &#60;li>&#60;b>GREEN Toggle:&#60;/b> Message bridged from radio to serial&#60;/li>&#10; &#60;li>&#60;b>YELLOW/BLUE Toggle:&#60;/b> Dropped message due to queue overflow in either direction&#60;/li>&#10; &#60;/ul>&#10;&#10; @author Phil Buonadonna&#10; @author Gilman Tolle&#10; @author David Gay&#10; @author Philip Levis&#10; @author Dimas Abreu Dutra&#10; @date January 29 2008&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BaseStationP" loc="58:../InterceptBase/BaseStationP.nc" safe="">
      <documentation loc="71:/home/paul/wsnpr/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:/home/paul/wsnpr/tinyos-main/tos/system/LedsC.nc">
      <documentation loc="34:/home/paul/wsnpr/tinyos-main/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/home/paul/wsnpr/tinyos-main/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/home/paul/wsnpr/tinyos-main/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="39(HplMsp430GeneralIOC.P10):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="39(HplMsp430GeneralIOC.P11):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="39(HplMsp430GeneralIOC.P12):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="39(HplMsp430GeneralIOC.P13):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="39(HplMsp430GeneralIOC.P14):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="39(HplMsp430GeneralIOC.P15):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="39(HplMsp430GeneralIOC.P16):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="39(HplMsp430GeneralIOC.P17):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="39(HplMsp430GeneralIOC.P20):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="39(HplMsp430GeneralIOC.P21):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="39(HplMsp430GeneralIOC.P22):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="39(HplMsp430GeneralIOC.P23):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="39(HplMsp430GeneralIOC.P24):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="39(HplMsp430GeneralIOC.P25):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="39(HplMsp430GeneralIOC.P26):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="39(HplMsp430GeneralIOC.P27):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="39(HplMsp430GeneralIOC.P30):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="39(HplMsp430GeneralIOC.P31):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="39(HplMsp430GeneralIOC.P32):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="39(HplMsp430GeneralIOC.P33):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="39(HplMsp430GeneralIOC.P34):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="39(HplMsp430GeneralIOC.P35):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="39(HplMsp430GeneralIOC.P36):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="39(HplMsp430GeneralIOC.P37):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="39(HplMsp430GeneralIOC.P40):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="39(HplMsp430GeneralIOC.P41):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="39(HplMsp430GeneralIOC.P42):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="39(HplMsp430GeneralIOC.P43):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="39(HplMsp430GeneralIOC.P44):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="39(HplMsp430GeneralIOC.P45):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="39(HplMsp430GeneralIOC.P46):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="39(HplMsp430GeneralIOC.P47):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="39(HplMsp430GeneralIOC.P50):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="39(HplMsp430GeneralIOC.P51):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="39(HplMsp430GeneralIOC.P52):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="39(HplMsp430GeneralIOC.P53):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="39(HplMsp430GeneralIOC.P54):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="39(HplMsp430GeneralIOC.P55):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="39(HplMsp430GeneralIOC.P56):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="39(HplMsp430GeneralIOC.P57):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="39(HplMsp430GeneralIOC.P60):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="39(HplMsp430GeneralIOC.P61):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="39(HplMsp430GeneralIOC.P62):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="39(HplMsp430GeneralIOC.P63):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="39(HplMsp430GeneralIOC.P64):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="39(HplMsp430GeneralIOC.P65):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="39(HplMsp430GeneralIOC.P66):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="39(HplMsp430GeneralIOC.P67):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="59:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/ActiveMessageC.nc">
      <documentation loc="49:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the Telos platform.</short>
        <long>&#10;&#10; The Active Message layer on the Telos platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.9 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="40(AlarmMultiplexC.Alarm):/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="32:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff8a5294020"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff8a5294378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="41:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Counter32khz32C.nc">
      <documentation loc="33:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Counter32khz32C.nc">
        <short>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff8a5294020"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff8a5294378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C.Transform" loc="54(Counter32khz32C.Transform):/home/paul/wsnpr/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/paul/wsnpr/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff8a5294020"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff8a5294378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff8a6018020"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff8a5294020"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff8a5294378"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform):/home/paul/wsnpr/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/home/paul/wsnpr/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff8a5294020"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff8a5294378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff8a6018020"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff8a5294020"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff8a5294378"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="40:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="32:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420PinsC.CCAM" loc="42(HplCC2420PinsC.CCAM):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.CSNM" loc="42(HplCC2420PinsC.CSNM):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOM" loc="42(HplCC2420PinsC.FIFOM):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOPM" loc="42(HplCC2420PinsC.FIFOPM):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.RSTNM" loc="42(HplCC2420PinsC.RSTNM):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.SFDM" loc="42(HplCC2420PinsC.SFDM):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.VRENM" loc="42(HplCC2420PinsC.VRENM):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="40:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="38(HplCC2420InterruptsC.CaptureSFDC):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/GpioCaptureC.nc">
      <documentation loc="33:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430InterruptC" loc="39:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <documentation loc="33:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for GPIO interrupts.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptP" loc="36:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc" safe="">
      <documentation loc="33:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptCCAC" loc="43(HplCC2420InterruptsC.InterruptCCAC):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="43(HplCC2420InterruptsC.InterruptFIFOPC):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <documentation loc="33:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):/home/paul/wsnpr/tinyos-main/tos/system/StateC.nc">
      <documentation loc="32:/home/paul/wsnpr/tinyos-main/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:/home/paul/wsnpr/tinyos-main/tos/system/StateImplC.nc">
      <documentation loc="32:/home/paul/wsnpr/tinyos-main/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:/home/paul/wsnpr/tinyos-main/tos/system/StateImplP.nc" safe="">
      <documentation loc="32:/home/paul/wsnpr/tinyos-main/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="40(CC2420SpiWireC.HplCC2420SpiC):/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC" loc="79(CC2420SpiWireC.HplCC2420SpiC.SpiC):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <instance number="0">
        <component-ref qname="Msp430Spi0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P" loc="71:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <documentation loc="66:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P.SpiP" loc="73(Msp430SpiNoDma0P.SpiP):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <documentation loc="66:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430SpiNoDmaP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart0C" loc="74:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <documentation loc="31:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart0P" loc="74:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0P.nc" safe="">
      <documentation loc="62:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
        <short>&#10; Implementation of USART0 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART0 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @author: Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10; @version $Revision: 1.8 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC" loc="39(CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <documentation loc="32:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P" loc="37:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <documentation loc="32:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.UsartShareP" loc="37(Msp430UsartShare0P.UsartShareP):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC" loc="89(Msp430UsartShare0P.ArbiterC):/home/paul/wsnpr/tinyos-main/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/home/paul/wsnpr/tinyos-main/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart0.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Queue" loc="42(Msp430UsartShare0P.ArbiterC.Queue):/home/paul/wsnpr/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Arbiter" loc="52(Msp430UsartShare0P.ArbiterC.Arbiter):/home/paul/wsnpr/tinyos-main/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/paul/wsnpr/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430I2C0C" loc="2:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <configuration/>
    </component>
    <component qname="HplMsp430I2C0P" loc="37:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C0P.nc" safe="">
      <documentation loc="32:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-24 05:32:31 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/home/paul/wsnpr/tinyos-main/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/home/paul/wsnpr/tinyos-main/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="11:/home/paul/wsnpr/tinyos-main/tos/chips/ds2411/LocalIeeeEui64C.nc">
      <configuration/>
    </component>
    <component qname="LocalIeeeEui64P" loc="3:/home/paul/wsnpr/tinyos-main/tos/chips/ds2411/LocalIeeeEui64P.nc">
      <module/>
    </component>
    <component qname="Ds2411C" loc="7:/home/paul/wsnpr/tinyos-main/tos/chips/ds2411/Ds2411C.nc">
      <configuration/>
    </component>
    <component qname="Ds2411P" loc="9:/home/paul/wsnpr/tinyos-main/tos/chips/ds2411/Ds2411P.nc">
      <module/>
    </component>
    <component qname="OneWireMasterC" loc="6:/home/paul/wsnpr/tinyos-main/tos/lib/onewire/OneWireMasterC.nc">
      <documentation loc="1:/home/paul/wsnpr/tinyos-main/tos/lib/onewire/OneWireMasterC.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="OneWireMasterP" loc="9:/home/paul/wsnpr/tinyos-main/tos/lib/onewire/OneWireMasterP.nc">
      <documentation loc="2:/home/paul/wsnpr/tinyos-main/tos/lib/onewire/OneWireMasterP.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10; Only supports one device on the 1-wire bus.</short>
      </documentation>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="39:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <documentation loc="33:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/BusyWaitMicroC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BusyWaitMicroC.BusyWaitCounterC" loc="52(BusyWaitMicroC.BusyWaitCounterC):/home/paul/wsnpr/tinyos-main/tos/lib/timer/BusyWaitCounterC.nc">
      <documentation loc="36:/home/paul/wsnpr/tinyos-main/tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BusyWaitCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff8a5294788"/>
            <typename><typedef-ref name="TMicro" ref="0x7ff8a5294ae0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430CounterMicroC" loc="44:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <documentation loc="34:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
        <short>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.</short>
        <long>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.   If your base clock is in units of binary hertz then 1 uis, decimal&#10; hertz it will be 1us.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430CounterMicroC.Counter" loc="42(Msp430CounterMicroC.Counter):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff8a5294788"/>
            <typename><typedef-ref name="TMicro" ref="0x7ff8a5294ae0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplDs2411C" loc="1:/home/paul/wsnpr/tinyos-main/tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <configuration/>
    </component>
    <component qname="HplDs2411C.MspGpio" loc="42(HplDs2411C.MspGpio):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="Ds2411PowerControlC" loc="12:/home/paul/wsnpr/tinyos-main/tos/chips/ds2411/Ds2411PowerControlC.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):/home/paul/wsnpr/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/paul/wsnpr/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff8a5294020"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff8a5294378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC" loc="43:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff8a5294020"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff8a5294378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):/home/paul/wsnpr/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/paul/wsnpr/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff8a5296828"/>
            <typename><typedef-ref name="TMilli" ref="0x7ff8a5296b80"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff8a6018020"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff8a5294020"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff8a5294378"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff8a6018020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):/home/paul/wsnpr/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/home/paul/wsnpr/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff8a5296828"/>
            <typename><typedef-ref name="TMilli" ref="0x7ff8a5296b80"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff8a6018020"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff8a5294020"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff8a5294378"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/home/paul/wsnpr/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/home/paul/wsnpr/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff8a5296828"/>
            <typename><typedef-ref name="TMilli" ref="0x7ff8a5296b80"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/home/paul/wsnpr/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/home/paul/wsnpr/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff8a5296828"/>
            <typename><typedef-ref name="TMilli" ref="0x7ff8a5296b80"/></typename>
          </type-tag>
          <value cst="I:5">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/home/paul/wsnpr/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/paul/wsnpr/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff8a5296828"/>
            <typename><typedef-ref name="TMilli" ref="0x7ff8a5296b80"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):/home/paul/wsnpr/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/paul/wsnpr/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/home/paul/wsnpr/tinyos-main/tos/system/TimerMilliP.nc">
      <documentation loc="34:/home/paul/wsnpr/tinyos-main/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:/home/paul/wsnpr/tinyos-main/tos/system/RandomC.nc">
      <documentation loc="33:/home/paul/wsnpr/tinyos-main/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/home/paul/wsnpr/tinyos-main/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/home/paul/wsnpr/tinyos-main/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):/home/paul/wsnpr/tinyos-main/tos/system/StateC.nc">
      <documentation loc="32:/home/paul/wsnpr/tinyos-main/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):/home/paul/wsnpr/tinyos-main/tos/system/StateC.nc">
      <documentation loc="32:/home/paul/wsnpr/tinyos-main/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):/home/paul/wsnpr/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):/home/paul/wsnpr/tinyos-main/tos/system/StateC.nc">
      <documentation loc="32:/home/paul/wsnpr/tinyos-main/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:/home/paul/wsnpr/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:/home/paul/wsnpr/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:/home/paul/wsnpr/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:/home/paul/wsnpr/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:/home/paul/wsnpr/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="2:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC" loc="42(PlatformSerialC.UartC):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <documentation loc="31:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Uart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P" loc="39:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <documentation loc="32:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Uart1P.UartP" loc="41(Msp430Uart1P.UartP):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <documentation loc="32:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart1C" loc="74:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <documentation loc="31:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart1P" loc="73:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <documentation loc="62:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
        <short>&#10; Implementation of USART1 lowlevel functionality - stateless.</short>
        <long>&#10; Implementation of USART1 lowlevel functionality - stateless.&#10; Setting a mode will by default disable USART-Interrupts.&#10;&#10; @author: Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10; @author: Jonathan Hui &#60;jhui@archedrock.com>&#10; @author: Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author: Joe Polastre&#10; @version $Revision: 1.7 $ $Date: 2010-06-04 22:30:21 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Counter32khz16C" loc="41:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Counter32khz16C.nc">
      <documentation loc="33:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Counter32khz16C.nc">
        <short>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz16C provides at 16-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformSerialC.UartC.UsartC" loc="40(PlatformSerialC.UartC.UsartC):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <documentation loc="32:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P" loc="38:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <documentation loc="32:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.UsartShareP" loc="37(Msp430UsartShare1P.UsartShareP):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC" loc="89(Msp430UsartShare1P.ArbiterC):/home/paul/wsnpr/tinyos-main/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/home/paul/wsnpr/tinyos-main/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart1.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Queue" loc="42(Msp430UsartShare1P.ArbiterC.Queue):/home/paul/wsnpr/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <instance number="2">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.ArbiterC.Arbiter" loc="52(Msp430UsartShare1P.ArbiterC.Arbiter):/home/paul/wsnpr/tinyos-main/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/paul/wsnpr/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC" loc="67(Msp430UsartShare1P.PowerManagerC):/home/paul/wsnpr/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:/home/paul/wsnpr/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare1P.PowerManagerC.PowerManager" loc="58(Msp430UsartShare1P.PowerManagerC.PowerManager):/home/paul/wsnpr/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:/home/paul/wsnpr/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="TelosSerialP" loc="1:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/TelosSerialP.nc">
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:/home/paul/wsnpr/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RssiBaseAppC.LaserTimer" loc="44(RssiBaseAppC.LaserTimer):/home/paul/wsnpr/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/paul/wsnpr/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RssiBaseAppC.LaserSensor" loc="40(RssiBaseAppC.LaserSensor):/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/chips/s1087/HamamatsuS1087ParC.nc">
      <documentation loc="32:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/chips/s1087/HamamatsuS1087ParC.nc">
        <short>&#10; HamamatsuS1087ParC is a driver for a photosynthetically-active&#10; radiation sensor available on the telosb platform.</short>
        <long>&#10; HamamatsuS1087ParC is a driver for a photosynthetically-active&#10; radiation sensor available on the telosb platform. &#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HamamatsuS1087ParC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RssiBaseAppC.LaserSensor.AdcReadClientC" loc="47(RssiBaseAppC.LaserSensor.AdcReadClientC):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/AdcReadClientC.nc">
      <instance number="0">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AdcP" loc="36:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/AdcP.nc" safe="">
      <module/>
    </component>
    <component qname="RssiBaseAppC.LaserSensor.AdcReadClientC.Msp430AdcClient" loc="43(RssiBaseAppC.LaserSensor.AdcReadClientC.Msp430AdcClient):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <documentation loc="33:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
        <short> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.</short>
        <long> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.&#10; Reference voltage is enabled automatically as required by the configuration.&#10; &#10; @author Jan Hauer &#10;&#10; @see  Please refer to the README.txt and TEP 101 for more information about&#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Adc12ClientAutoRVGC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Adc12P" loc="37:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <configuration/>
    </component>
    <component qname="Msp430Adc12ImplP" loc="37:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc" safe="">
      <module/>
    </component>
    <component qname="HplAdc12P" loc="45:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/HplAdc12P.nc">
      <documentation loc="36:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/HplAdc12P.nc">
        <short>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.</short>
        <long>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.&#10;&#10; @author Jan Hauer&#10; @see  Please refer to TEP 101 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Msp430Adc12P.Arbiter" loc="83(Msp430Adc12P.Arbiter):/home/paul/wsnpr/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc">
      <documentation loc="62:/home/paul/wsnpr/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleRoundRobinArbiterC"/>
        <arguments>
          <value cst="S:Msp430Adc12C.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Adc12P.Arbiter.Queue" loc="42(Msp430Adc12P.Arbiter.Queue):/home/paul/wsnpr/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="33:/home/paul/wsnpr/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430Adc12P.Arbiter.Arbiter" loc="49(Msp430Adc12P.Arbiter.Arbiter):/home/paul/wsnpr/tinyos-main/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/home/paul/wsnpr/tinyos-main/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430RefVoltArbiterP" loc="50:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <documentation loc="36:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
        <short> &#10; This component is meant to intercept requests to the &#60;code>Resource&#60;/code>&#10; interface on their way to the adc arbiter.</short>
        <long> &#10; This component is meant to intercept requests to the &#60;code>Resource&#60;/code>&#10; interface on their way to the adc arbiter. It checks whether the client's&#10; adc configuration requires the internal reference voltage generator of the&#10; MSP430 to be enabled during the conversion by inspecting the client's&#10; configuration data (using the &#60;code>AdcConfigure&#60;/code> interface). If so it&#10; makes sure that Resource.granted() is held back until the reference voltage&#10; is stable. Clients SHOULD NOT wire to &#60;code>Msp430RefVoltArbiterP&#60;/code> but&#10; to the Resource interface provided by&#10; &#60;code>Msp430Adc12ClientAutoRVGC&#60;/code>.&#10; &#10; @author Jan Hauer&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430RefVoltGeneratorP" loc="36:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <module/>
    </component>
    <component qname="Msp430RefVoltArbiterImplP" loc="36:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <module/>
    </component>
    <component qname="Msp430RefVoltArbiterP.SwitchOnDelayTimer" loc="44(Msp430RefVoltArbiterP.SwitchOnDelayTimer):/home/paul/wsnpr/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/paul/wsnpr/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430RefVoltArbiterP.SwitchOffDelayTimer" loc="44(Msp430RefVoltArbiterP.SwitchOffDelayTimer):/home/paul/wsnpr/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/paul/wsnpr/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430RefVoltArbiterP.SwitchOffSettleTimer" loc="44(Msp430RefVoltArbiterP.SwitchOffSettleTimer):/home/paul/wsnpr/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/paul/wsnpr/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RssiBaseAppC.LaserSensor.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC" loc="42(RssiBaseAppC.LaserSensor.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <documentation loc="33:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
        <short> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.</short>
        <long> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.&#10; (nesC optimizes all of its code away).&#10;&#10; @author: Jan Hauer&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Adc12ConfAlertC"/>
      </instance>
      <module/>
    </component>
    <component qname="RssiBaseAppC.LaserSensor.AdcReadStreamClientC" loc="47(RssiBaseAppC.LaserSensor.AdcReadStreamClientC):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <documentation loc="36:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
        <short> &#10; This component virtualizes the HIL of ADC12 on MSP430.</short>
        <long> &#10; This component virtualizes the HIL of ADC12 on MSP430. A client must wire&#10; &#60;code>AdcConfigure&#60;/code> to a component that returns the client's adc&#10; configuration data.&#10;&#10; @author Jan Hauer &#10; @see  Please refer to the README.txt and TEP 101 for more information about &#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadStreamClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcStreamP" loc="19:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <documentation loc="10:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/WireAdcStreamP.nc">
        <short>&#10; Support component for AdcReadStreamClientC.</short>
        <long>&#10; Support component for AdcReadStreamClientC.&#10;&#10; @author David Gay&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AdcStreamP" loc="46:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/AdcStreamP.nc" safe="">
      <documentation loc="39:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/AdcStreamP.nc">
        <short>&#10; Convert MSP430 HAL A/D interface to the HIL interfaces (adapted atmega code).</short>
        <long>&#10; Convert MSP430 HAL A/D interface to the HIL interfaces (adapted atmega code).&#10; @author David Gay&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="WireAdcStreamP.Alarm" loc="41(WireAdcStreamP.Alarm):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcStreamP.Alarm.AlarmFrom" loc="41(WireAdcStreamP.Alarm.AlarmFrom):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer" loc="37(WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm" loc="43(WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff8a5294020"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff8a5294378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="WireAdcStreamP.Alarm.Transform" loc="51(WireAdcStreamP.Alarm.Transform):/home/paul/wsnpr/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/home/paul/wsnpr/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff8a5296828"/>
            <typename><typedef-ref name="TMilli" ref="0x7ff8a5296b80"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff8a6018020"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff8a5294020"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff8a5294378"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="WireAdcStreamP.ArbitrateReadStream" loc="23(WireAdcStreamP.ArbitrateReadStream):/home/paul/wsnpr/tinyos-main/tos/system/ArbitratedReadStreamC.nc">
      <documentation loc="10:/home/paul/wsnpr/tinyos-main/tos/system/ArbitratedReadStreamC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using&#10; ArbitratedReadStreamC in a safe way.&#10;&#10; @param width_t Width of the underlying ReadStream interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbitratedReadStreamC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RssiBaseAppC.LaserSensor.AdcReadStreamClientC.Msp430AdcClient" loc="43(RssiBaseAppC.LaserSensor.AdcReadStreamClientC.Msp430AdcClient):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <documentation loc="33:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
        <short> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.</short>
        <long> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.&#10; Reference voltage is enabled automatically as required by the configuration.&#10; &#10; @author Jan Hauer &#10;&#10; @see  Please refer to the README.txt and TEP 101 for more information about&#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Adc12ClientAutoRVGC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RssiBaseAppC.LaserSensor.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC" loc="42(RssiBaseAppC.LaserSensor.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC):/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <documentation loc="33:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
        <short> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.</short>
        <long> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.&#10; (nesC optimizes all of its code away).&#10;&#10; @author: Jan Hauer&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Adc12ConfAlertC"/>
      </instance>
      <module/>
    </component>
    <component qname="HamamatsuS1087ParP" loc="42:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/chips/s1087/HamamatsuS1087ParP.nc">
      <documentation loc="34:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/chips/s1087/HamamatsuS1087ParP.nc">
        <short>&#10; HamamatsuS1087ParP is a driver for a photosynthetically-active&#10; radiation sensor available on the telosb platform.</short>
        <long>&#10; HamamatsuS1087ParP is a driver for a photosynthetically-active&#10; radiation sensor available on the telosb platform. &#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Msp430TimerP" loc="39:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x7ff8a53b7d08" loc="40:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x7ff8a53b40c8" loc="41:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x7ff8a53b4450" loc="42:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x7ff8a53b47a8" loc="43:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x7ff8a53b4b00" loc="44:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x7ff8a53b4e50" loc="45:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x7ff8a53b31e0" loc="46:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x7ff8a53b3548" loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x7ff8a53b38f8" loc="48:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff8a592c1d0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="39:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="33:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x7ff8a5379940" loc="40:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x7ff8a5379cf0" loc="41:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="39:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="2:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x7ff8a50e2998" loc="40:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x7ff8a50e2d20" loc="41:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x7ff8a50e1108" loc="42:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x7ff8a50e1490" loc="43:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x7ff8a50e17e0" loc="44:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="40:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="32:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="41:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Alarm32khz32C.nc" abstract="">
      <documentation loc="33:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="43:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7ff8a4d7c7d8" loc="43:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7ff8a4d7c7d8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7ff8a4d3a370" loc="42:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7ff8a4d3a370"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/home/paul/wsnpr/tinyos-main/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/paul/wsnpr/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7ff8a4d42cf8" loc="55:/home/paul/wsnpr/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7ff8a4d42cf8"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7ff8a4d274a0" loc="56:/home/paul/wsnpr/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7ff8a4d274a0"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7ff8a4d27868" loc="57:/home/paul/wsnpr/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7ff8a4d27868"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7ff8a4d25020" loc="58:/home/paul/wsnpr/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7ff8a4d25020"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7ff8a4d253c8" loc="59:/home/paul/wsnpr/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7ff8a4d25b58" loc="60:/home/paul/wsnpr/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7ff8a4d25b58"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:/home/paul/wsnpr/tinyos-main/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/paul/wsnpr/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7ff8a4d4ab00" loc="52:/home/paul/wsnpr/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7ff8a4d4ab00"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7ff8a4d052b0" loc="53:/home/paul/wsnpr/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7ff8a4d052b0"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7ff8a4d05678" loc="54:/home/paul/wsnpr/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7ff8a4d05678"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7ff8a4d05df0" loc="55:/home/paul/wsnpr/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7ff8a4d05df0"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7ff8a4d041d8" loc="56:/home/paul/wsnpr/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="GpioCaptureC" loc="38:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="33:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430InterruptC" loc="43:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430InterruptC.nc" abstract="" safe="">
      <documentation loc="33:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:/home/paul/wsnpr/tinyos-main/tos/system/StateC.nc" abstract="">
      <documentation loc="32:/home/paul/wsnpr/tinyos-main/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="40:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Spi0C" loc="79:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDmaP" loc="73:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc" abstract="">
      <documentation loc="66:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart0C" loc="39:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc" abstract="">
      <documentation loc="32:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="89:/home/paul/wsnpr/tinyos-main/tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:/home/paul/wsnpr/tinyos-main/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7ff8a48ac998" loc="89:/home/paul/wsnpr/tinyos-main/tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/home/paul/wsnpr/tinyos-main/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7ff8a489e510" loc="42:/home/paul/wsnpr/tinyos-main/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:/home/paul/wsnpr/tinyos-main/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/home/paul/wsnpr/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7ff8a4885a90" loc="52:/home/paul/wsnpr/tinyos-main/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="BusyWaitCounterC" loc="52:/home/paul/wsnpr/tinyos-main/tos/lib/timer/BusyWaitCounterC.nc" abstract="">
      <documentation loc="36:/home/paul/wsnpr/tinyos-main/tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7ff8a465ac48" loc="52:/home/paul/wsnpr/tinyos-main/tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7ff8a465ac48"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7ff8a4656398" loc="52:/home/paul/wsnpr/tinyos-main/tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7ff8a4656398"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/home/paul/wsnpr/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/home/paul/wsnpr/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7ff8a4444110" loc="46:/home/paul/wsnpr/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7ff8a4444110"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmMilli32C" loc="41:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/home/paul/wsnpr/tinyos-main/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/home/paul/wsnpr/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7ff8a43fc068" loc="46:/home/paul/wsnpr/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7ff8a43fc068"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/home/paul/wsnpr/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/home/paul/wsnpr/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7ff8a43cb4c0" loc="46:/home/paul/wsnpr/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7ff8a43cb4c0"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7ff8a43cb7d0" loc="46:/home/paul/wsnpr/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/home/paul/wsnpr/tinyos-main/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/home/paul/wsnpr/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:/home/paul/wsnpr/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:/home/paul/wsnpr/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Uart1C" loc="42:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc" abstract="">
      <documentation loc="31:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UartP" loc="41:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc" abstract="">
      <documentation loc="32:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @version $Revision: 1.7 $ $Date: 2008-06-04 05:31:15 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart1C" loc="40:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc" abstract="">
      <documentation loc="32:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the MSP430.</short>
        <long>&#10; Provides an interface for USART1 on the MSP430.&#10;&#10; @author Vlado Handziski &#60;handisk@tkn.tu-berlin.de>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:/home/paul/wsnpr/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/home/paul/wsnpr/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:/home/paul/wsnpr/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:/home/paul/wsnpr/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HamamatsuS1087ParC" loc="40:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/chips/s1087/HamamatsuS1087ParC.nc" abstract="">
      <documentation loc="32:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/chips/s1087/HamamatsuS1087ParC.nc">
        <short>&#10; HamamatsuS1087ParC is a driver for a photosynthetically-active&#10; radiation sensor available on the telosb platform.</short>
        <long>&#10; HamamatsuS1087ParC is a driver for a photosynthetically-active&#10; radiation sensor available on the telosb platform. &#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AdcReadClientC" loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/AdcReadClientC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Adc12ClientAutoRVGC" loc="43:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc" abstract="">
      <documentation loc="33:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
        <short> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.</short>
        <long> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.&#10; Reference voltage is enabled automatically as required by the configuration.&#10; &#10; @author Jan Hauer &#10;&#10; @see  Please refer to the README.txt and TEP 101 for more information about&#10; this component and its intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleRoundRobinArbiterC" loc="83:/home/paul/wsnpr/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc" abstract="">
      <documentation loc="62:/home/paul/wsnpr/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7ff8a3c371c8" loc="83:/home/paul/wsnpr/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc">
          <component-ref qname="SimpleRoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="42:/home/paul/wsnpr/tinyos-main/tos/system/RoundRobinResourceQueueC.nc" abstract="" safe="">
      <documentation loc="33:/home/paul/wsnpr/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x7ff8a3c32b08" loc="42:/home/paul/wsnpr/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/home/paul/wsnpr/tinyos-main/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/home/paul/wsnpr/tinyos-main/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Adc12ConfAlertC" loc="42:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc" abstract="">
      <documentation loc="33:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
        <short> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.</short>
        <long> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.&#10; (nesC optimizes all of its code away).&#10;&#10; @author: Jan Hauer&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AdcReadStreamClientC" loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/AdcReadStreamClientC.nc" abstract="">
      <documentation loc="36:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
        <short> &#10; This component virtualizes the HIL of ADC12 on MSP430.</short>
        <long> &#10; This component virtualizes the HIL of ADC12 on MSP430. A client must wire&#10; &#60;code>AdcConfigure&#60;/code> to a component that returns the client's adc&#10; configuration data.&#10;&#10; @author Jan Hauer &#10; @see  Please refer to the README.txt and TEP 101 for more information about &#10; this component and its intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ArbitratedReadStreamC" loc="23:/home/paul/wsnpr/tinyos-main/tos/system/ArbitratedReadStreamC.nc" abstract="">
      <documentation loc="10:/home/paul/wsnpr/tinyos-main/tos/system/ArbitratedReadStreamC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using&#10; ArbitratedReadStreamC in a safe way.&#10;&#10; @param width_t Width of the underlying ReadStream interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <constant name="nClients" ref="0x7ff8a3a70c18" loc="23:/home/paul/wsnpr/tinyos-main/tos/system/ArbitratedReadStreamC.nc">
          <component-ref qname="ArbitratedReadStreamC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
          </type-int>
        </constant>
        <typedef name="val_t" ref="0x7ff8a3a6d020" loc="23:/home/paul/wsnpr/tinyos-main/tos/system/ArbitratedReadStreamC.nc">
          <component-ref qname="ArbitratedReadStreamC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7ff8a3a6d020"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7ff8a545fa40" loc="58:/home/paul/wsnpr/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7ff8a545fa40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff8a545fd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7ff8a5461650" loc="57:/home/paul/wsnpr/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7ff8a5461650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7ff8a54619a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ff8a5462980" loc="42:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ff8a5462980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff8a5462cd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7ff8a545a878" loc="6:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x7ff8a545a878"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff8a545abc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ff8a545dae0" loc="4:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ff8a545dae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff8a545de30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x7ff8a545a1d8" loc="5:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7ff8a545a1d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff8a545a528"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x7ff8a5459020" loc="7:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x7ff8a5459020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff8a5459370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ff8a545c888" loc="2:/home/paul/wsnpr/tinyos-main/tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ff8a545c888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff8a545cbd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x7ff8a543d0e8" loc="39:/home/paul/wsnpr/tinyos-main/tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7ff8a543d0e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff8a543d438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7ff8a54322b8" loc="40:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7ff8a54322b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7ff8a54381a8"/>
        <function-ref name="initTimerB" scoped="" ref="0x7ff8a5432790"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7ff8a5432918"/>
        <function-ref name="initTimerA" scoped="" ref="0x7ff8a5432aa0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7ff8a5432608"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7ff8a5432c28"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7ff8a5432db0"/>
        <function-ref name="initClocks" scoped="" ref="0x7ff8a5438020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ff8a5439020" loc="39:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ff8a5439020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff8a5439370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7ff8a54223c0" loc="46:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7ff8a54223c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7ff8a5421330"/>
        <function-ref name="initTimerB" scoped="" ref="0x7ff8a5422898"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7ff8a5422a20"/>
        <function-ref name="initTimerA" scoped="" ref="0x7ff8a5422ba8"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7ff8a5422710"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7ff8a5422d30"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7ff8a5421020"/>
        <function-ref name="initClocks" scoped="" ref="0x7ff8a54211a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7ff8a5421660" loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7ff8a5421660"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7ff8a54219b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ff8a5424d10" loc="45:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ff8a5424d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff8a54220a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x7ff8a53e0060" loc="42:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x7ff8a53e0060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ff8a53e03b0"/>
        <function-ref name="getControl" scoped="" ref="0x7ff8a53e0538"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff8a53e06c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ff8a53e0848"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ff8a53e09d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff8a53e0b58"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ff8a53e0ce0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ff8a53e0e68"/>
        <function-ref name="setControl" scoped="" ref="0x7ff8a53df020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x7ff8a53cf060" loc="51:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x7ff8a53cf060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ff8a53cf3b0"/>
        <function-ref name="getControl" scoped="" ref="0x7ff8a53cf538"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff8a53cf6c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ff8a53cf848"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ff8a53cf9d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff8a53cfb58"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ff8a53cfce0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ff8a53cfe68"/>
        <function-ref name="setControl" scoped="" ref="0x7ff8a53ce020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x7ff8a53d8868" loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x7ff8a53d8868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff8a53d8bb8"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7ff8a53d8d40"/>
        <function-ref name="captured" scoped="" ref="0x7ff8a53d7020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff8a53d71a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff8a53d7330"/>
        <function-ref name="setEdge" scoped="" ref="0x7ff8a53d74b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x7ff8a53bc3d0" loc="68:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x7ff8a53bc3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff8a53bc720"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7ff8a53bc8a8"/>
        <function-ref name="captured" scoped="" ref="0x7ff8a53bca30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff8a53bcbb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff8a53bcd40"/>
        <function-ref name="setEdge" scoped="" ref="0x7ff8a53bb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x7ff8a53de0c0" loc="44:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x7ff8a53de0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff8a53de410"/>
        <function-ref name="setEvent" scoped="" ref="0x7ff8a53de598"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ff8a53de720"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ff8a53de8a8"/>
        <function-ref name="fired" scoped="" ref="0x7ff8a53dea30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x7ff8a53c4868" loc="61:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x7ff8a53c4868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff8a53c4bb8"/>
        <function-ref name="setEvent" scoped="" ref="0x7ff8a53c4d40"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ff8a53c3020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ff8a53c31a8"/>
        <function-ref name="fired" scoped="" ref="0x7ff8a53c3330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x7ff8a53b93d0" loc="71:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x7ff8a53b93d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff8a53b9720"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7ff8a53b98a8"/>
        <function-ref name="captured" scoped="" ref="0x7ff8a53b9a30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff8a53b9bb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff8a53b9d40"/>
        <function-ref name="setEdge" scoped="" ref="0x7ff8a53b8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x7ff8a53ca120" loc="55:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x7ff8a53ca120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ff8a53ca470"/>
        <function-ref name="getControl" scoped="" ref="0x7ff8a53ca5f8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff8a53ca780"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ff8a53ca908"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ff8a53caa90"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff8a53cac18"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ff8a53cada0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ff8a53c9020"/>
        <function-ref name="setControl" scoped="" ref="0x7ff8a53c91a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x7ff8a53e1818" loc="40:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x7ff8a53e1818"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ff8a53e1b68"/>
        <function-ref name="getControl" scoped="" ref="0x7ff8a53e1cf0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff8a53e1e78"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ff8a53e8030"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ff8a53e81b8"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff8a53e8340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ff8a53e84c8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ff8a53e8650"/>
        <function-ref name="setControl" scoped="" ref="0x7ff8a53e87d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x7ff8a53be3d0" loc="66:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x7ff8a53be3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff8a53be720"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7ff8a53be8a8"/>
        <function-ref name="captured" scoped="" ref="0x7ff8a53bea30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff8a53bebb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff8a53bed40"/>
        <function-ref name="setEdge" scoped="" ref="0x7ff8a53bd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x7ff8a53c6d40" loc="59:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x7ff8a53c6d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff8a53c50d8"/>
        <function-ref name="setEvent" scoped="" ref="0x7ff8a53c5260"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ff8a53c53e8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ff8a53c5570"/>
        <function-ref name="fired" scoped="" ref="0x7ff8a53c56f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x7ff8a53ce400" loc="52:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x7ff8a53ce400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ff8a53ce850"/>
        <function-ref name="getControl" scoped="" ref="0x7ff8a53ce9d8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff8a53ceb60"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ff8a53cece8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ff8a53cee70"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff8a53cd020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ff8a53cd1a8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ff8a53cd330"/>
        <function-ref name="setControl" scoped="" ref="0x7ff8a53cd4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x7ff8a53d7868" loc="48:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x7ff8a53d7868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff8a53d7bb8"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7ff8a53d7d40"/>
        <function-ref name="captured" scoped="" ref="0x7ff8a53d1020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff8a53d11a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff8a53d1330"/>
        <function-ref name="setEdge" scoped="" ref="0x7ff8a53d14b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x7ff8a53bb3d0" loc="69:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x7ff8a53bb3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff8a53bb720"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7ff8a53bb8a8"/>
        <function-ref name="captured" scoped="" ref="0x7ff8a53bba30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff8a53bbbb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff8a53bbd40"/>
        <function-ref name="setEdge" scoped="" ref="0x7ff8a53ba020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x7ff8a53cd898" loc="53:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x7ff8a53cd898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ff8a53cdbe8"/>
        <function-ref name="getControl" scoped="" ref="0x7ff8a53cdd70"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff8a53cc020"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ff8a53cc1a8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ff8a53cc330"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff8a53cc4b8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ff8a53cc640"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ff8a53cc7c8"/>
        <function-ref name="setControl" scoped="" ref="0x7ff8a53cc950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x7ff8a53dede0" loc="45:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x7ff8a53dede0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff8a53dd170"/>
        <function-ref name="setEvent" scoped="" ref="0x7ff8a53dd2f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ff8a53dd480"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ff8a53dd608"/>
        <function-ref name="fired" scoped="" ref="0x7ff8a53dd790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x7ff8a53e9378" loc="39:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7ff8a53e9378"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff8a53e96c8"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ff8a53e9850"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff8a53e99d8"/>
        <function-ref name="get" scoped="" ref="0x7ff8a53e9b60"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff8a53e9ce8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff8a53e9e70"/>
        <function-ref name="getMode" scoped="" ref="0x7ff8a53f1020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff8a53f11a8"/>
        <function-ref name="overflow" scoped="" ref="0x7ff8a53f1330"/>
        <function-ref name="setMode" scoped="" ref="0x7ff8a53f14b8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7ff8a53f1640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x7ff8a53c36e0" loc="62:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x7ff8a53c36e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff8a53c3a30"/>
        <function-ref name="setEvent" scoped="" ref="0x7ff8a53c3bb8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ff8a53c3d40"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ff8a53c2020"/>
        <function-ref name="fired" scoped="" ref="0x7ff8a53c21a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x7ff8a53e8bb8" loc="41:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x7ff8a53e8bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ff8a53e7020"/>
        <function-ref name="getControl" scoped="" ref="0x7ff8a53e71a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff8a53e7330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ff8a53e74b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ff8a53e7640"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff8a53e77c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ff8a53e7950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ff8a53e7ad8"/>
        <function-ref name="setControl" scoped="" ref="0x7ff8a53e7c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x7ff8a53c9588" loc="56:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x7ff8a53c9588"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ff8a53c98d8"/>
        <function-ref name="getControl" scoped="" ref="0x7ff8a53c9a60"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff8a53c9be8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ff8a53c9d70"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ff8a53c8020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff8a53c81a8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ff8a53c8330"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ff8a53c84b8"/>
        <function-ref name="setControl" scoped="" ref="0x7ff8a53c8640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x7ff8a53d2960" loc="46:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x7ff8a53d2960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff8a53d2cb0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7ff8a53d2e38"/>
        <function-ref name="captured" scoped="" ref="0x7ff8a53d8020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff8a53d81a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff8a53d8330"/>
        <function-ref name="setEdge" scoped="" ref="0x7ff8a53d84b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x7ff8a53bd3d0" loc="67:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x7ff8a53bd3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff8a53bd720"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7ff8a53bd8a8"/>
        <function-ref name="captured" scoped="" ref="0x7ff8a53bda30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff8a53bdbb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff8a53bdd40"/>
        <function-ref name="setEdge" scoped="" ref="0x7ff8a53bc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x7ff8a53d9378" loc="43:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x7ff8a53d9378"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff8a53d96c8"/>
        <function-ref name="setEvent" scoped="" ref="0x7ff8a53d9850"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ff8a53d99d8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ff8a53d9b60"/>
        <function-ref name="fired" scoped="" ref="0x7ff8a53d9ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x7ff8a53c5aa8" loc="60:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x7ff8a53c5aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff8a53c5df8"/>
        <function-ref name="setEvent" scoped="" ref="0x7ff8a53c4020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ff8a53c41a8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ff8a53c4330"/>
        <function-ref name="fired" scoped="" ref="0x7ff8a53c44b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x7ff8a53ba3d0" loc="70:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x7ff8a53ba3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff8a53ba720"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7ff8a53ba8a8"/>
        <function-ref name="captured" scoped="" ref="0x7ff8a53baa30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff8a53babb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff8a53bad40"/>
        <function-ref name="setEdge" scoped="" ref="0x7ff8a53b9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x7ff8a53ccd30" loc="54:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x7ff8a53ccd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ff8a53cb0d8"/>
        <function-ref name="getControl" scoped="" ref="0x7ff8a53cb260"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff8a53cb3e8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ff8a53cb570"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ff8a53cb6f8"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff8a53cb880"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ff8a53cba08"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ff8a53cbb90"/>
        <function-ref name="setControl" scoped="" ref="0x7ff8a53cbd18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x7ff8a53d1830" loc="50:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x7ff8a53d1830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff8a53d1b80"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ff8a53d1d08"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff8a53d0020"/>
        <function-ref name="get" scoped="" ref="0x7ff8a53d01a8"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff8a53d0330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff8a53d04b8"/>
        <function-ref name="getMode" scoped="" ref="0x7ff8a53d0640"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff8a53d07c8"/>
        <function-ref name="overflow" scoped="" ref="0x7ff8a53d0950"/>
        <function-ref name="setMode" scoped="" ref="0x7ff8a53d0ad8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7ff8a53d0c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x7ff8a53c2558" loc="63:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x7ff8a53c2558"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff8a53c28a8"/>
        <function-ref name="setEvent" scoped="" ref="0x7ff8a53c2a30"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ff8a53c2bb8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ff8a53c2d40"/>
        <function-ref name="fired" scoped="" ref="0x7ff8a53c1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x7ff8a53c03d0" loc="65:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x7ff8a53c03d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff8a53c0720"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7ff8a53c08a8"/>
        <function-ref name="captured" scoped="" ref="0x7ff8a53c0a30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff8a53c0bb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff8a53c0d40"/>
        <function-ref name="setEdge" scoped="" ref="0x7ff8a53be020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x7ff8a53c13d0" loc="64:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x7ff8a53c13d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff8a53c1920"/>
        <function-ref name="setEvent" scoped="" ref="0x7ff8a53c1aa8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ff8a53c1c30"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ff8a53c1db8"/>
        <function-ref name="fired" scoped="" ref="0x7ff8a53c0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x7ff8a53c6020" loc="58:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x7ff8a53c6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff8a53c6370"/>
        <function-ref name="setEvent" scoped="" ref="0x7ff8a53c64f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ff8a53c6680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ff8a53c6808"/>
        <function-ref name="fired" scoped="" ref="0x7ff8a53c6990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x7ff8a53c8a20" loc="57:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x7ff8a53c8a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ff8a53c8d70"/>
        <function-ref name="getControl" scoped="" ref="0x7ff8a53c7020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff8a53c71a8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ff8a53c7330"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ff8a53c74b8"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff8a53c7640"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ff8a53c77c8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ff8a53c7950"/>
        <function-ref name="setControl" scoped="" ref="0x7ff8a53c7ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7ff8a5383d18" loc="53:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7ff8a5383d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff8a53820a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7ff8a5383700" loc="52:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7ff8a5383700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff8a5383a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7ff8a5382368" loc="54:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7ff8a5382368"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff8a53826b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7ff8a53830c8" loc="51:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7ff8a53830c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff8a5383438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7ff8a5385960" loc="50:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7ff8a5385960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff8a5385cb0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ff8a5385e38"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff8a5384020"/>
        <function-ref name="get" scoped="" ref="0x7ff8a53841a8"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff8a5384330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff8a53844b8"/>
        <function-ref name="getMode" scoped="" ref="0x7ff8a5384640"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff8a53847c8"/>
        <function-ref name="overflow" scoped="" ref="0x7ff8a5384950"/>
        <function-ref name="setMode" scoped="" ref="0x7ff8a5384ad8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7ff8a5384c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7ff8a537c638" loc="53:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7ff8a537c638"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff8a537c988"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7ff8a537c020" loc="52:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7ff8a537c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff8a537c370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7ff8a537cc50" loc="54:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7ff8a537cc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff8a537a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7ff8a537d8a0" loc="51:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7ff8a537d8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff8a537dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7ff8a537e1e8" loc="50:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7ff8a537e1e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff8a537e538"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ff8a537e6c0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff8a537e848"/>
        <function-ref name="get" scoped="" ref="0x7ff8a537e9d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff8a537eb58"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff8a537ece0"/>
        <function-ref name="getMode" scoped="" ref="0x7ff8a537ee68"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff8a537d020"/>
        <function-ref name="overflow" scoped="" ref="0x7ff8a537d1a8"/>
        <function-ref name="setMode" scoped="" ref="0x7ff8a537d330"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7ff8a537d4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7ff8a5333c58" loc="46:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7ff8a5333c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff8a5332020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7ff8a53321a8"/>
        <function-ref name="captured" scoped="" ref="0x7ff8a5332330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff8a53324b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff8a5332640"/>
        <function-ref name="setEdge" scoped="" ref="0x7ff8a53327c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7ff8a5377c80" loc="44:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7ff8a5377c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ff8a5334020"/>
        <function-ref name="getControl" scoped="" ref="0x7ff8a53341a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff8a5334330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ff8a53344b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ff8a5334640"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff8a53347c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ff8a5334950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ff8a5334ad8"/>
        <function-ref name="setControl" scoped="" ref="0x7ff8a5334c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7ff8a532f100" loc="48:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7ff8a532f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff8a532f450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7ff8a5333020" loc="45:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7ff8a5333020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff8a5333370"/>
        <function-ref name="setEvent" scoped="" ref="0x7ff8a53334f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ff8a5333680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ff8a5333808"/>
        <function-ref name="fired" scoped="" ref="0x7ff8a5333990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7ff8a5332a90" loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7ff8a5332a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff8a5332de0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ff8a5330020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff8a53301a8"/>
        <function-ref name="get" scoped="" ref="0x7ff8a5330330"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff8a53304b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff8a5330640"/>
        <function-ref name="getMode" scoped="" ref="0x7ff8a53307c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff8a5330950"/>
        <function-ref name="overflow" scoped="" ref="0x7ff8a5330ad8"/>
        <function-ref name="setMode" scoped="" ref="0x7ff8a5330c60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7ff8a5330de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7ff8a532bc58" loc="46:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7ff8a532bc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff8a532a020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7ff8a532a1a8"/>
        <function-ref name="captured" scoped="" ref="0x7ff8a532a330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff8a532a4b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff8a532a640"/>
        <function-ref name="setEdge" scoped="" ref="0x7ff8a532a7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7ff8a532dc80" loc="44:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7ff8a532dc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ff8a532c020"/>
        <function-ref name="getControl" scoped="" ref="0x7ff8a532c1a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff8a532c330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ff8a532c4b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ff8a532c640"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff8a532c7c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ff8a532c950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ff8a532cad8"/>
        <function-ref name="setControl" scoped="" ref="0x7ff8a532cc60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7ff8a5328100" loc="48:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7ff8a5328100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff8a5328450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7ff8a532b020" loc="45:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7ff8a532b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff8a532b370"/>
        <function-ref name="setEvent" scoped="" ref="0x7ff8a532b4f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ff8a532b680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ff8a532b808"/>
        <function-ref name="fired" scoped="" ref="0x7ff8a532b990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7ff8a532aa90" loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7ff8a532aa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff8a532ade0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ff8a5329020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff8a53291a8"/>
        <function-ref name="get" scoped="" ref="0x7ff8a5329330"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff8a53294b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff8a5329640"/>
        <function-ref name="getMode" scoped="" ref="0x7ff8a53297c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff8a5329950"/>
        <function-ref name="overflow" scoped="" ref="0x7ff8a5329ad8"/>
        <function-ref name="setMode" scoped="" ref="0x7ff8a5329c60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7ff8a5329de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7ff8a5324c58" loc="46:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7ff8a5324c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff8a5323020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7ff8a53231a8"/>
        <function-ref name="captured" scoped="" ref="0x7ff8a5323330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff8a53234b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff8a5323640"/>
        <function-ref name="setEdge" scoped="" ref="0x7ff8a53237c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7ff8a5326c80" loc="44:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7ff8a5326c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ff8a5325020"/>
        <function-ref name="getControl" scoped="" ref="0x7ff8a53251a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff8a5325330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ff8a53254b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ff8a5325640"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff8a53257c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ff8a5325950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ff8a5325ad8"/>
        <function-ref name="setControl" scoped="" ref="0x7ff8a5325c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7ff8a5320100" loc="48:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7ff8a5320100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff8a5320450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7ff8a5324020" loc="45:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7ff8a5324020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff8a5324370"/>
        <function-ref name="setEvent" scoped="" ref="0x7ff8a53244f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ff8a5324680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ff8a5324808"/>
        <function-ref name="fired" scoped="" ref="0x7ff8a5324990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7ff8a5323a90" loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7ff8a5323a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff8a5323de0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ff8a5321020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff8a53211a8"/>
        <function-ref name="get" scoped="" ref="0x7ff8a5321330"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff8a53214b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff8a5321640"/>
        <function-ref name="getMode" scoped="" ref="0x7ff8a53217c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff8a5321950"/>
        <function-ref name="overflow" scoped="" ref="0x7ff8a5321ad8"/>
        <function-ref name="setMode" scoped="" ref="0x7ff8a5321c60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7ff8a5321de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7ff8a531cc58" loc="46:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7ff8a531cc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff8a531b020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7ff8a531b1a8"/>
        <function-ref name="captured" scoped="" ref="0x7ff8a531b330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff8a531b4b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff8a531b640"/>
        <function-ref name="setEdge" scoped="" ref="0x7ff8a531b7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7ff8a531ec80" loc="44:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7ff8a531ec80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ff8a531d020"/>
        <function-ref name="getControl" scoped="" ref="0x7ff8a531d1a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff8a531d330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ff8a531d4b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ff8a531d640"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff8a531d7c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ff8a531d950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ff8a531dad8"/>
        <function-ref name="setControl" scoped="" ref="0x7ff8a531dc60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7ff8a5319100" loc="48:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7ff8a5319100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff8a5319450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7ff8a531c020" loc="45:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7ff8a531c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff8a531c370"/>
        <function-ref name="setEvent" scoped="" ref="0x7ff8a531c4f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ff8a531c680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ff8a531c808"/>
        <function-ref name="fired" scoped="" ref="0x7ff8a531c990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7ff8a531ba90" loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7ff8a531ba90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff8a531bde0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ff8a531a020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff8a531a1a8"/>
        <function-ref name="get" scoped="" ref="0x7ff8a531a330"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff8a531a4b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff8a531a640"/>
        <function-ref name="getMode" scoped="" ref="0x7ff8a531a7c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff8a531a950"/>
        <function-ref name="overflow" scoped="" ref="0x7ff8a531aad8"/>
        <function-ref name="setMode" scoped="" ref="0x7ff8a531ac60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7ff8a531ade8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7ff8a5315c58" loc="46:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7ff8a5315c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff8a5314020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7ff8a53141a8"/>
        <function-ref name="captured" scoped="" ref="0x7ff8a5314330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff8a53144b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff8a5314640"/>
        <function-ref name="setEdge" scoped="" ref="0x7ff8a53147c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7ff8a5317c80" loc="44:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7ff8a5317c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ff8a5316020"/>
        <function-ref name="getControl" scoped="" ref="0x7ff8a53161a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff8a5316330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ff8a53164b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ff8a5316640"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff8a53167c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ff8a5316950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ff8a5316ad8"/>
        <function-ref name="setControl" scoped="" ref="0x7ff8a5316c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7ff8a5312100" loc="48:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7ff8a5312100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff8a5312450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7ff8a5315020" loc="45:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7ff8a5315020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff8a5315370"/>
        <function-ref name="setEvent" scoped="" ref="0x7ff8a53154f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ff8a5315680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ff8a5315808"/>
        <function-ref name="fired" scoped="" ref="0x7ff8a5315990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7ff8a5314a90" loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7ff8a5314a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff8a5314de0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ff8a5313020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff8a53131a8"/>
        <function-ref name="get" scoped="" ref="0x7ff8a5313330"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff8a53134b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff8a5313640"/>
        <function-ref name="getMode" scoped="" ref="0x7ff8a53137c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff8a5313950"/>
        <function-ref name="overflow" scoped="" ref="0x7ff8a5313ad8"/>
        <function-ref name="setMode" scoped="" ref="0x7ff8a5313c60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7ff8a5313de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7ff8a530dc58" loc="46:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7ff8a530dc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff8a530c020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7ff8a530c1a8"/>
        <function-ref name="captured" scoped="" ref="0x7ff8a530c330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff8a530c4b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff8a530c640"/>
        <function-ref name="setEdge" scoped="" ref="0x7ff8a530c7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7ff8a530fc80" loc="44:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7ff8a530fc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ff8a530e020"/>
        <function-ref name="getControl" scoped="" ref="0x7ff8a530e1a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff8a530e330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ff8a530e4b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ff8a530e640"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff8a530e7c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ff8a530e950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ff8a530ead8"/>
        <function-ref name="setControl" scoped="" ref="0x7ff8a530ec60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7ff8a530a100" loc="48:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7ff8a530a100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff8a530a450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7ff8a530d020" loc="45:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7ff8a530d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff8a530d370"/>
        <function-ref name="setEvent" scoped="" ref="0x7ff8a530d4f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ff8a530d680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ff8a530d808"/>
        <function-ref name="fired" scoped="" ref="0x7ff8a530d990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7ff8a530ca90" loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7ff8a530ca90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff8a530cde0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ff8a530b020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff8a530b1a8"/>
        <function-ref name="get" scoped="" ref="0x7ff8a530b330"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff8a530b4b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff8a530b640"/>
        <function-ref name="getMode" scoped="" ref="0x7ff8a530b7c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff8a530b950"/>
        <function-ref name="overflow" scoped="" ref="0x7ff8a530bad8"/>
        <function-ref name="setMode" scoped="" ref="0x7ff8a530bc60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7ff8a530bde8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7ff8a5306c58" loc="46:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7ff8a5306c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff8a5305020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7ff8a53051a8"/>
        <function-ref name="captured" scoped="" ref="0x7ff8a5305330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff8a53054b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff8a5305640"/>
        <function-ref name="setEdge" scoped="" ref="0x7ff8a53057c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7ff8a5308c80" loc="44:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7ff8a5308c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ff8a5307020"/>
        <function-ref name="getControl" scoped="" ref="0x7ff8a53071a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff8a5307330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ff8a53074b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ff8a5307640"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff8a53077c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ff8a5307950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ff8a5307ad8"/>
        <function-ref name="setControl" scoped="" ref="0x7ff8a5307c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7ff8a5303100" loc="48:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7ff8a5303100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff8a5303450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7ff8a5306020" loc="45:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7ff8a5306020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff8a5306370"/>
        <function-ref name="setEvent" scoped="" ref="0x7ff8a53064f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ff8a5306680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ff8a5306808"/>
        <function-ref name="fired" scoped="" ref="0x7ff8a5306990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7ff8a5305a90" loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7ff8a5305a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff8a5305de0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ff8a5304020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff8a53041a8"/>
        <function-ref name="get" scoped="" ref="0x7ff8a5304330"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff8a53044b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff8a5304640"/>
        <function-ref name="getMode" scoped="" ref="0x7ff8a53047c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff8a5304950"/>
        <function-ref name="overflow" scoped="" ref="0x7ff8a5304ad8"/>
        <function-ref name="setMode" scoped="" ref="0x7ff8a5304c60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7ff8a5304de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7ff8a52fec58" loc="46:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7ff8a52fec58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff8a52fd020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7ff8a52fd1a8"/>
        <function-ref name="captured" scoped="" ref="0x7ff8a52fd330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff8a52fd4b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff8a52fd640"/>
        <function-ref name="setEdge" scoped="" ref="0x7ff8a52fd7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7ff8a5300c80" loc="44:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7ff8a5300c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ff8a52ff020"/>
        <function-ref name="getControl" scoped="" ref="0x7ff8a52ff1a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff8a52ff330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ff8a52ff4b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ff8a52ff640"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff8a52ff7c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ff8a52ff950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ff8a52ffad8"/>
        <function-ref name="setControl" scoped="" ref="0x7ff8a52ffc60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7ff8a52fb100" loc="48:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7ff8a52fb100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff8a52fb450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7ff8a52fe020" loc="45:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7ff8a52fe020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff8a52fe370"/>
        <function-ref name="setEvent" scoped="" ref="0x7ff8a52fe4f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ff8a52fe680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ff8a52fe808"/>
        <function-ref name="fired" scoped="" ref="0x7ff8a52fe990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7ff8a52fda90" loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7ff8a52fda90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff8a52fdde0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ff8a52fc020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff8a52fc1a8"/>
        <function-ref name="get" scoped="" ref="0x7ff8a52fc330"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff8a52fc4b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff8a52fc640"/>
        <function-ref name="getMode" scoped="" ref="0x7ff8a52fc7c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff8a52fc950"/>
        <function-ref name="overflow" scoped="" ref="0x7ff8a52fcad8"/>
        <function-ref name="setMode" scoped="" ref="0x7ff8a52fcc60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7ff8a52fcde8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7ff8a52f7c58" loc="46:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7ff8a52f7c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff8a52f6020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7ff8a52f61a8"/>
        <function-ref name="captured" scoped="" ref="0x7ff8a52f6330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff8a52f64b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff8a52f6640"/>
        <function-ref name="setEdge" scoped="" ref="0x7ff8a52f67c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7ff8a52f9c80" loc="44:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7ff8a52f9c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ff8a52f8020"/>
        <function-ref name="getControl" scoped="" ref="0x7ff8a52f81a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff8a52f8330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ff8a52f84b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ff8a52f8640"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff8a52f87c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ff8a52f8950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ff8a52f8ad8"/>
        <function-ref name="setControl" scoped="" ref="0x7ff8a52f8c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7ff8a52f4100" loc="48:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7ff8a52f4100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff8a52f4450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7ff8a52f7020" loc="45:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7ff8a52f7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff8a52f7370"/>
        <function-ref name="setEvent" scoped="" ref="0x7ff8a52f74f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ff8a52f7680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ff8a52f7808"/>
        <function-ref name="fired" scoped="" ref="0x7ff8a52f7990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7ff8a52f6a90" loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7ff8a52f6a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff8a52f6de0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ff8a52f5020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff8a52f51a8"/>
        <function-ref name="get" scoped="" ref="0x7ff8a52f5330"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff8a52f54b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff8a52f5640"/>
        <function-ref name="getMode" scoped="" ref="0x7ff8a52f57c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff8a52f5950"/>
        <function-ref name="overflow" scoped="" ref="0x7ff8a52f5ad8"/>
        <function-ref name="setMode" scoped="" ref="0x7ff8a52f5c60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7ff8a52f5de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7ff8a52efc58" loc="46:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7ff8a52efc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff8a52ee020"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7ff8a52ee1a8"/>
        <function-ref name="captured" scoped="" ref="0x7ff8a52ee330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff8a52ee4b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff8a52ee640"/>
        <function-ref name="setEdge" scoped="" ref="0x7ff8a52ee7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7ff8a52f1c80" loc="44:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7ff8a52f1c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ff8a52f0020"/>
        <function-ref name="getControl" scoped="" ref="0x7ff8a52f01a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff8a52f0330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ff8a52f04b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ff8a52f0640"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff8a52f07c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ff8a52f0950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ff8a52f0ad8"/>
        <function-ref name="setControl" scoped="" ref="0x7ff8a52f0c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7ff8a52ec100" loc="48:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7ff8a52ec100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff8a52ec450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7ff8a52ef020" loc="45:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7ff8a52ef020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff8a52ef370"/>
        <function-ref name="setEvent" scoped="" ref="0x7ff8a52ef4f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ff8a52ef680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ff8a52ef808"/>
        <function-ref name="fired" scoped="" ref="0x7ff8a52ef990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7ff8a52eea90" loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7ff8a52eea90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff8a52eede0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ff8a52ed020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff8a52ed1a8"/>
        <function-ref name="get" scoped="" ref="0x7ff8a52ed330"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff8a52ed4b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff8a52ed640"/>
        <function-ref name="getMode" scoped="" ref="0x7ff8a52ed7c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff8a52ed950"/>
        <function-ref name="overflow" scoped="" ref="0x7ff8a52edad8"/>
        <function-ref name="setMode" scoped="" ref="0x7ff8a52edc60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7ff8a52edde8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x7ff8a52e7b60" loc="7:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x7ff8a52e7b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff8a52e6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x7ff8a52e8520" loc="4:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x7ff8a52e8520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff8a52e8870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x7ff8a52e8c68" loc="5:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x7ff8a52e8c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff8a52e7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x7ff8a52e7418" loc="6:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x7ff8a52e7418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff8a52e7768"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7ff8a5560cc0" loc="55:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7ff8a5560cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7ff8a57cc0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7ff8a592ae10" loc="51:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7ff8a592ae10"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7ff8a58a61a8"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7ff8a58a6330"/>
        <function-ref name="sleep" scoped="" ref="0x7ff8a58a64b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7ff8a5630580" loc="52:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x7ff8a5630580"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7ff8a56308d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x7ff8a543caa8" loc="39:/home/paul/wsnpr/tinyos-main/tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7ff8a543caa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7ff8a52b3950"/>
        <function-ref name="initTimerB" scoped="" ref="0x7ff8a52b3020"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7ff8a52b31a8"/>
        <function-ref name="initTimerA" scoped="" ref="0x7ff8a52b3330"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7ff8a543cdf8"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7ff8a52b34b8"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7ff8a52b3640"/>
        <function-ref name="initClocks" scoped="" ref="0x7ff8a52b37c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7ff8a52a7418" loc="60:/home/paul/wsnpr/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7ff8a52a7418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff8a52a7768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7ff8a5460c40" loc="57:/home/paul/wsnpr/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7ff8a5460c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7ff8a52b4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7ff8a52b4ce0" loc="59:/home/paul/wsnpr/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x7ff8a52b4ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff8a52a70a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7ff8a52b4308" loc="58:/home/paul/wsnpr/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7ff8a52b4308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff8a52b4658"/>
        <function-ref name="taskLoop" scoped="" ref="0x7ff8a52b47e0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7ff8a52b4968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7ff8a595d1c8" loc="48:/home/paul/wsnpr/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7ff8a595d1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ff8a595d518"/>
        <function-ref name="runTask" scoped="" ref="0x7ff8a595d6a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7ff8a5928390" loc="47:/home/paul/wsnpr/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7ff8a5928390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff8a59286e0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7ff8a5928868"/>
        <function-ref name="runNextTask" scoped="" ref="0x7ff8a59289f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7ff8a54eb7f8" loc="56:/home/paul/wsnpr/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7ff8a54eb7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ff8a54ebb48"/>
        <function-ref name="runTask" scoped="" ref="0x7ff8a54ebcd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7ff8a54e4b48" loc="57:/home/paul/wsnpr/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7ff8a54e4b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7ff8a54e8020"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7ff8a54e81a8"/>
        <function-ref name="sleep" scoped="" ref="0x7ff8a54e8330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7ff8a54ec940" loc="55:/home/paul/wsnpr/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7ff8a54ec940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff8a54ecc90"/>
        <function-ref name="taskLoop" scoped="" ref="0x7ff8a54ece18"/>
        <function-ref name="runNextTask" scoped="" ref="0x7ff8a54eb020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7ff8a5464b28" loc="5:RssiBaseC.nc">
      <component-ref qname="RssiBaseC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7ff8a5464b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7ff8a5464e78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LaserTimer" ref="0x7ff8a528bdf8" loc="7:RssiBaseC.nc">
      <component-ref qname="RssiBaseC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LaserTimer" scoped="" ref="0x7ff8a528bdf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff8a5296828"/>
            <typename><typedef-ref name="TMilli" ref="0x7ff8a5296b80"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ff8a52880c0"/>
        <function-ref name="fired" scoped="" ref="0x7ff8a528a798"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7ff8a52894d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7ff8a5289088"/>
        <function-ref name="getdt" scoped="" ref="0x7ff8a5288960"/>
        <function-ref name="gett0" scoped="" ref="0x7ff8a5288510"/>
        <function-ref name="isRunning" scoped="" ref="0x7ff8a528abe8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7ff8a529b9e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7ff8a5289aa8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7ff8a529be80"/>
        <function-ref name="stop" scoped="" ref="0x7ff8a528a348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiMsgIntercept" ref="0x7ff8a52954e0" loc="6:RssiBaseC.nc">
      <component-ref qname="RssiBaseC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RssiMsgIntercept" scoped="" ref="0x7ff8a52954e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x7ff8a5295830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LaserSensorStream" ref="0x7ff8a527bd60" loc="9:RssiBaseC.nc">
      <component-ref qname="RssiBaseC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LaserSensorStream" scoped="" ref="0x7ff8a527bd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7ff8a52816d8"/>
        <function-ref name="postBuffer" scoped="" ref="0x7ff8a52828f0"/>
        <function-ref name="read" scoped="" ref="0x7ff8a5281238"/>
        <function-ref name="readDone" scoped="" ref="0x7ff8a5279158"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7ff8a5270888" loc="12:RssiBaseC.nc">
      <component-ref qname="RssiBaseC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7ff8a5270888"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7ff8a5270bd8"/>
        <function-ref name="setNetwork" scoped="" ref="0x7ff8a5270d60"/>
        <function-ref name="getRssi" scoped="" ref="0x7ff8a5278020"/>
        <function-ref name="getNetwork" scoped="" ref="0x7ff8a52781a8"/>
        <function-ref name="getPower" scoped="" ref="0x7ff8a5278330"/>
        <function-ref name="getLqi" scoped="" ref="0x7ff8a52784b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="checkLaser" ref="0x7ff8a526caf0" loc="49:RssiBaseC.nc">
      <component-ref qname="RssiBaseC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="checkLaser" scoped="" ref="0x7ff8a526caf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ff8a526ce40"/>
        <function-ref name="runTask" scoped="" ref="0x7ff8a526b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LaserSensor" ref="0x7ff8a5286020" loc="8:RssiBaseC.nc">
      <component-ref qname="RssiBaseC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LaserSensor" scoped="" ref="0x7ff8a5286020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a5286b68"/>
        <function-ref name="readDone" scoped="" ref="0x7ff8a5285020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialIntercept" ref="0x7ff8a524da38" loc="79:../InterceptBase/BaseStationC.nc">
      <component-ref qname="BaseStationC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialIntercept" scoped="" ref="0x7ff8a524da38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7ff8a5477908"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x7ff8a524dd88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioIntercept" ref="0x7ff8a524edd8" loc="78:../InterceptBase/BaseStationC.nc">
      <component-ref qname="BaseStationC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioIntercept" scoped="" ref="0x7ff8a524edd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7ff8a5477908"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x7ff8a524d170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7ff8a5248020" loc="60:../InterceptBase/BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7ff8a5248020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7ff8a5248370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7ff8a52436f8" loc="61:../InterceptBase/BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x7ff8a52436f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7ff8a5243a48"/>
        <function-ref name="stopDone" scoped="" ref="0x7ff8a5243bd0"/>
        <function-ref name="start" scoped="" ref="0x7ff8a5243d58"/>
        <function-ref name="stop" scoped="" ref="0x7ff8a5247020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartReceive" ref="0x7ff8a52413c8" loc="65:../InterceptBase/BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartReceive" scoped="" ref="0x7ff8a52413c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7ff8a5477908"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ff8a5241718"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAMPacket" ref="0x7ff8a5216060" loc="73:../InterceptBase/BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioAMPacket" scoped="" ref="0x7ff8a5216060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7ff8a52163b0"/>
        <function-ref name="source" scoped="" ref="0x7ff8a5216538"/>
        <function-ref name="address" scoped="" ref="0x7ff8a52166c0"/>
        <function-ref name="destination" scoped="" ref="0x7ff8a5216848"/>
        <function-ref name="setSource" scoped="" ref="0x7ff8a52169d0"/>
        <function-ref name="setDestination" scoped="" ref="0x7ff8a5216b58"/>
        <function-ref name="type" scoped="" ref="0x7ff8a5216ce0"/>
        <function-ref name="setType" scoped="" ref="0x7ff8a5216e68"/>
        <function-ref name="isForMe" scoped="" ref="0x7ff8a5215020"/>
        <function-ref name="setGroup" scoped="" ref="0x7ff8a52151a8"/>
        <function-ref name="localGroup" scoped="" ref="0x7ff8a5215330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="uartSendTask" ref="0x7ff8a5204cc0" loc="99:../InterceptBase/BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="uartSendTask" scoped="" ref="0x7ff8a5204cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ff8a52030a0"/>
        <function-ref name="runTask" scoped="" ref="0x7ff8a5203228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x7ff8a52473a8" loc="62:../InterceptBase/BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioControl" scoped="" ref="0x7ff8a52473a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7ff8a52476f8"/>
        <function-ref name="stopDone" scoped="" ref="0x7ff8a5247880"/>
        <function-ref name="start" scoped="" ref="0x7ff8a5247a08"/>
        <function-ref name="stop" scoped="" ref="0x7ff8a5247b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0x7ff8a5218358" loc="72:../InterceptBase/BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioPacket" scoped="" ref="0x7ff8a5218358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff8a52186a8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7ff8a5218830"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff8a52189b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff8a5218b40"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7ff8a5218cc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x7ff8a5219020" loc="70:../InterceptBase/BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioReceive" scoped="" ref="0x7ff8a5219020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7ff8a5477908"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ff8a5219370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="radioSendTask" ref="0x7ff8a5203b80" loc="100:../InterceptBase/BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="radioSendTask" scoped="" ref="0x7ff8a5203b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ff8a5202020"/>
        <function-ref name="runTask" scoped="" ref="0x7ff8a52021a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialIntercept" ref="0x7ff8a5209700" loc="79:../InterceptBase/BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialIntercept" scoped="" ref="0x7ff8a5209700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7ff8a5477908"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x7ff8a5209a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioIntercept" ref="0x7ff8a5213a88" loc="78:../InterceptBase/BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioIntercept" scoped="" ref="0x7ff8a5213a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7ff8a5477908"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x7ff8a5213dd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7ff8a520ac38" loc="75:../InterceptBase/BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7ff8a520ac38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7ff8a52140d8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7ff8a5214260"/>
        <function-ref name="led1On" scoped="" ref="0x7ff8a52143e8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7ff8a5214570"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7ff8a52146f8"/>
        <function-ref name="get" scoped="" ref="0x7ff8a5214880"/>
        <function-ref name="led1Off" scoped="" ref="0x7ff8a5214a08"/>
        <function-ref name="led2Off" scoped="" ref="0x7ff8a52131a8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a5214b90"/>
        <function-ref name="led0On" scoped="" ref="0x7ff8a5214d18"/>
        <function-ref name="led2On" scoped="" ref="0x7ff8a5213020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartPacket" ref="0x7ff8a522a840" loc="66:../InterceptBase/BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartPacket" scoped="" ref="0x7ff8a522a840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff8a522ab90"/>
        <function-ref name="payloadLength" scoped="" ref="0x7ff8a522ad18"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff8a5239020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff8a52391a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7ff8a5239330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x7ff8a5235cd0" loc="69:../InterceptBase/BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioSend" scoped="" ref="0x7ff8a5235cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7ff8a5477908"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff8a522b0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff8a522b228"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff8a522b3b0"/>
        <function-ref name="cancel" scoped="" ref="0x7ff8a522b538"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff8a522b6c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartSend" ref="0x7ff8a5238820" loc="64:../InterceptBase/BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartSend" scoped="" ref="0x7ff8a5238820"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7ff8a5477908"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff8a5238b70"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff8a5238cf8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff8a5238e80"/>
        <function-ref name="cancel" scoped="" ref="0x7ff8a5242030"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff8a52421b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartAMPacket" ref="0x7ff8a521a1d0" loc="67:../InterceptBase/BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartAMPacket" scoped="" ref="0x7ff8a521a1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7ff8a521a520"/>
        <function-ref name="source" scoped="" ref="0x7ff8a521a6a8"/>
        <function-ref name="address" scoped="" ref="0x7ff8a521a830"/>
        <function-ref name="destination" scoped="" ref="0x7ff8a521a9b8"/>
        <function-ref name="setSource" scoped="" ref="0x7ff8a521ab40"/>
        <function-ref name="setDestination" scoped="" ref="0x7ff8a521acc8"/>
        <function-ref name="type" scoped="" ref="0x7ff8a521ae50"/>
        <function-ref name="setType" scoped="" ref="0x7ff8a5235020"/>
        <function-ref name="isForMe" scoped="" ref="0x7ff8a52351a8"/>
        <function-ref name="setGroup" scoped="" ref="0x7ff8a5235330"/>
        <function-ref name="localGroup" scoped="" ref="0x7ff8a52354b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSnoop" ref="0x7ff8a5219b98" loc="71:../InterceptBase/BaseStationP.nc">
      <component-ref qname="BaseStationP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioSnoop" scoped="" ref="0x7ff8a5219b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7ff8a5477908"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ff8a5218020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7ff8a51b7908" loc="46:/home/paul/wsnpr/tinyos-main/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7ff8a51b7908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7ff8a51b7c58"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7ff8a51b7de0"/>
        <function-ref name="led1On" scoped="" ref="0x7ff8a51b3020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7ff8a51b31a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7ff8a51b3330"/>
        <function-ref name="get" scoped="" ref="0x7ff8a51b34b8"/>
        <function-ref name="led1Off" scoped="" ref="0x7ff8a51b3640"/>
        <function-ref name="led2Off" scoped="" ref="0x7ff8a51b3c60"/>
        <function-ref name="set" scoped="" ref="0x7ff8a51b37c8"/>
        <function-ref name="led0On" scoped="" ref="0x7ff8a51b3950"/>
        <function-ref name="led2On" scoped="" ref="0x7ff8a51b3ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7ff8a51a7348" loc="50:/home/paul/wsnpr/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7ff8a51a7348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a51a7698"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a51a7820"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a51a79a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a51a7b30"/>
        <function-ref name="get" scoped="" ref="0x7ff8a51a7cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a51a7e40"/>
        <function-ref name="set" scoped="" ref="0x7ff8a51ad020"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a51ad1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ff8a51b2b18" loc="46:/home/paul/wsnpr/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ff8a51b2b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff8a51b2e68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7ff8a51ad4c0" loc="51:/home/paul/wsnpr/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7ff8a51ad4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a51ad810"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a51ad998"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a51adb20"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a51adca8"/>
        <function-ref name="get" scoped="" ref="0x7ff8a51ade30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a51ac020"/>
        <function-ref name="set" scoped="" ref="0x7ff8a51ac1a8"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a51ac330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7ff8a51af110" loc="47:/home/paul/wsnpr/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7ff8a51af110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7ff8a51af460"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7ff8a51af5e8"/>
        <function-ref name="led1On" scoped="" ref="0x7ff8a51af770"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7ff8a51af8f8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7ff8a51afa80"/>
        <function-ref name="get" scoped="" ref="0x7ff8a51afc08"/>
        <function-ref name="led1Off" scoped="" ref="0x7ff8a51afd90"/>
        <function-ref name="led2Off" scoped="" ref="0x7ff8a51ae4b8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a51ae020"/>
        <function-ref name="led0On" scoped="" ref="0x7ff8a51ae1a8"/>
        <function-ref name="led2On" scoped="" ref="0x7ff8a51ae330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7ff8a51ac648" loc="52:/home/paul/wsnpr/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7ff8a51ac648"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a51ac998"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a51acb20"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a51acca8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a51ace30"/>
        <function-ref name="get" scoped="" ref="0x7ff8a51a6020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a51a61a8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a51a6330"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a51a64b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7ff8a51b0aa0" loc="41:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7ff8a51b0aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a51b0df0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a518b020"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a518b1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a518b330"/>
        <function-ref name="get" scoped="" ref="0x7ff8a518b4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a518b640"/>
        <function-ref name="set" scoped="" ref="0x7ff8a518b7c8"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a518b950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7ff8a518bca8" loc="42:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7ff8a518bca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a518a020"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a518a1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a518a330"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a518a4b8"/>
        <function-ref name="get" scoped="" ref="0x7ff8a518a640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a518a7c8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a518a950"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a518aad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7ff8a5188020" loc="44:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ff8a5188020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff8a5188370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7ff8a518ae30" loc="43:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7ff8a518ae30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a51891a8"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a5189330"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a51894b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a5189640"/>
        <function-ref name="get" scoped="" ref="0x7ff8a51897c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a5189950"/>
        <function-ref name="set" scoped="" ref="0x7ff8a5189ad8"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a5189c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7ff8a5174b00" loc="53:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7ff8a5174b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a5174e50"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a5173020"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a51731a8"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a5173330"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a51734b8"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a5173640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a51737c8"/>
        <function-ref name="get" scoped="" ref="0x7ff8a5173950"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a5173ad8"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a5173c60"/>
        <function-ref name="set" scoped="" ref="0x7ff8a5173de8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a5172020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a51721a8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a5172430"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a51725b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7ff8a515f568" loc="66:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7ff8a515f568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a515f8b8"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a515fa40"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a515fbc8"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a515fd50"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a515e020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a515e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a515e330"/>
        <function-ref name="get" scoped="" ref="0x7ff8a515e4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a515e640"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a515e7c8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a515e950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a515ead8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a515ec60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a515d020"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a515d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x7ff8a51167d0" loc="145:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x7ff8a51167d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a5116b20"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a5116ca8"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a5116e30"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a5115020"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a51151a8"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a5115330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a51154b8"/>
        <function-ref name="get" scoped="" ref="0x7ff8a5115640"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a51157c8"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a5115950"/>
        <function-ref name="set" scoped="" ref="0x7ff8a5115ad8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a5115c60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a5115de8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a5114120"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a51142a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x7ff8a50f1558" loc="165:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x7ff8a50f1558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a50f18a8"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a50f1a30"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a50f1bb8"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a50f1d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a50f0020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a50f01a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a50f0330"/>
        <function-ref name="get" scoped="" ref="0x7ff8a50f04b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a50f0640"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a50f07c8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a50f0950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a50f0ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a50f0c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a50ef020"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a50ef1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x7ff8a5114660" loc="146:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x7ff8a5114660"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a51149b0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a5114b38"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a5114cc0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a5114e48"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a5113020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a51131a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a5113330"/>
        <function-ref name="get" scoped="" ref="0x7ff8a51134b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a5113640"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a51137c8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a5113950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a5113ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a5113c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a5112020"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a51121a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x7ff8a515b568" loc="71:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x7ff8a515b568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a515b8b8"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a515ba40"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a515bbc8"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a515bd50"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a515a020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a515a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a515a330"/>
        <function-ref name="get" scoped="" ref="0x7ff8a515a4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a515a640"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a515a7c8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a515a950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a515aad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a515ac60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a5159020"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a51591a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x7ff8a5147568" loc="84:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x7ff8a5147568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a51478b8"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a5147a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a5147bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a5147d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a5146020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a51461a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a5146330"/>
        <function-ref name="get" scoped="" ref="0x7ff8a51464b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a5146640"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a51467c8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a5146950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a5146ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a5146c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a5145020"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a51451a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x7ff8a5132568" loc="97:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x7ff8a5132568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a51328b8"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a5132a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a5132bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a5132d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a5131020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a51311a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a5131330"/>
        <function-ref name="get" scoped="" ref="0x7ff8a51314b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a5131640"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a51317c8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a5131950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a5131ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a5131c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a5130020"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a51301a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x7ff8a5122568" loc="108:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7ff8a5122568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a51228b8"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a5122a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a5122bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a5122d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a5121020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a51211a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a5121330"/>
        <function-ref name="get" scoped="" ref="0x7ff8a51214b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a5121640"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a51217c8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a5121950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a5121ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a5121c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a5120020"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a51201a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x7ff8a510e560" loc="149:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x7ff8a510e560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a510e8b0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a510ea38"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a510ebc0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a510ed48"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a510c020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a510c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a510c330"/>
        <function-ref name="get" scoped="" ref="0x7ff8a510c4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a510c640"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a510c7c8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a510c950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a510cad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a510cc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a510b020"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a510b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x7ff8a50fd558" loc="159:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x7ff8a50fd558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a50fd8a8"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a50fda30"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a50fdbb8"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a50fdd40"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a50fc020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a50fc1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a50fc330"/>
        <function-ref name="get" scoped="" ref="0x7ff8a50fc4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a50fc640"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a50fc7c8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a50fc950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a50fcad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a50fcc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a50fb020"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a50fb1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x7ff8a50e9560" loc="171:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x7ff8a50e9560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a50e98b0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a50e9a38"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a50e9bc0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a50e9d48"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a50e8020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a50e81a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a50e8330"/>
        <function-ref name="get" scoped="" ref="0x7ff8a50e84b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a50e8640"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a50e87c8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a50e8950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a50e8ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a50e8c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a50e7020"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a50e71a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7ff8a516e668" loc="56:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7ff8a516e668"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a516e9b8"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a516eb40"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a516ecc8"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a516ee50"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a516d020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a516d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a516d330"/>
        <function-ref name="get" scoped="" ref="0x7ff8a516d4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a516d640"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a516d7c8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a516d950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a516dad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a516dc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a516c020"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a516c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x7ff8a510b560" loc="150:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x7ff8a510b560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a510b8b0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a510ba38"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a510bbc0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a510bd48"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a510a020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a510a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a510a330"/>
        <function-ref name="get" scoped="" ref="0x7ff8a510a4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a510a640"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a510a7c8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a510a950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a510aad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a510ac60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a5109020"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a51091a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7ff8a5169568" loc="61:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7ff8a5169568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a51698b8"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a5169a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a5169bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a5169d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a5168020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a51681a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a5168330"/>
        <function-ref name="get" scoped="" ref="0x7ff8a51684b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a5168640"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a51687c8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a5168950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a5168ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a5168c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a5167020"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a51671a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x7ff8a5155568" loc="74:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x7ff8a5155568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a51558b8"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a5155a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a5155bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a5155d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a5154020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a51541a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a5154330"/>
        <function-ref name="get" scoped="" ref="0x7ff8a51544b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a5154640"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a51547c8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a5154950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a5154ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a5154c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a5153020"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a51531a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x7ff8a5141568" loc="87:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x7ff8a5141568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a51418b8"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a5141a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a5141bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a5141d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a5140020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a51401a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a5140330"/>
        <function-ref name="get" scoped="" ref="0x7ff8a51404b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a5140640"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a51407c8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a5140950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a5140ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a5140c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a513f020"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a513f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x7ff8a512c568" loc="100:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x7ff8a512c568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a512c8b8"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a512ca40"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a512cbc8"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a512cd50"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a512b020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a512b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a512b330"/>
        <function-ref name="get" scoped="" ref="0x7ff8a512b4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a512b640"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a512b7c8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a512b950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a512bad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a512bc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a512a020"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a512a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x7ff8a511c568" loc="111:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7ff8a511c568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a511c8b8"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a511ca40"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a511cbc8"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a511cd50"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a511b020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a511b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a511b330"/>
        <function-ref name="get" scoped="" ref="0x7ff8a511b4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a511b640"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a511b7c8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a511b950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a511bad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a511bc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a511a020"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a511a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7ff8a5178e10" loc="51:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7ff8a5178e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a51771a8"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a5177330"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a51774b8"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a5177640"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a51777c8"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a5177950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a5177ad8"/>
        <function-ref name="get" scoped="" ref="0x7ff8a5177c60"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a5177de8"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a5176020"/>
        <function-ref name="set" scoped="" ref="0x7ff8a51761a8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a5176330"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a51764b8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a5176740"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a51768c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7ff8a5163568" loc="64:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7ff8a5163568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a51639b8"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a5163b40"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a5163cc8"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a5163e50"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a5162020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a51621a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a5162330"/>
        <function-ref name="get" scoped="" ref="0x7ff8a51624b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a5162640"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a51627c8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a5162950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a5162ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a5162c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a5161020"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a51611a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x7ff8a514f568" loc="77:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x7ff8a514f568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a514f8b8"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a514fa40"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a514fbc8"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a514fd50"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a514e020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a514e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a514e330"/>
        <function-ref name="get" scoped="" ref="0x7ff8a514e4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a514e640"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a514e7c8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a514e950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a514ead8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a514ec60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a514d020"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a514d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x7ff8a5118970" loc="144:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x7ff8a5118970"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a5118cc0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a5118e48"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a5117020"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a51171a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a5117330"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a51174b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a5117640"/>
        <function-ref name="get" scoped="" ref="0x7ff8a51177c8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a5117950"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a5117ad8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a5117c60"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a5117de8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a5116020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a51162a8"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a5116430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x7ff8a50f7558" loc="162:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x7ff8a50f7558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a50f78a8"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a50f7a30"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a50f7bb8"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a50f7d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a50f6020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a50f61a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a50f6330"/>
        <function-ref name="get" scoped="" ref="0x7ff8a50f64b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a50f6640"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a50f67c8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a50f6950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a50f6ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a50f6c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a50f5020"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a50f51a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x7ff8a50eb558" loc="169:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x7ff8a50eb558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a50eb8a8"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a50eba30"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a50ebbb8"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a50ebd40"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a50ea020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a50ea1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a50ea330"/>
        <function-ref name="get" scoped="" ref="0x7ff8a50ea4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a50ea640"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a50ea7c8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a50ea950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a50eaad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a50eac60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a50e9020"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a50e91a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x7ff8a5103560" loc="155:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x7ff8a5103560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a51038b0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a5103a38"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a5103bc0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a5103d48"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a5102020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a51021a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a5102330"/>
        <function-ref name="get" scoped="" ref="0x7ff8a51024b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a5102640"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a51027c8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a5102950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a5102ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a5102c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a5101020"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a51011a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x7ff8a514b568" loc="82:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x7ff8a514b568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a514bab8"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a514bc40"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a514bdc8"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a514a020"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a514a1a8"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a514a330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a514a4b8"/>
        <function-ref name="get" scoped="" ref="0x7ff8a514a640"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a514a7c8"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a514a950"/>
        <function-ref name="set" scoped="" ref="0x7ff8a514aad8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a514ac60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a514ade8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a5149120"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a51492a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x7ff8a5136568" loc="95:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x7ff8a5136568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a51368b8"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a5136a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a5136bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a5136d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a5135020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a51351a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a5135330"/>
        <function-ref name="get" scoped="" ref="0x7ff8a51354b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a5135640"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a51357c8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a5135950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a5135ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a5135c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a5134020"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a51341a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x7ff8a5126568" loc="106:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7ff8a5126568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a51268b8"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a5126a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a5126bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a5126d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a5125020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a51251a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a5125330"/>
        <function-ref name="get" scoped="" ref="0x7ff8a51254b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a5125640"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a51257c8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a5125950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a5125ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a5125c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a5124020"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a51241a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x7ff8a50f5558" loc="163:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x7ff8a50f5558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a50f58a8"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a50f5a30"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a50f5bb8"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a50f5d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a50f4020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a50f41a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a50f4330"/>
        <function-ref name="get" scoped="" ref="0x7ff8a50f44b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a50f4640"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a50f47c8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a50f4950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a50f4ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a50f4c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a50f3020"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a50f31a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x7ff8a5109558" loc="152:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x7ff8a5109558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a51098a8"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a5109a30"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a5109bb8"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a5109d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a5108020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a51081a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a5108330"/>
        <function-ref name="get" scoped="" ref="0x7ff8a51084b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a5108640"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a51087c8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a5108950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a5108ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a5108c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a5107020"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a51071a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7ff8a5172978" loc="54:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7ff8a5172978"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a5172cc8"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a5172e50"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a5171020"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a51711a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a5171330"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a51714b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a5171640"/>
        <function-ref name="get" scoped="" ref="0x7ff8a51717c8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a5171950"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a5171ad8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a5171c60"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a5171de8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a5170020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a51702a8"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a5170430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7ff8a515d568" loc="67:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7ff8a515d568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a515d8b8"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a515da40"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a515dbc8"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a515dd50"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a515c020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a515c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a515c330"/>
        <function-ref name="get" scoped="" ref="0x7ff8a515c4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a515c640"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a515c7c8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a515c950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a515cad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a515cc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a515b020"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a515b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x7ff8a512a568" loc="104:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7ff8a512a568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a512a8b8"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a512aa40"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a512abc8"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a512ad50"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a5129020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a51291a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a5129330"/>
        <function-ref name="get" scoped="" ref="0x7ff8a51294b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a5129640"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a51297c8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a5129950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a5129ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a5129c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a5128020"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a51281a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x7ff8a5159568" loc="72:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x7ff8a5159568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a51598b8"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a5159a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a5159bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a5159d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a5158020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a51581a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a5158330"/>
        <function-ref name="get" scoped="" ref="0x7ff8a51584b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a5158640"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a51587c8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a5158950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a5158ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a5158c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a5157020"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a51571a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x7ff8a5145568" loc="85:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x7ff8a5145568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a51458b8"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a5145a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a5145bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a5145d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a5144020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a51441a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a5144330"/>
        <function-ref name="get" scoped="" ref="0x7ff8a51444b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a5144640"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a51447c8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a5144950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a5144ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a5144c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a5143020"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a51431a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x7ff8a5130568" loc="98:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x7ff8a5130568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a51308b8"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a5130a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a5130bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a5130d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a512f020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a512f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a512f330"/>
        <function-ref name="get" scoped="" ref="0x7ff8a512f4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a512f640"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a512f7c8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a512f950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a512fad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a512fc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a512e020"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a512e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x7ff8a5120568" loc="109:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7ff8a5120568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a51208b8"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a5120a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a5120bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a5120d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a511f020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a511f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a511f330"/>
        <function-ref name="get" scoped="" ref="0x7ff8a511f4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a511f640"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a511f7c8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a511f950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a511fad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a511fc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a511e020"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a511e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x7ff8a5105560" loc="154:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x7ff8a5105560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a51058b0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a5105a38"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a5105bc0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a5105d48"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a5104020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a51041a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a5104330"/>
        <function-ref name="get" scoped="" ref="0x7ff8a51044b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a5104640"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a51047c8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a5104950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a5104ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a5104c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a5103020"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a51031a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7ff8a51840a0" loc="49:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7ff8a51840a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a51843f0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a5184578"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a5184700"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a5184888"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a5184a10"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a5184b98"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a5184d20"/>
        <function-ref name="get" scoped="" ref="0x7ff8a5183020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a51831a8"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a5183330"/>
        <function-ref name="set" scoped="" ref="0x7ff8a51834b8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a5183640"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a51837c8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a5183a50"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a5183bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7ff8a5167568" loc="62:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7ff8a5167568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a51678b8"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a5167a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a5167bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a5167d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a5166020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a51661a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a5166330"/>
        <function-ref name="get" scoped="" ref="0x7ff8a51664b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a5166640"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a51667c8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a5166950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a5166ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a5166c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a5165020"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a51651a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x7ff8a5153568" loc="75:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x7ff8a5153568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a51538b8"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a5153a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a5153bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a5153d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a5152020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a51521a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a5152330"/>
        <function-ref name="get" scoped="" ref="0x7ff8a51524b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a5152640"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a51527c8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a5152950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a5152ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a5152c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a5151020"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a51511a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x7ff8a513f568" loc="88:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x7ff8a513f568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a513f8b8"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a513fa40"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a513fbc8"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a513fd50"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a513e020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a513e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a513e330"/>
        <function-ref name="get" scoped="" ref="0x7ff8a513e4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a513e640"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a513e7c8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a513e950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a513ead8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a513ec60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a513d020"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a513d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x7ff8a5101560" loc="156:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x7ff8a5101560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a51018b0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a5101a38"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a5101bc0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a5101d48"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a5100020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a51001a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a5100330"/>
        <function-ref name="get" scoped="" ref="0x7ff8a51004b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a5100640"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a51007c8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a5100950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a5100ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a5100c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a50ff020"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a50ff1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x7ff8a50fb558" loc="160:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x7ff8a50fb558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a50fb8a8"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a50fba30"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a50fbbb8"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a50fbd40"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a50fa020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a50fa1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a50fa330"/>
        <function-ref name="get" scoped="" ref="0x7ff8a50fa4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a50fa640"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a50fa7c8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a50fa950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a50faad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a50fac60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a50f9020"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a50f91a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x7ff8a50ef558" loc="166:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x7ff8a50ef558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a50ef8a8"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a50efa30"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a50efbb8"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a50efd40"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a50ee020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a50ee1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a50ee330"/>
        <function-ref name="get" scoped="" ref="0x7ff8a50ee4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a50ee640"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a50ee7c8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a50ee950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a50eead8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a50eec60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a50ed020"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a50ed1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x7ff8a513a568" loc="93:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x7ff8a513a568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a513a8b8"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a513aa40"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a513abc8"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a513ad50"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a5139020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a51391a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a5139330"/>
        <function-ref name="get" scoped="" ref="0x7ff8a51394b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a5139640"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a51397c8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a5139950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a5139ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a5139c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a5138020"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a51381a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x7ff8a50ff560" loc="157:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x7ff8a50ff560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a50ff8b0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a50ffa38"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a50ffbc0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a50ffd48"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a50fe020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a50fe1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a50fe330"/>
        <function-ref name="get" scoped="" ref="0x7ff8a50fe4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a50fe640"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a50fe7c8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a50fe950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a50fead8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a50fec60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a50fd020"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a50fd1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7ff8a5176c88" loc="52:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7ff8a5176c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a5175020"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a51751a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a5175330"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a51754b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a5175640"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a51757c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a5175950"/>
        <function-ref name="get" scoped="" ref="0x7ff8a5175ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a5175c60"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a5175de8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a5174020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a51741a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a5174330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a51745b8"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a5174740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7ff8a5161568" loc="65:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7ff8a5161568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a51618b8"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a5161a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a5161bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a5161d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a5160020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a51601a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a5160330"/>
        <function-ref name="get" scoped="" ref="0x7ff8a51604b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a5160640"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a51607c8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a5160950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a5160ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a5160c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a515f020"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a515f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x7ff8a514d568" loc="78:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x7ff8a514d568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a514d8b8"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a514da40"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a514dbc8"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a514dd50"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a514c020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a514c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a514c330"/>
        <function-ref name="get" scoped="" ref="0x7ff8a514c4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a514c640"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a514c7c8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a514c950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a514cad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a514cc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a514b020"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a514b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x7ff8a5107560" loc="153:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x7ff8a5107560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a51078b0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a5107a38"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a5107bc0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a5107d48"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a5106020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a51061a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a5106330"/>
        <function-ref name="get" scoped="" ref="0x7ff8a51064b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a5106640"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a51067c8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a5106950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a5106ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a5106c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a5105020"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a51051a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x7ff8a50f3558" loc="164:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x7ff8a50f3558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a50f38a8"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a50f3a30"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a50f3bb8"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a50f3d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a50f2020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a50f21a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a50f2330"/>
        <function-ref name="get" scoped="" ref="0x7ff8a50f24b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a50f2640"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a50f27c8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a50f2950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a50f2ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a50f2c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a50f1020"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a50f11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x7ff8a5149668" loc="83:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x7ff8a5149668"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a51499b8"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a5149b40"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a5149cc8"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a5149e50"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a5148020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a51481a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a5148330"/>
        <function-ref name="get" scoped="" ref="0x7ff8a51484b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a5148640"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a51487c8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a5148950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a5148ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a5148c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a5147020"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a51471a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x7ff8a5134568" loc="96:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x7ff8a5134568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a51348b8"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a5134a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a5134bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a5134d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a5133020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a51331a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a5133330"/>
        <function-ref name="get" scoped="" ref="0x7ff8a51334b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a5133640"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a51337c8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a5133950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a5133ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a5133c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a5132020"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a51321a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x7ff8a5124568" loc="107:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7ff8a5124568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a51248b8"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a5124a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a5124bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a5124d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a5123020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a51231a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a5123330"/>
        <function-ref name="get" scoped="" ref="0x7ff8a51234b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a5123640"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a51237c8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a5123950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a5123ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a5123c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a5122020"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a51221a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7ff8a51707f0" loc="55:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7ff8a51707f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a5170b40"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a5170cc8"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a5170e50"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a516f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a516f1a8"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a516f330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a516f4b8"/>
        <function-ref name="get" scoped="" ref="0x7ff8a516f640"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a516f7c8"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a516f950"/>
        <function-ref name="set" scoped="" ref="0x7ff8a516fad8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a516fc60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a516fde8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a516e120"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a516e2a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x7ff8a5128568" loc="105:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7ff8a5128568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a51288b8"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a5128a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a5128bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a5128d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a5127020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a51271a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a5127330"/>
        <function-ref name="get" scoped="" ref="0x7ff8a51274b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a5127640"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a51277c8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a5127950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a5127ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a5127c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a5126020"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a51261a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7ff8a516c568" loc="60:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7ff8a516c568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a516c8b8"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a516ca40"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a516cbc8"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a516cd50"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a516a020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a516a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a516a330"/>
        <function-ref name="get" scoped="" ref="0x7ff8a516a4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a516a640"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a516a7c8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a516a950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a516aad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a516ac60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a5169020"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a51691a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x7ff8a5157568" loc="73:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x7ff8a5157568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a51578b8"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a5157a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a5157bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a5157d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a5156020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a51561a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a5156330"/>
        <function-ref name="get" scoped="" ref="0x7ff8a51564b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a5156640"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a51567c8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a5156950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a5156ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a5156c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a5155020"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a51551a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x7ff8a5143568" loc="86:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x7ff8a5143568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a51438b8"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a5143a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a5143bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a5143d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a5142020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a51421a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a5142330"/>
        <function-ref name="get" scoped="" ref="0x7ff8a51424b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a5142640"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a51427c8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a5142950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a5142ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a5142c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a5141020"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a51411a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x7ff8a512e568" loc="99:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x7ff8a512e568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a512e8b8"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a512ea40"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a512ebc8"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a512ed50"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a512d020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a512d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a512d330"/>
        <function-ref name="get" scoped="" ref="0x7ff8a512d4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a512d640"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a512d7c8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a512d950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a512dad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a512dc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a512c020"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a512c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x7ff8a511e568" loc="110:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7ff8a511e568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a511e8b8"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a511ea40"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a511ebc8"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a511ed50"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a511d020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a511d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a511d330"/>
        <function-ref name="get" scoped="" ref="0x7ff8a511d4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a511d640"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a511d7c8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a511d950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a511dad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a511dc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a511c020"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a511c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7ff8a5179020" loc="50:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7ff8a5179020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a5179370"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a51794f8"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a5179680"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a5179808"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a5179990"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a5179b18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a5179ca0"/>
        <function-ref name="get" scoped="" ref="0x7ff8a5179e28"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a5178020"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a51781a8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a5178330"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a51784b8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a5178640"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a51788c8"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a5178a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7ff8a5165568" loc="63:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7ff8a5165568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a51658b8"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a5165a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a5165bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a5165d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a5164020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a51641a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a5164330"/>
        <function-ref name="get" scoped="" ref="0x7ff8a51644b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a5164640"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a51647c8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a5164950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a5164ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a5164c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a5163020"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a51631a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x7ff8a5151568" loc="76:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x7ff8a5151568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a51518b8"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a5151a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a5151bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a5151d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a5150020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a51501a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a5150330"/>
        <function-ref name="get" scoped="" ref="0x7ff8a51504b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a5150640"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a51507c8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a5150950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a5150ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a5150c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a514f020"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a514f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x7ff8a513d568" loc="89:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x7ff8a513d568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a513d8b8"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a513da40"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a513dbc8"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a513dd50"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a513b020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a513b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a513b330"/>
        <function-ref name="get" scoped="" ref="0x7ff8a513b4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a513b640"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a513b7c8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a513b950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a513bad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a513bc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a513a020"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a513a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x7ff8a5110548" loc="148:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x7ff8a5110548"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a5110898"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a5110a20"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a5110ba8"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a5110d30"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a510f020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a510f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a510f330"/>
        <function-ref name="get" scoped="" ref="0x7ff8a510f4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a510f640"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a510f7c8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a510f950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a510fad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a510fc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a510e020"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a510e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x7ff8a50f9558" loc="161:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x7ff8a50f9558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a50f98a8"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a50f9a30"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a50f9bb8"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a50f9d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a50f8020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a50f81a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a50f8330"/>
        <function-ref name="get" scoped="" ref="0x7ff8a50f84b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a50f8640"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a50f87c8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a50f8950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a50f8ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a50f8c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a50f7020"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a50f71a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x7ff8a5112560" loc="147:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x7ff8a5112560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a51128b0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a5112a38"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a5112bc0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a5112d48"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a5111020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a51111a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a5111330"/>
        <function-ref name="get" scoped="" ref="0x7ff8a51114b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a5111640"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a51117c8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a5111950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a5111ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a5111c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a5110020"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a51101a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x7ff8a5138568" loc="94:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x7ff8a5138568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a51388b8"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a5138a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a5138bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a5138d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a5137020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a51371a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a5137330"/>
        <function-ref name="get" scoped="" ref="0x7ff8a51374b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a5137640"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a51377c8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a5137950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a5137ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a5137c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a5136020"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a51361a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x7ff8a50ed558" loc="168:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x7ff8a50ed558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a50ed8a8"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a50eda30"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a50edbb8"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a50edd40"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a50ec020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a50ec1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a50ec330"/>
        <function-ref name="get" scoped="" ref="0x7ff8a50ec4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a50ec640"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a50ec7c8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a50ec950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a50ecad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a50ecc60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a50eb020"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a50eb1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x7ff8a50e7568" loc="172:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x7ff8a50e7568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a50e78b8"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a50e7a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a50e7bc8"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a50e7d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a50e6020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a50e61a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a50e6330"/>
        <function-ref name="get" scoped="" ref="0x7ff8a50e64b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a50e6640"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a50e67c8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a50e6950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a50e6ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a50e6c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a50e5020"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a50e51a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x7ff8a511a5b8" loc="143:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x7ff8a511a5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a511ad08"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a5119020"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a51191a8"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a5119330"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a51194b8"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a5119640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a51197c8"/>
        <function-ref name="get" scoped="" ref="0x7ff8a5119950"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a5119ad8"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a5119c60"/>
        <function-ref name="set" scoped="" ref="0x7ff8a5119de8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a5118020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a51181a8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a5118430"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a51185b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff8a50e3e18" loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff8a50e3e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a50bc1a8"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a50bc330"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a50bc4b8"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a50bc640"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a50bc7c8"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a50bc950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a50bcad8"/>
        <function-ref name="get" scoped="" ref="0x7ff8a50bcc60"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a50bcde8"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a50bb020"/>
        <function-ref name="set" scoped="" ref="0x7ff8a50bb1a8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a50bb330"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a50bb4b8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a50bb740"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a50bb8c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff8a50b8478" loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff8a50b8478"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a50b87c8"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a50b8950"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a50b8ad8"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a50b8c60"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a50b8de8"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a50b7020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a50b71a8"/>
        <function-ref name="get" scoped="" ref="0x7ff8a50b7330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a50b74b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a50b7640"/>
        <function-ref name="set" scoped="" ref="0x7ff8a50b77c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a50b7950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a50b7ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a50b7d60"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a50b6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff8a50b4ca0" loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff8a50b4ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a50b3020"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a50b31a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a50b3330"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a50b34b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a50b3640"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a50b37c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a50b3950"/>
        <function-ref name="get" scoped="" ref="0x7ff8a50b3ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a50b3c60"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a50b3de8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a50b2020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a50b21a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a50b2330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a50b25b8"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a50b2740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff8a50af3d8" loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff8a50af3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a50af728"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a50af8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a50afa38"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a50afbc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a50afd48"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a50ae020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a50ae1a8"/>
        <function-ref name="get" scoped="" ref="0x7ff8a50ae330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a50ae4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a50ae640"/>
        <function-ref name="set" scoped="" ref="0x7ff8a50ae7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a50ae950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a50aead8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a50aed60"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a50ad020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff8a50abca0" loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff8a50abca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a50aa020"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a50aa1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a50aa330"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a50aa4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a50aa640"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a50aa7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a50aa950"/>
        <function-ref name="get" scoped="" ref="0x7ff8a50aaad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a50aac60"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a50aade8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a50a9020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a50a91a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a50a9330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a50a95b8"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a50a9740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff8a50a63d8" loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff8a50a63d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a50a6728"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a50a68b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a50a6a38"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a50a6bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a50a6d48"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a50a5020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a50a51a8"/>
        <function-ref name="get" scoped="" ref="0x7ff8a50a5330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a50a54b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a50a5640"/>
        <function-ref name="set" scoped="" ref="0x7ff8a50a57c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a50a5950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a50a5ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a50a5d60"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a50a4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff8a50a2ca0" loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff8a50a2ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a50a1020"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a50a11a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a50a1330"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a50a14b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a50a1640"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a50a17c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a50a1950"/>
        <function-ref name="get" scoped="" ref="0x7ff8a50a1ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a50a1c60"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a50a1de8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a50a0020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a50a01a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a50a0330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a50a05b8"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a50a0740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff8a509d3d8" loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff8a509d3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a509d728"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a509d8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a509da38"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a509dbc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a509dd48"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a509c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a509c1a8"/>
        <function-ref name="get" scoped="" ref="0x7ff8a509c330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a509c4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a509c640"/>
        <function-ref name="set" scoped="" ref="0x7ff8a509c7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a509c950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a509cad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a509cd60"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a509b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff8a5098ca0" loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff8a5098ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a5097020"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a50971a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a5097330"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a50974b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a5097640"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a50977c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a5097950"/>
        <function-ref name="get" scoped="" ref="0x7ff8a5097ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a5097c60"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a5097de8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a5096020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a50961a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a5096330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a50965b8"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a5096740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff8a50933d8" loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff8a50933d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a5093728"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a50938b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a5093a38"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a5093bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a5093d48"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a5092020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a50921a8"/>
        <function-ref name="get" scoped="" ref="0x7ff8a5092330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a50924b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a5092640"/>
        <function-ref name="set" scoped="" ref="0x7ff8a50927c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a5092950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a5092ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a5092d60"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a5091020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff8a508fca0" loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff8a508fca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a508e020"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a508e1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a508e330"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a508e4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a508e640"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a508e7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a508e950"/>
        <function-ref name="get" scoped="" ref="0x7ff8a508ead8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a508ec60"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a508ede8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a508d020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a508d1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a508d330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a508d5b8"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a508d740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff8a508a3d8" loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff8a508a3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a508a728"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a508a8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a508aa38"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a508abc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a508ad48"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a5089020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a50891a8"/>
        <function-ref name="get" scoped="" ref="0x7ff8a5089330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a50894b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a5089640"/>
        <function-ref name="set" scoped="" ref="0x7ff8a50897c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a5089950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a5089ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a5089d60"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a5088020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff8a5086d08" loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff8a5086d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a50850a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a5085228"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a50853b0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a5085538"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a50856c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a5085848"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a50859d0"/>
        <function-ref name="get" scoped="" ref="0x7ff8a5085b58"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a5085ce0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a5085e68"/>
        <function-ref name="set" scoped="" ref="0x7ff8a5084020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a50841a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a5084330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a50845b8"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a5084740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff8a50813d8" loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff8a50813d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a5081728"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a50818b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a5081a38"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a5081bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a5081d48"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a5080020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a50801a8"/>
        <function-ref name="get" scoped="" ref="0x7ff8a5080330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a50804b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a5080640"/>
        <function-ref name="set" scoped="" ref="0x7ff8a50807c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a5080950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a5080ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a5080d60"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a507f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff8a507dca0" loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff8a507dca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a507c020"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a507c1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a507c330"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a507c4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a507c640"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a507c7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a507c950"/>
        <function-ref name="get" scoped="" ref="0x7ff8a507cad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a507cc60"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a507cde8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a507b020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a507b1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a507b330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a507b5b8"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a507b740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff8a50783d8" loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff8a50783d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a5078728"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a50788b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a5078a38"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a5078bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a5078d48"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a5076020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a50761a8"/>
        <function-ref name="get" scoped="" ref="0x7ff8a5076330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a50764b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a5076640"/>
        <function-ref name="set" scoped="" ref="0x7ff8a50767c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a5076950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a5076ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a5076d60"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a5075020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff8a5073ca0" loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff8a5073ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a5072020"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a50721a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a5072330"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a50724b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a5072640"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a50727c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a5072950"/>
        <function-ref name="get" scoped="" ref="0x7ff8a5072ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a5072c60"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a5072de8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a5071020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a50711a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a5071330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a50715b8"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a5071740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff8a506e3d8" loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff8a506e3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a506e728"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a506e8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a506ea38"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a506ebc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a506ed48"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a506d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a506d1a8"/>
        <function-ref name="get" scoped="" ref="0x7ff8a506d330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a506d4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a506d640"/>
        <function-ref name="set" scoped="" ref="0x7ff8a506d7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a506d950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a506dad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a506dd60"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a506c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff8a506aca0" loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff8a506aca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a5069020"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a50691a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a5069330"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a50694b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a5069640"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a50697c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a5069950"/>
        <function-ref name="get" scoped="" ref="0x7ff8a5069ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a5069c60"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a5069de8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a5068020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a50681a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a5068330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a50685b8"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a5068740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff8a50653d8" loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff8a50653d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a5065728"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a50658b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a5065a38"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a5065bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a5065d48"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a5064020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a50641a8"/>
        <function-ref name="get" scoped="" ref="0x7ff8a5064330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a50644b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a5064640"/>
        <function-ref name="set" scoped="" ref="0x7ff8a50647c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a5064950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a5064ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a5064d60"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a5063020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff8a5061ca0" loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff8a5061ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a5060020"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a50601a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a5060330"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a50604b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a5060640"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a50607c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a5060950"/>
        <function-ref name="get" scoped="" ref="0x7ff8a5060ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a5060c60"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a5060de8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a505f020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a505f1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a505f330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a505f5b8"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a505f740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff8a505c3d8" loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff8a505c3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a505c728"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a505c8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a505ca38"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a505cbc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a505cd48"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a505b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a505b1a8"/>
        <function-ref name="get" scoped="" ref="0x7ff8a505b330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a505b4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a505b640"/>
        <function-ref name="set" scoped="" ref="0x7ff8a505b7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a505b950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a505bad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a505bd60"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a505a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff8a5058ca0" loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff8a5058ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a5057020"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a50571a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a5057330"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a50574b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a5057640"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a50577c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a5057950"/>
        <function-ref name="get" scoped="" ref="0x7ff8a5057ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a5057c60"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a5057de8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a5056020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a50561a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a5056330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a50565b8"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a5056740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff8a50533d8" loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff8a50533d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a5053728"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a50538b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a5053a38"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a5053bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a5053d48"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a5051020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a50511a8"/>
        <function-ref name="get" scoped="" ref="0x7ff8a5051330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a50514b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a5051640"/>
        <function-ref name="set" scoped="" ref="0x7ff8a50517c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a5051950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a5051ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a5051d60"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a5050020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff8a504edd8" loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff8a504edd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a504d170"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a504d2f8"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a504d480"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a504d608"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a504d790"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a504d918"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a504daa0"/>
        <function-ref name="get" scoped="" ref="0x7ff8a504dc28"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a504ddb0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a504c020"/>
        <function-ref name="set" scoped="" ref="0x7ff8a504c1a8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a504c330"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a504c4b8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a504c740"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a504c8c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff8a5049478" loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff8a5049478"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a50497c8"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a5049950"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a5049ad8"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a5049c60"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a5049de8"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a5048020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a50481a8"/>
        <function-ref name="get" scoped="" ref="0x7ff8a5048330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a50484b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a5048640"/>
        <function-ref name="set" scoped="" ref="0x7ff8a50487c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a5048950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a5048ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a5048d60"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a5047020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff8a5045ca0" loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff8a5045ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a5044020"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a50441a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a5044330"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a50444b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a5044640"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a50447c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a5044950"/>
        <function-ref name="get" scoped="" ref="0x7ff8a5044ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a5044c60"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a5044de8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a5043020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a50431a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a5043330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a50435b8"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a5043740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff8a50403d8" loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff8a50403d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a5040728"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a50408b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a5040a38"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a5040bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a5040d48"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a503f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a503f1a8"/>
        <function-ref name="get" scoped="" ref="0x7ff8a503f330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a503f4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a503f640"/>
        <function-ref name="set" scoped="" ref="0x7ff8a503f7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a503f950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a503fad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a503fd60"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a503e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff8a503cca0" loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff8a503cca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a503b020"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a503b1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a503b330"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a503b4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a503b640"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a503b7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a503b950"/>
        <function-ref name="get" scoped="" ref="0x7ff8a503bad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a503bc60"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a503bde8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a503a020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a503a1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a503a330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a503a5b8"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a503a740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff8a50373d8" loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff8a50373d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a5037728"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a50378b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a5037a38"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a5037bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a5037d48"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a5036020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a50361a8"/>
        <function-ref name="get" scoped="" ref="0x7ff8a5036330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a50364b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a5036640"/>
        <function-ref name="set" scoped="" ref="0x7ff8a50367c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a5036950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a5036ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a5036d60"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a5035020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff8a5033ca0" loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff8a5033ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a5032020"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a50321a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a5032330"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a50324b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a5032640"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a50327c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a5032950"/>
        <function-ref name="get" scoped="" ref="0x7ff8a5032ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a5032c60"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a5032de8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a5031020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a50311a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a5031330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a50315b8"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a5031740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff8a502d3d8" loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff8a502d3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a502d728"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a502d8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a502da38"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a502dbc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a502dd48"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a502c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a502c1a8"/>
        <function-ref name="get" scoped="" ref="0x7ff8a502c330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a502c4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a502c640"/>
        <function-ref name="set" scoped="" ref="0x7ff8a502c7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a502c950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a502cad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a502cd60"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a502b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff8a5029ca0" loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff8a5029ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a5028020"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a50281a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a5028330"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a50284b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a5028640"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a50287c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a5028950"/>
        <function-ref name="get" scoped="" ref="0x7ff8a5028ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a5028c60"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a5028de8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a5027020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a50271a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a5027330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a50275b8"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a5027740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff8a50243d8" loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff8a50243d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a5024728"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a50248b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a5024a38"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a5024bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a5024d48"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a5023020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a50231a8"/>
        <function-ref name="get" scoped="" ref="0x7ff8a5023330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a50234b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a5023640"/>
        <function-ref name="set" scoped="" ref="0x7ff8a50237c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a5023950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a5023ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a5023d60"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a5022020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff8a5020ca0" loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff8a5020ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a501f020"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a501f1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a501f330"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a501f4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a501f640"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a501f7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a501f950"/>
        <function-ref name="get" scoped="" ref="0x7ff8a501fad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a501fc60"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a501fde8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a501e020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a501e1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a501e330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a501e5b8"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a501e740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff8a501b3d8" loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff8a501b3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a501b728"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a501b8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a501ba38"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a501bbc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a501bd48"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a501a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a501a1a8"/>
        <function-ref name="get" scoped="" ref="0x7ff8a501a330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a501a4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a501a640"/>
        <function-ref name="set" scoped="" ref="0x7ff8a501a7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a501a950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a501aad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a501ad60"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a5019020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff8a5017ca0" loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff8a5017ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a5016020"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a50161a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a5016330"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a50164b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a5016640"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a50167c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a5016950"/>
        <function-ref name="get" scoped="" ref="0x7ff8a5016ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a5016c60"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a5016de8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a5015020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a50151a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a5015330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a50155b8"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a5015740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff8a50123d8" loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff8a50123d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a5012728"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a50128b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a5012a38"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a5012bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a5012d48"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a5011020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a50111a8"/>
        <function-ref name="get" scoped="" ref="0x7ff8a5011330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a50114b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a5011640"/>
        <function-ref name="set" scoped="" ref="0x7ff8a50117c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a5011950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a5011ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a5011d60"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a5010020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff8a500eca0" loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff8a500eca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a500c020"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a500c1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a500c330"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a500c4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a500c640"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a500c7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a500c950"/>
        <function-ref name="get" scoped="" ref="0x7ff8a500cad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a500cc60"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a500cde8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a500b020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a500b1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a500b330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a500b5b8"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a500b740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff8a50083d8" loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff8a50083d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a5008728"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a50088b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a5008a38"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a5008bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a5008d48"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a5007020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a50071a8"/>
        <function-ref name="get" scoped="" ref="0x7ff8a5007330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a50074b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a5007640"/>
        <function-ref name="set" scoped="" ref="0x7ff8a50077c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a5007950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a5007ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a5007d60"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a5006020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff8a5004ca0" loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff8a5004ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a5003020"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a50031a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a5003330"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a50034b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a5003640"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a50037c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a5003950"/>
        <function-ref name="get" scoped="" ref="0x7ff8a5003ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a5003c60"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a5003de8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a5002020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a50021a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a5002330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a50025b8"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a5002740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff8a4fff3d8" loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff8a4fff3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a4fff728"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a4fff8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a4fffa38"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a4fffbc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a4fffd48"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a4ffe020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a4ffe1a8"/>
        <function-ref name="get" scoped="" ref="0x7ff8a4ffe330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a4ffe4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a4ffe640"/>
        <function-ref name="set" scoped="" ref="0x7ff8a4ffe7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a4ffe950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a4ffead8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a4ffed60"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a4ffd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff8a4ffbca0" loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff8a4ffbca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a4ffa020"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a4ffa1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a4ffa330"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a4ffa4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a4ffa640"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a4ffa7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a4ffa950"/>
        <function-ref name="get" scoped="" ref="0x7ff8a4ffaad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a4ffac60"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a4ffade8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a4ff9020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a4ff91a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a4ff9330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a4ff95b8"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a4ff9740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff8a4ff63d8" loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff8a4ff63d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a4ff6728"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a4ff68b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a4ff6a38"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a4ff6bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a4ff6d48"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a4ff5020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a4ff51a8"/>
        <function-ref name="get" scoped="" ref="0x7ff8a4ff5330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a4ff54b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a4ff5640"/>
        <function-ref name="set" scoped="" ref="0x7ff8a4ff57c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a4ff5950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a4ff5ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a4ff5d60"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a4ff4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff8a4ff2ca0" loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff8a4ff2ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a4ff1020"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a4ff11a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a4ff1330"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a4ff14b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a4ff1640"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a4ff17c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a4ff1950"/>
        <function-ref name="get" scoped="" ref="0x7ff8a4ff1ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a4ff1c60"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a4ff1de8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a4ff0020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a4ff01a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a4ff0330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a4ff05b8"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a4ff0740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff8a4fed3d8" loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff8a4fed3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a4fed728"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a4fed8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a4feda38"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a4fedbc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a4fedd48"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a4fec020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a4fec1a8"/>
        <function-ref name="get" scoped="" ref="0x7ff8a4fec330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a4fec4b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a4fec640"/>
        <function-ref name="set" scoped="" ref="0x7ff8a4fec7c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a4fec950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a4fecad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a4fecd60"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a4feb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff8a4fe9ca0" loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff8a4fe9ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a4fe7020"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a4fe71a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a4fe7330"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a4fe74b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a4fe7640"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a4fe77c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a4fe7950"/>
        <function-ref name="get" scoped="" ref="0x7ff8a4fe7ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a4fe7c60"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a4fe7de8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a4fe6020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a4fe61a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a4fe6330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a4fe65b8"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a4fe6740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7ff8a4fe33d8" loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7ff8a4fe33d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a4fe3728"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a4fe38b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a4fe3a38"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a4fe3bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a4fe3d48"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a4fe2020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a4fe21a8"/>
        <function-ref name="get" scoped="" ref="0x7ff8a4fe2330"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a4fe24b8"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a4fe2640"/>
        <function-ref name="set" scoped="" ref="0x7ff8a4fe27c8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a4fe2950"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a4fe2ad8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a4fe2d60"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a4fe1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7ff8a4f84da0" loc="44:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7ff8a4f84da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a4f73170"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a4f732f8"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a4f73480"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a4f73608"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a4f73790"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a4f73918"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a4f73aa0"/>
        <function-ref name="get" scoped="" ref="0x7ff8a4f73c28"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a4f73db0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a4f72020"/>
        <function-ref name="set" scoped="" ref="0x7ff8a4f721a8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a4f72330"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a4f724b8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a4f72740"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a4f728c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7ff8a4f85c30" loc="43:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7ff8a4f85c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a4f84020"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a4f841a8"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a4f84330"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a4f844b8"/>
        <function-ref name="get" scoped="" ref="0x7ff8a4f84640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a4f847c8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a4f84950"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a4f84ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7ff8a4f6f5f8" loc="44:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7ff8a4f6f5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a4f6f948"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a4f6fad0"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a4f6fc58"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a4f6fde0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a4f6e020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a4f6e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a4f6e330"/>
        <function-ref name="get" scoped="" ref="0x7ff8a4f6e4b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a4f6e640"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a4f6e7c8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a4f6e950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a4f6ead8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a4f6ec60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a4f6d020"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a4f6d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7ff8a4f70448" loc="43:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7ff8a4f70448"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a4f70798"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a4f70920"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a4f70aa8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a4f70c30"/>
        <function-ref name="get" scoped="" ref="0x7ff8a4f70db8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a4f6f020"/>
        <function-ref name="set" scoped="" ref="0x7ff8a4f6f1a8"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a4f6f330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7ff8a4f6be20" loc="44:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7ff8a4f6be20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a4f6a1a8"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a4f6a330"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a4f6a4b8"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a4f6a640"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a4f6a7c8"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a4f6a950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a4f6aad8"/>
        <function-ref name="get" scoped="" ref="0x7ff8a4f6ac60"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a4f6ade8"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a4f69020"/>
        <function-ref name="set" scoped="" ref="0x7ff8a4f691a8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a4f69330"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a4f694b8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a4f69740"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a4f698c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7ff8a4f6ccd0" loc="43:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7ff8a4f6ccd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a4f6b0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a4f6b228"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a4f6b3b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a4f6b538"/>
        <function-ref name="get" scoped="" ref="0x7ff8a4f6b6c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a4f6b848"/>
        <function-ref name="set" scoped="" ref="0x7ff8a4f6b9d0"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a4f6bb58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7ff8a4f5c020" loc="61:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7ff8a4f5c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7ff8a4f5c370"/>
        <function-ref name="stopDone" scoped="" ref="0x7ff8a4f5c4f8"/>
        <function-ref name="start" scoped="" ref="0x7ff8a4f5c680"/>
        <function-ref name="stop" scoped="" ref="0x7ff8a4f5c808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7ff8a4f5b020" loc="63:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7ff8a4f5b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7ff8a5477908"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff8a4f5b370"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff8a4f5b4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff8a4f5b680"/>
        <function-ref name="cancel" scoped="" ref="0x7ff8a4f5b808"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff8a4f5b990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7ff8a4f5ad10" loc="65:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7ff8a4f5ad10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7ff8a5477908"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ff8a4f590a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7ff8a4f59328" loc="67:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7ff8a4f59328"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff8a4f59678"/>
        <function-ref name="payloadLength" scoped="" ref="0x7ff8a4f59800"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff8a4f59988"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff8a4f59b10"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7ff8a4f59c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7ff8a4f55020" loc="70:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7ff8a4f55020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff8a5294020"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff8a5294378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff8a6018020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7ff8a4f50478"/>
        <function-ref name="clear" scoped="" ref="0x7ff8a4f50b58"/>
        <function-ref name="isValid" scoped="" ref="0x7ff8a4f55d70"/>
        <function-ref name="set" scoped="" ref="0x7ff8a4f47278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7ff8a4f3c848" loc="72:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7ff8a4f3c848"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7ff8a4f3cb98"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7ff8a4f3cd20"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7ff8a4f42020"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7ff8a4f421a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7ff8a4f5a1c8" loc="64:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7ff8a4f5a1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7ff8a5477908"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ff8a4f5a518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7ff8a4f56020" loc="69:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7ff8a4f56020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7ff8a4f56370"/>
        <function-ref name="noAck" scoped="" ref="0x7ff8a4f564f8"/>
        <function-ref name="wasAcked" scoped="" ref="0x7ff8a4f56680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7ff8a4f58020" loc="68:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7ff8a4f58020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7ff8a4f58370"/>
        <function-ref name="source" scoped="" ref="0x7ff8a4f584f8"/>
        <function-ref name="address" scoped="" ref="0x7ff8a4f58680"/>
        <function-ref name="destination" scoped="" ref="0x7ff8a4f58808"/>
        <function-ref name="setSource" scoped="" ref="0x7ff8a4f58990"/>
        <function-ref name="setDestination" scoped="" ref="0x7ff8a4f58b18"/>
        <function-ref name="type" scoped="" ref="0x7ff8a4f58ca0"/>
        <function-ref name="setType" scoped="" ref="0x7ff8a4f58e28"/>
        <function-ref name="isForMe" scoped="" ref="0x7ff8a4f57020"/>
        <function-ref name="setGroup" scoped="" ref="0x7ff8a4f571a8"/>
        <function-ref name="localGroup" scoped="" ref="0x7ff8a4f57330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7ff8a4f47e48" loc="71:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7ff8a4f47e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff8a5296828"/>
            <typename><typedef-ref name="TMilli" ref="0x7ff8a5296b80"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff8a6018020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7ff8a4f45300"/>
        <function-ref name="clear" scoped="" ref="0x7ff8a4f459e0"/>
        <function-ref name="isValid" scoped="" ref="0x7ff8a4f46be8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a4f430f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7ff8a4f30310" loc="55:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7ff8a4f30310"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7ff8a4f30660"/>
        <function-ref name="stopDone" scoped="" ref="0x7ff8a4f307e8"/>
        <function-ref name="start" scoped="" ref="0x7ff8a4f30970"/>
        <function-ref name="stop" scoped="" ref="0x7ff8a4f30af8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7ff8a4f1d700" loc="64:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7ff8a4f1d700"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7ff8a5477908"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7ff8a4f1da50"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7ff8a4f1dbd8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7ff8a4f1dd60"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7ff8a4f26020"/>
        <function-ref name="setCca" scoped="" ref="0x7ff8a4f261a8"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7ff8a4f26330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7ff8a4f1b1c8" loc="67:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7ff8a4f1b1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7ff8a5477908"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7ff8a4f1b618"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7ff8a4f2bbd8" loc="60:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7ff8a4f2bbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff8a4f2a020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7ff8a4f2a1a8"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff8a4f2a330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff8a4f2a4b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7ff8a4f2a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7ff8a4f2f2b0" loc="56:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7ff8a4f2f2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7ff8a5477908"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff8a4f2f600"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff8a4f2f788"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff8a4f2f910"/>
        <function-ref name="cancel" scoped="" ref="0x7ff8a4f2fa98"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff8a4f2fc20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7ff8a4f2c020" loc="58:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7ff8a4f2c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7ff8a5477908"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ff8a4f2c370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7ff8a4f2a908" loc="61:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7ff8a4f2a908"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7ff8a4f2ac58"/>
        <function-ref name="setNetwork" scoped="" ref="0x7ff8a4f2ade0"/>
        <function-ref name="getRssi" scoped="" ref="0x7ff8a4f29020"/>
        <function-ref name="getNetwork" scoped="" ref="0x7ff8a4f291a8"/>
        <function-ref name="getPower" scoped="" ref="0x7ff8a4f29330"/>
        <function-ref name="getLqi" scoped="" ref="0x7ff8a4f294b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7ff8a4f26628" loc="65:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7ff8a4f26628"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7ff8a4f26978"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7ff8a4f26b00"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7ff8a4f26c88"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7ff8a4f26e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7ff8a4f2d3c8" loc="57:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7ff8a4f2d3c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7ff8a5477908"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ff8a4f2d718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7ff8a4f297e0" loc="62:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7ff8a4f297e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7ff8a4f29b30"/>
        <function-ref name="noAck" scoped="" ref="0x7ff8a4f29cb8"/>
        <function-ref name="wasAcked" scoped="" ref="0x7ff8a4f29e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7ff8a4f12450" loc="66:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7ff8a4f12450"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7ff8a4f127a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7ff8a4f12928"/>
        <function-ref name="getRetries" scoped="" ref="0x7ff8a4f12ab0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7ff8a4f12c38"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7ff8a4f12dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7ff8a4f2c610" loc="59:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7ff8a4f2c610"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7ff8a4f2c960"/>
        <function-ref name="source" scoped="" ref="0x7ff8a4f2cae8"/>
        <function-ref name="address" scoped="" ref="0x7ff8a4f2cc70"/>
        <function-ref name="destination" scoped="" ref="0x7ff8a4f2cdf8"/>
        <function-ref name="setSource" scoped="" ref="0x7ff8a4f2b020"/>
        <function-ref name="setDestination" scoped="" ref="0x7ff8a4f2b1a8"/>
        <function-ref name="type" scoped="" ref="0x7ff8a4f2b330"/>
        <function-ref name="setType" scoped="" ref="0x7ff8a4f2b4b8"/>
        <function-ref name="isForMe" scoped="" ref="0x7ff8a4f2b640"/>
        <function-ref name="setGroup" scoped="" ref="0x7ff8a4f2b7c8"/>
        <function-ref name="localGroup" scoped="" ref="0x7ff8a4f2b950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7ff8a4f257b0" loc="63:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7ff8a4f257b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7ff8a4f25b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7ff8a4f0d020" loc="43:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7ff8a4f0d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7ff8a4f0d370"/>
        <function-ref name="stopDone" scoped="" ref="0x7ff8a4f0d4f8"/>
        <function-ref name="start" scoped="" ref="0x7ff8a4f0d680"/>
        <function-ref name="stop" scoped="" ref="0x7ff8a4f0d808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7ff8a4efa020" loc="55:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7ff8a4efa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7ff8a4efa370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7ff8a4ef9128" loc="57:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7ff8a4ef9128"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7ff8a4ef9478"/>
        <function-ref name="setRetries" scoped="" ref="0x7ff8a4ef9600"/>
        <function-ref name="getRetries" scoped="" ref="0x7ff8a4ef9788"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7ff8a4ef9910"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7ff8a4ef9a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7ff8a4efd7e8" loc="53:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7ff8a4efd7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7ff8a4efdb38"/>
        <function-ref name="setNetwork" scoped="" ref="0x7ff8a4efdcc0"/>
        <function-ref name="getRssi" scoped="" ref="0x7ff8a4efde48"/>
        <function-ref name="getNetwork" scoped="" ref="0x7ff8a4efb020"/>
        <function-ref name="getPower" scoped="" ref="0x7ff8a4efb1a8"/>
        <function-ref name="getLqi" scoped="" ref="0x7ff8a4efb330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7ff8a4f054c8" loc="50:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7ff8a4f054c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff8a4f05818"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff8a4f059a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff8a4f05b28"/>
        <function-ref name="cancel" scoped="" ref="0x7ff8a4f05cb0"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff8a4f05e38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7ff8a4efa668" loc="56:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7ff8a4efa668"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7ff8a4efa9b8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7ff8a4efab40"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7ff8a4efacc8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7ff8a4efae50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7ff8a4f06020" loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7ff8a4f06020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ff8a4f06370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7ff8a4efb658" loc="54:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7ff8a4efb658"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7ff8a4efb9a8"/>
        <function-ref name="noAck" scoped="" ref="0x7ff8a4efbb30"/>
        <function-ref name="wasAcked" scoped="" ref="0x7ff8a4efbcb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ff8a4f0c340" loc="45:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ff8a4f0c340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff8a4f0c690"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff8a4f0c818"/>
        <function-ref name="request" scoped="" ref="0x7ff8a4f0c9a0"/>
        <function-ref name="granted" scoped="" ref="0x7ff8a4f0cb28"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff8a4f0ccb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7ff8a4efc330" loc="46:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7ff8a4efc330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff8a4efc680"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff8a4efc808"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff8a4efc990"/>
        <function-ref name="cancel" scoped="" ref="0x7ff8a4efcb18"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff8a4efcca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7ff8a4f066a0" loc="48:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7ff8a4f066a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff8a4f069f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7ff8a4f06b78"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff8a4f06d00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff8a4f05020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7ff8a4f051a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7ff8a4efd1d0" loc="51:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7ff8a4efd1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ff8a4efd520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7ff8a4ef8780" loc="44:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7ff8a4ef8780"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7ff8a4ef8ad0"/>
        <function-ref name="stopDone" scoped="" ref="0x7ff8a4ef8c58"/>
        <function-ref name="start" scoped="" ref="0x7ff8a4ef8de0"/>
        <function-ref name="stop" scoped="" ref="0x7ff8a4ef5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7ff8a4ef4678" loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7ff8a4ef4678"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7ff8a4ef49c8"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7ff8a4ef4b50"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7ff8a4ef4cd8"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7ff8a4ef4e60"/>
        <function-ref name="setCca" scoped="" ref="0x7ff8a4ef2020"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7ff8a4ef21a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7ff8a4ef52d8" loc="45:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7ff8a4ef52d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff8a4ef5628"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff8a4ef57b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff8a4ef5938"/>
        <function-ref name="cancel" scoped="" ref="0x7ff8a4ef5ac0"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff8a4ef5c48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7ff8a4ef4020" loc="46:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7ff8a4ef4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ff8a4ef4370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7ff8a4eef140" loc="39:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7ff8a4eef140"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7ff8a4eef490"/>
        <function-ref name="stopDone" scoped="" ref="0x7ff8a4eef618"/>
        <function-ref name="start" scoped="" ref="0x7ff8a4eef7a0"/>
        <function-ref name="stop" scoped="" ref="0x7ff8a4eef928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7ff8a4eee948" loc="41:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7ff8a4eee948"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7ff8a4eeec98"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7ff8a4eeee20"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7ff8a4eed020"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7ff8a4eed1a8"/>
        <function-ref name="setCca" scoped="" ref="0x7ff8a4eed330"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7ff8a4eed4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7ff8a4eeaa70" loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7ff8a4eeaa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7ff8a4eeadc0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7ff8a4ee4020"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7ff8a4ee41a8"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7ff8a4ee4330"/>
        <function-ref name="setCca" scoped="" ref="0x7ff8a4ee44b8"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7ff8a4ee4640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7ff8a4ed9c58" loc="50:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7ff8a4ed9c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7ff8a4ed7020"/>
        <function-ref name="setNetwork" scoped="" ref="0x7ff8a4ed71a8"/>
        <function-ref name="getRssi" scoped="" ref="0x7ff8a4ed7330"/>
        <function-ref name="getNetwork" scoped="" ref="0x7ff8a4ed74b8"/>
        <function-ref name="getPower" scoped="" ref="0x7ff8a4ed7640"/>
        <function-ref name="getLqi" scoped="" ref="0x7ff8a4ed77c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x7ff8a4edccc8" loc="46:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7ff8a4edccc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff8a4eea0a0"/>
        <function-ref name="cancel" scoped="" ref="0x7ff8a4eea228"/>
        <function-ref name="modify" scoped="" ref="0x7ff8a4eea3b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff8a4eea538"/>
        <function-ref name="resend" scoped="" ref="0x7ff8a4eea6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7ff8a4eefbe0" loc="40:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7ff8a4eefbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff8a4eee020"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff8a4eee1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff8a4eee330"/>
        <function-ref name="cancel" scoped="" ref="0x7ff8a4eee4b8"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff8a4eee640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7ff8a4ed8d58" loc="48:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7ff8a4ed8d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7ff8a4eda0d8"/>
        <function-ref name="rand32" scoped="" ref="0x7ff8a4eda260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7ff8a4ee2500" loc="45:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7ff8a4ee2500"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7ff8a4ee2850"/>
        <function-ref name="stop" scoped="" ref="0x7ff8a4ee29d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7ff8a4ed6020" loc="51:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ff8a4ed6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7ff8a4ed6370"/>
        <function-ref name="getHeader" scoped="" ref="0x7ff8a4ed64f8"/>
        <function-ref name="getMetadata" scoped="" ref="0x7ff8a4ed6680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x7ff8a4ee5a78" loc="44:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7ff8a4ee5a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7ff8a4ee5dc8"/>
        <function-ref name="rfOff" scoped="" ref="0x7ff8a4eeb020"/>
        <function-ref name="rxOn" scoped="" ref="0x7ff8a4eeb1a8"/>
        <function-ref name="startVReg" scoped="" ref="0x7ff8a4eeb330"/>
        <function-ref name="stopVReg" scoped="" ref="0x7ff8a4eeb4b8"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7ff8a4eeb640"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7ff8a4eeb7c8"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7ff8a4eeb950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7ff8a4eda518" loc="49:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7ff8a4eda518"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7ff8a4eda868"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7ff8a4eda9f0"/>
        <function-ref name="led1On" scoped="" ref="0x7ff8a4edab78"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7ff8a4edad00"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7ff8a4ed9020"/>
        <function-ref name="get" scoped="" ref="0x7ff8a4ed91a8"/>
        <function-ref name="led1Off" scoped="" ref="0x7ff8a4ed9330"/>
        <function-ref name="led2Off" scoped="" ref="0x7ff8a4ed9950"/>
        <function-ref name="set" scoped="" ref="0x7ff8a4ed94b8"/>
        <function-ref name="led0On" scoped="" ref="0x7ff8a4ed9640"/>
        <function-ref name="led2On" scoped="" ref="0x7ff8a4ed97c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7ff8a4eed798" loc="43:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ff8a4eed798"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff8a4eedae8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff8a4eedc70"/>
        <function-ref name="request" scoped="" ref="0x7ff8a4eeddf8"/>
        <function-ref name="granted" scoped="" ref="0x7ff8a4eec020"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff8a4eec1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x7ff8a4ecb3e8" loc="52:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControlState" scoped="" ref="0x7ff8a4ecb3e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7ff8a4ecb838"/>
        <function-ref name="toIdle" scoped="" ref="0x7ff8a4ecb9c0"/>
        <function-ref name="isState" scoped="" ref="0x7ff8a4ecbb48"/>
        <function-ref name="isIdle" scoped="" ref="0x7ff8a4ecbcd0"/>
        <function-ref name="requestState" scoped="" ref="0x7ff8a4ecbe58"/>
        <function-ref name="forceState" scoped="" ref="0x7ff8a4ed5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x7ff8a4ec7988" loc="76:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDone_task" scoped="" ref="0x7ff8a4ec7988"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ff8a4ec7cd8"/>
        <function-ref name="runTask" scoped="" ref="0x7ff8a4ec7e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x7ff8a4ec8b30" loc="75:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDone_task" scoped="" ref="0x7ff8a4ec8b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ff8a4ec8e80"/>
        <function-ref name="runTask" scoped="" ref="0x7ff8a4ec7030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x7ff8a4ecac00" loc="74:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDone_task" scoped="" ref="0x7ff8a4ecac00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ff8a4ec8020"/>
        <function-ref name="runTask" scoped="" ref="0x7ff8a4ec81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7ff8a4e73aa8" loc="45:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7ff8a4e73aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7ff8a4e73df8"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7ff8a4e7f020"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7ff8a4e7f1a8"/>
        <function-ref name="syncDone" scoped="" ref="0x7ff8a4e7f330"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7ff8a4e7f4b8"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7ff8a4e7f640"/>
        <function-ref name="setChannel" scoped="" ref="0x7ff8a4e7f7c8"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7ff8a4e7f950"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7ff8a4e7fad8"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7ff8a4e7fc60"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7ff8a4e7fde8"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7ff8a4e7e020"/>
        <function-ref name="sync" scoped="" ref="0x7ff8a4e7e1a8"/>
        <function-ref name="getChannel" scoped="" ref="0x7ff8a4e7e430"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7ff8a4e7e5b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7ff8a4e71c78" loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7ff8a4e71c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a4e707e8"/>
        <function-ref name="readDone" scoped="" ref="0x7ff8a4e70c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7ff8a4e7e8b0" loc="46:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7ff8a4e7e8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7ff8a4e7ec00"/>
        <function-ref name="rfOff" scoped="" ref="0x7ff8a4e7ed88"/>
        <function-ref name="rxOn" scoped="" ref="0x7ff8a4e71020"/>
        <function-ref name="startVReg" scoped="" ref="0x7ff8a4e711a8"/>
        <function-ref name="stopVReg" scoped="" ref="0x7ff8a4e71330"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7ff8a4e714b8"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7ff8a4e71640"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7ff8a4e717c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ff8a4e83b80" loc="44:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ff8a4e83b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff8a4e80020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff8a4e801a8"/>
        <function-ref name="request" scoped="" ref="0x7ff8a4e80330"/>
        <function-ref name="granted" scoped="" ref="0x7ff8a4e804b8"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff8a4e80640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7ff8a4e6a328" loc="46:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7ff8a4e6a328"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7ff8a4e6a678"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7ff8a4e6a800"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7ff8a4e6a988"/>
        <function-ref name="syncDone" scoped="" ref="0x7ff8a4e6ab10"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7ff8a4e6ac98"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7ff8a4e6ae20"/>
        <function-ref name="setChannel" scoped="" ref="0x7ff8a4e69020"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7ff8a4e691a8"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7ff8a4e69330"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7ff8a4e694b8"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7ff8a4e69640"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7ff8a4e697c8"/>
        <function-ref name="sync" scoped="" ref="0x7ff8a4e69950"/>
        <function-ref name="getChannel" scoped="" ref="0x7ff8a4e69bd8"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7ff8a4e69d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x7ff8a4e449d0" loc="66:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7ff8a4e449d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a4e44d20"/>
        <function-ref name="write" scoped="" ref="0x7ff8a4e43020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x7ff8a4e627f0" loc="50:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7ff8a4e627f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7ff8a4e62b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x7ff8a4e63060" loc="52:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StartupTimer" scoped="" ref="0x7ff8a4e63060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff8a5294020"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff8a5294378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff8a6018020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ff8a4e5b690"/>
        <function-ref name="fired" scoped="" ref="0x7ff8a4e61738"/>
        <function-ref name="startAt" scoped="" ref="0x7ff8a4e5b088"/>
        <function-ref name="isRunning" scoped="" ref="0x7ff8a4e61bc0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7ff8a4e5bb18"/>
        <function-ref name="start" scoped="" ref="0x7ff8a4e63db0"/>
        <function-ref name="stop" scoped="" ref="0x7ff8a4e612b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x7ff8a4e478a8" loc="64:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7ff8a4e478a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a4e47bf8"/>
        <function-ref name="write" scoped="" ref="0x7ff8a4e47d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x7ff8a4e581b0" loc="54:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7ff8a4e581b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a4e58500"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a4e58688"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a4e58810"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a4e58998"/>
        <function-ref name="get" scoped="" ref="0x7ff8a4e58b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a4e58ca8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a4e58e30"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a4e57020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7ff8a4e674d0" loc="48:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7ff8a4e674d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a4e66088"/>
        <function-ref name="readDone" scoped="" ref="0x7ff8a4e664d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x7ff8a4e323f0" loc="126:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="syncDone" scoped="" ref="0x7ff8a4e323f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ff8a4e32740"/>
        <function-ref name="runTask" scoped="" ref="0x7ff8a4e328c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x7ff8a4e433a8" loc="67:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7ff8a4e433a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a4e436f8"/>
        <function-ref name="write" scoped="" ref="0x7ff8a4e43880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7ff8a4e43c18" loc="68:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7ff8a4e43c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a4e42020"/>
        <function-ref name="write" scoped="" ref="0x7ff8a4e421a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x7ff8a4e48708" loc="62:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7ff8a4e48708"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a4e48a58"/>
        <function-ref name="write" scoped="" ref="0x7ff8a4e48be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7ff8a4e4d170" loc="57:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7ff8a4e4d170"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7ff8a4e4d4c0"/>
        <function-ref name="changed" scoped="" ref="0x7ff8a4e4d648"/>
        <function-ref name="amGroup" scoped="" ref="0x7ff8a4e4d7d0"/>
        <function-ref name="setAddress" scoped="" ref="0x7ff8a4e4d958"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7ff8a4e59020" loc="53:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7ff8a4e59020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a4e59370"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a4e594f8"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a4e59680"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a4e59808"/>
        <function-ref name="get" scoped="" ref="0x7ff8a4e59990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a4e59b18"/>
        <function-ref name="set" scoped="" ref="0x7ff8a4e59ca0"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a4e59e28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x7ff8a4e413c0" loc="71:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7ff8a4e413c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff8a4e41910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x7ff8a4e57378" loc="55:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7ff8a4e57378"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a4e576c8"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a4e57850"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a4e579d8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a4e57b60"/>
        <function-ref name="get" scoped="" ref="0x7ff8a4e57ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a4e57e70"/>
        <function-ref name="set" scoped="" ref="0x7ff8a4e56020"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a4e561a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ff8a4e6b020" loc="44:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ff8a4e6b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff8a4e6b370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7ff8a4e44158" loc="65:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7ff8a4e44158"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a4e444a8"/>
        <function-ref name="write" scoped="" ref="0x7ff8a4e44630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x7ff8a4e41ca0" loc="72:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7ff8a4e41ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff8a4e40020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7ff8a4e403b0" loc="74:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7ff8a4e403b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff8a4e40700"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff8a4e40888"/>
        <function-ref name="request" scoped="" ref="0x7ff8a4e40a10"/>
        <function-ref name="granted" scoped="" ref="0x7ff8a4e40b98"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff8a4e40d20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x7ff8a4e3ee50" loc="76:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncResource" scoped="" ref="0x7ff8a4e3ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff8a4e3d1e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff8a4e3d370"/>
        <function-ref name="request" scoped="" ref="0x7ff8a4e3d4f8"/>
        <function-ref name="granted" scoped="" ref="0x7ff8a4e3d680"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff8a4e3d808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7ff8a4e68080" loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7ff8a4e68080"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7ff8a4e683d0"/>
        <function-ref name="rfOff" scoped="" ref="0x7ff8a4e68558"/>
        <function-ref name="rxOn" scoped="" ref="0x7ff8a4e686e0"/>
        <function-ref name="startVReg" scoped="" ref="0x7ff8a4e68868"/>
        <function-ref name="stopVReg" scoped="" ref="0x7ff8a4e689f0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7ff8a4e68b78"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7ff8a4e68d00"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7ff8a4e67020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x7ff8a4e47020" loc="63:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7ff8a4e47020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a4e47370"/>
        <function-ref name="write" scoped="" ref="0x7ff8a4e474f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x7ff8a4e46e60" loc="61:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7ff8a4e46e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a4e481e8"/>
        <function-ref name="write" scoped="" ref="0x7ff8a4e48370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x7ff8a4e3f460" loc="69:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7ff8a4e3f460"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff8a4e3f7b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7ff8a4e3dac0" loc="78:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7ff8a4e3dac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7ff8a4e3de10"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7ff8a4e3c020"/>
        <function-ref name="led1On" scoped="" ref="0x7ff8a4e3c1a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7ff8a4e3c330"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7ff8a4e3c4b8"/>
        <function-ref name="get" scoped="" ref="0x7ff8a4e3c640"/>
        <function-ref name="led1Off" scoped="" ref="0x7ff8a4e3c7c8"/>
        <function-ref name="led2Off" scoped="" ref="0x7ff8a4e3cde8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a4e3c950"/>
        <function-ref name="led0On" scoped="" ref="0x7ff8a4e3cad8"/>
        <function-ref name="led2On" scoped="" ref="0x7ff8a4e3cc60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x7ff8a4e33598" loc="125:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sync" scoped="" ref="0x7ff8a4e33598"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ff8a4e338e8"/>
        <function-ref name="runTask" scoped="" ref="0x7ff8a4e33a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ff8a4e6b650" loc="45:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ff8a4e6b650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff8a4e6b9a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff8a4e6bb28"/>
        <function-ref name="request" scoped="" ref="0x7ff8a4e6bcb0"/>
        <function-ref name="granted" scoped="" ref="0x7ff8a4e6be38"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff8a4e6a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x7ff8a4e54958" loc="60:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7ff8a4e54958"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a4e54ca8"/>
        <function-ref name="write" scoped="" ref="0x7ff8a4e54e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x7ff8a4e54020" loc="59:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7ff8a4e54020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a4e54470"/>
        <function-ref name="write" scoped="" ref="0x7ff8a4e545f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x7ff8a4e52b78" loc="56:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7ff8a4e52b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff8a4e55020"/>
        <function-ref name="disable" scoped="" ref="0x7ff8a4e551a8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7ff8a4e55330"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7ff8a4e554b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x7ff8a4e3e140" loc="75:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RssiResource" scoped="" ref="0x7ff8a4e3e140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff8a4e3e490"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff8a4e3e618"/>
        <function-ref name="request" scoped="" ref="0x7ff8a4e3e7a0"/>
        <function-ref name="granted" scoped="" ref="0x7ff8a4e3e928"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff8a4e3eab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x7ff8a4e3fb38" loc="70:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7ff8a4e3fb38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff8a4e41020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ff8a4dbe3e0" loc="45:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ff8a4dbe3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff8a4dbe730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7ff8a4dbed58" loc="46:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7ff8a4dbed58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff8a5294020"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff8a5294378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff8a6018020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ff8a4dbb410"/>
        <function-ref name="fired" scoped="" ref="0x7ff8a4dbc4a8"/>
        <function-ref name="startAt" scoped="" ref="0x7ff8a4dbcdb8"/>
        <function-ref name="isRunning" scoped="" ref="0x7ff8a4dbc930"/>
        <function-ref name="getAlarm" scoped="" ref="0x7ff8a4dbb898"/>
        <function-ref name="start" scoped="" ref="0x7ff8a4dbdaf8"/>
        <function-ref name="stop" scoped="" ref="0x7ff8a4dbc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ff8a4db77d8" loc="42:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ff8a4db77d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff8a4db7b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7ff8a4ccb060" loc="43:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7ff8a4ccb060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff8a5294020"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff8a5294378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff8a6018020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ff8a4cc8690"/>
        <function-ref name="fired" scoped="" ref="0x7ff8a4cca738"/>
        <function-ref name="startAt" scoped="" ref="0x7ff8a4cc8088"/>
        <function-ref name="isRunning" scoped="" ref="0x7ff8a4ccabc0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7ff8a4cc8b18"/>
        <function-ref name="start" scoped="" ref="0x7ff8a4ccbdb0"/>
        <function-ref name="stop" scoped="" ref="0x7ff8a4cca2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7ff8a3563b80" loc="44:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7ff8a3563b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff8a5294020"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff8a5294378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff8a6018020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ff8a3560238"/>
        <function-ref name="fired" scoped="" ref="0x7ff8a35612b0"/>
        <function-ref name="startAt" scoped="" ref="0x7ff8a3561bc0"/>
        <function-ref name="isRunning" scoped="" ref="0x7ff8a3561738"/>
        <function-ref name="getAlarm" scoped="" ref="0x7ff8a35606c0"/>
        <function-ref name="start" scoped="" ref="0x7ff8a35628f8"/>
        <function-ref name="stop" scoped="" ref="0x7ff8a3562dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ff8a3563398" loc="43:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ff8a3563398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff8a35636e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7ff8a355c608" loc="44:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7ff8a355c608"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff8a5294020"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff8a5294378"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ff8a3545c88"/>
        <function-ref name="fired" scoped="" ref="0x7ff8a3547d08"/>
        <function-ref name="startAt" scoped="" ref="0x7ff8a3545680"/>
        <function-ref name="isRunning" scoped="" ref="0x7ff8a35451f8"/>
        <function-ref name="getAlarm" scoped="" ref="0x7ff8a3544150"/>
        <function-ref name="start" scoped="" ref="0x7ff8a35473a8"/>
        <function-ref name="stop" scoped="" ref="0x7ff8a3547880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ff8a355dd98" loc="43:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ff8a355dd98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff8a355c170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7ff8a3530bd8" loc="41:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7ff8a3530bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff8a352f020"/>
        <function-ref name="setEvent" scoped="" ref="0x7ff8a352f1a8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ff8a352f330"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ff8a352f4b8"/>
        <function-ref name="fired" scoped="" ref="0x7ff8a352f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7ff8a3532288" loc="39:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7ff8a3532288"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff8a35325d8"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ff8a3532760"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff8a35328e8"/>
        <function-ref name="get" scoped="" ref="0x7ff8a3532a70"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff8a3532bf8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff8a3532d80"/>
        <function-ref name="getMode" scoped="" ref="0x7ff8a3531020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff8a35311a8"/>
        <function-ref name="overflow" scoped="" ref="0x7ff8a3531330"/>
        <function-ref name="setMode" scoped="" ref="0x7ff8a35314b8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7ff8a3531640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7ff8a35318c8" loc="40:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7ff8a35318c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ff8a3531c18"/>
        <function-ref name="getControl" scoped="" ref="0x7ff8a3531da0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff8a3530020"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ff8a35301a8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ff8a3530330"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff8a35304b8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ff8a3530640"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ff8a35307c8"/>
        <function-ref name="setControl" scoped="" ref="0x7ff8a3530950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7ff8a4d961c8" loc="52:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7ff8a4d961c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff8a4d96518"/>
        <function-ref name="setEvent" scoped="" ref="0x7ff8a4d966a0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ff8a4d96828"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ff8a4d969b0"/>
        <function-ref name="fired" scoped="" ref="0x7ff8a4d96b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7ff8a4d9dba8" loc="50:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7ff8a4d9dba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff8a4d9a020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ff8a4d9a1a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff8a4d9a330"/>
        <function-ref name="get" scoped="" ref="0x7ff8a4d9a4b8"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff8a4d9a640"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff8a4d9a7c8"/>
        <function-ref name="getMode" scoped="" ref="0x7ff8a4d9a950"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff8a4d9aad8"/>
        <function-ref name="overflow" scoped="" ref="0x7ff8a4d9ac60"/>
        <function-ref name="setMode" scoped="" ref="0x7ff8a4d9ade8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7ff8a4d99020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7ff8a4d99850" loc="51:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7ff8a4d99850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ff8a4d99ba0"/>
        <function-ref name="getControl" scoped="" ref="0x7ff8a4d99d28"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff8a4d97020"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ff8a4d971a8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ff8a4d97330"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff8a4d974b8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ff8a4d97640"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ff8a4d977c8"/>
        <function-ref name="setControl" scoped="" ref="0x7ff8a4d97950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7ff8a3526430" loc="49:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7ff8a3526430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff8a3526780"/>
        <function-ref name="setEvent" scoped="" ref="0x7ff8a3526908"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ff8a3526a90"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ff8a3526c18"/>
        <function-ref name="fired" scoped="" ref="0x7ff8a3526da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7ff8a352aad8" loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7ff8a352aad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff8a352ae28"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ff8a3528020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff8a35281a8"/>
        <function-ref name="get" scoped="" ref="0x7ff8a3528330"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff8a35284b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff8a3528640"/>
        <function-ref name="getMode" scoped="" ref="0x7ff8a35287c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff8a3528950"/>
        <function-ref name="overflow" scoped="" ref="0x7ff8a3528ad8"/>
        <function-ref name="setMode" scoped="" ref="0x7ff8a3528c60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7ff8a3528de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7ff8a352db58" loc="46:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7ff8a352db58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff8a5294020"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff8a5294378"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ff8a352a238"/>
        <function-ref name="fired" scoped="" ref="0x7ff8a352b2b0"/>
        <function-ref name="startAt" scoped="" ref="0x7ff8a352bbc0"/>
        <function-ref name="isRunning" scoped="" ref="0x7ff8a352b738"/>
        <function-ref name="getAlarm" scoped="" ref="0x7ff8a352a6c0"/>
        <function-ref name="start" scoped="" ref="0x7ff8a352c8f8"/>
        <function-ref name="stop" scoped="" ref="0x7ff8a352cdd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ff8a352d330" loc="45:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ff8a352d330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff8a352d680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7ff8a35270c0" loc="48:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7ff8a35270c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ff8a3527410"/>
        <function-ref name="getControl" scoped="" ref="0x7ff8a3527598"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff8a3527720"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ff8a35278a8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ff8a3527a30"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff8a3527bb8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ff8a3527d40"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ff8a3526020"/>
        <function-ref name="setControl" scoped="" ref="0x7ff8a35261a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7ff8a4d44630" loc="43:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7ff8a4d44630"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff8a5294020"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff8a5294378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff8a6018020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ff8a4d493a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff8a4d49cb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff8a4d49830"/>
        <function-ref name="overflow" scoped="" ref="0x7ff8a4d48190"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x7ff8a4d41420" loc="43:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7ff8a4d41420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff8a5294020"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff8a5294378"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ff8a4d3f1d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff8a4d3fae0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff8a4d3f658"/>
        <function-ref name="overflow" scoped="" ref="0x7ff8a4d3e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7ff8a4d2d928" loc="45:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7ff8a4d2d928"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff8a4d2dc78"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ff8a4d2de00"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff8a4d2c020"/>
        <function-ref name="get" scoped="" ref="0x7ff8a4d2c1a8"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff8a4d2c330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff8a4d2c4b8"/>
        <function-ref name="getMode" scoped="" ref="0x7ff8a4d2c640"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff8a4d2c7c8"/>
        <function-ref name="overflow" scoped="" ref="0x7ff8a4d2c950"/>
        <function-ref name="setMode" scoped="" ref="0x7ff8a4d2cad8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7ff8a4d2cc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7ff8a4d3d980" loc="44:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7ff8a4d3d980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff8a5294020"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff8a5294378"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ff8a4d3b730"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff8a4d2d088"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff8a4d3bbb8"/>
        <function-ref name="overflow" scoped="" ref="0x7ff8a4d2d510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7ff8a4d0cb10" loc="63:/home/paul/wsnpr/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7ff8a4d0cb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff8a5294020"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff8a5294378"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ff8a4d0b8f8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff8a4d09230"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff8a4d0bd80"/>
        <function-ref name="overflow" scoped="" ref="0x7ff8a4d096b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7ff8a4d28878" loc="62:/home/paul/wsnpr/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7ff8a4d28878"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff8a5294020"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff8a5294378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff8a6018020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ff8a4d0e660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff8a4d0c020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff8a4d0eae8"/>
        <function-ref name="overflow" scoped="" ref="0x7ff8a4d0c4a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7ff8a3542420" loc="61:/home/paul/wsnpr/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7ff8a3542420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff8a5294020"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff8a5294378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff8a6018020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ff8a3540ab0"/>
        <function-ref name="fired" scoped="" ref="0x7ff8a3541b30"/>
        <function-ref name="startAt" scoped="" ref="0x7ff8a35404a8"/>
        <function-ref name="isRunning" scoped="" ref="0x7ff8a3540020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7ff8a353e020"/>
        <function-ref name="start" scoped="" ref="0x7ff8a35411d0"/>
        <function-ref name="stop" scoped="" ref="0x7ff8a35416a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7ff8a353c860" loc="73:/home/paul/wsnpr/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7ff8a353c860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff8a5294020"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff8a5294378"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ff8a3538020"/>
        <function-ref name="fired" scoped="" ref="0x7ff8a353a020"/>
        <function-ref name="startAt" scoped="" ref="0x7ff8a353a930"/>
        <function-ref name="isRunning" scoped="" ref="0x7ff8a353a4a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x7ff8a35384a8"/>
        <function-ref name="start" scoped="" ref="0x7ff8a353b5e0"/>
        <function-ref name="stop" scoped="" ref="0x7ff8a353bab8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7ff8a353e648" loc="68:/home/paul/wsnpr/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7ff8a353e648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff8a5294020"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff8a5294378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff8a6018020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ff8a353d3f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff8a353dd00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff8a353d878"/>
        <function-ref name="overflow" scoped="" ref="0x7ff8a353c1f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x7ff8a4cc2020" loc="44:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7ff8a4cc2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a4cc2370"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a4cc24f8"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a4cc2680"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a4cc2808"/>
        <function-ref name="get" scoped="" ref="0x7ff8a4cc2990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a4cc2b18"/>
        <function-ref name="set" scoped="" ref="0x7ff8a4cc2ca0"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a4cc2e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x7ff8a4cc11b8" loc="45:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7ff8a4cc11b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a4cc1508"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a4cc1690"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a4cc1818"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a4cc19a0"/>
        <function-ref name="get" scoped="" ref="0x7ff8a4cc1b28"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a4cc1cb0"/>
        <function-ref name="set" scoped="" ref="0x7ff8a4cc1e38"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a4cc0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x7ff8a4cc0378" loc="46:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7ff8a4cc0378"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a4cc06c8"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a4cc0850"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a4cc09d8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a4cc0b60"/>
        <function-ref name="get" scoped="" ref="0x7ff8a4cc0ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a4cc0e70"/>
        <function-ref name="set" scoped="" ref="0x7ff8a4cbf020"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a4cbf1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x7ff8a4cc4e20" loc="43:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7ff8a4cc4e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a4cc31a8"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a4cc3330"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a4cc34b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a4cc3640"/>
        <function-ref name="get" scoped="" ref="0x7ff8a4cc37c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a4cc3950"/>
        <function-ref name="set" scoped="" ref="0x7ff8a4cc3ad8"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a4cc3c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x7ff8a4cbe688" loc="48:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7ff8a4cbe688"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a4cbe9d8"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a4cbeb60"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a4cbece8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a4cbee70"/>
        <function-ref name="get" scoped="" ref="0x7ff8a4cbd020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a4cbd1a8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a4cbd330"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a4cbd4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x7ff8a4dbfc28" loc="42:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7ff8a4dbfc28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a4cc4020"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a4cc41a8"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a4cc4330"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a4cc44b8"/>
        <function-ref name="get" scoped="" ref="0x7ff8a4cc4640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a4cc47c8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a4cc4950"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a4cc4ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x7ff8a4cbf4f0" loc="47:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7ff8a4cbf4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a4cbf840"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a4cbf9c8"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a4cbfb50"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a4cbfcd8"/>
        <function-ref name="get" scoped="" ref="0x7ff8a4cbfe60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a4cbe020"/>
        <function-ref name="set" scoped="" ref="0x7ff8a4cbe1a8"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a4cbe330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7ff8a4cbb908" loc="44:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7ff8a4cbb908"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a4cbbc58"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a4cbbde0"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a4cba020"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a4cba1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a4cba330"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a4cba4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a4cba640"/>
        <function-ref name="get" scoped="" ref="0x7ff8a4cba7c8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a4cba950"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a4cbaad8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a4cbac60"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a4cbade8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a4cb9020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a4cb92a8"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a4cb9430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7ff8a4cbc7d0" loc="43:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7ff8a4cbc7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a4cbcb20"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a4cbcca8"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a4cbce30"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a4cbb020"/>
        <function-ref name="get" scoped="" ref="0x7ff8a4cbb1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a4cbb330"/>
        <function-ref name="set" scoped="" ref="0x7ff8a4cbb4b8"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a4cbb640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7ff8a4cb5120" loc="44:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7ff8a4cb5120"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a4cb5470"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a4cb55f8"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a4cb5780"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a4cb5908"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a4cb5a90"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a4cb5c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a4cb5da0"/>
        <function-ref name="get" scoped="" ref="0x7ff8a4cb4020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a4cb41a8"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a4cb4330"/>
        <function-ref name="set" scoped="" ref="0x7ff8a4cb44b8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a4cb4640"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a4cb47c8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a4cb4a50"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a4cb4bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7ff8a4cb6020" loc="43:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7ff8a4cb6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a4cb6370"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a4cb64f8"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a4cb6680"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a4cb6808"/>
        <function-ref name="get" scoped="" ref="0x7ff8a4cb6990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a4cb6b18"/>
        <function-ref name="set" scoped="" ref="0x7ff8a4cb6ca0"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a4cb6e28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7ff8a4cb1908" loc="44:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7ff8a4cb1908"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a4cb1c58"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a4cb1de0"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a4cb0020"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a4cb01a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a4cb0330"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a4cb04b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a4cb0640"/>
        <function-ref name="get" scoped="" ref="0x7ff8a4cb07c8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a4cb0950"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a4cb0ad8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a4cb0c60"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a4cb0de8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a4caf020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a4caf2a8"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a4caf430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7ff8a4cb2720" loc="43:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7ff8a4cb2720"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a4cb2a70"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a4cb2bf8"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a4cb2d80"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a4cb1020"/>
        <function-ref name="get" scoped="" ref="0x7ff8a4cb11a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a4cb1330"/>
        <function-ref name="set" scoped="" ref="0x7ff8a4cb14b8"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a4cb1640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7ff8a4cac120" loc="44:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7ff8a4cac120"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a4cac470"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a4cac5f8"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a4cac780"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a4cac908"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a4caca90"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a4cacc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a4cacda0"/>
        <function-ref name="get" scoped="" ref="0x7ff8a4cab020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a4cab1a8"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a4cab330"/>
        <function-ref name="set" scoped="" ref="0x7ff8a4cab4b8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a4cab640"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a4cab7c8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a4caba50"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a4cabbd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7ff8a4cad020" loc="43:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7ff8a4cad020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a4cad370"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a4cad4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a4cad680"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a4cad808"/>
        <function-ref name="get" scoped="" ref="0x7ff8a4cad990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a4cadb18"/>
        <function-ref name="set" scoped="" ref="0x7ff8a4cadca0"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a4cade28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7ff8a4ca8908" loc="44:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7ff8a4ca8908"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a4ca8c58"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a4ca8de0"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a4ca7020"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a4ca71a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a4ca7330"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a4ca74b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a4ca7640"/>
        <function-ref name="get" scoped="" ref="0x7ff8a4ca77c8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a4ca7950"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a4ca7ad8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a4ca7c60"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a4ca7de8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a4ca6020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a4ca62a8"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a4ca6430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7ff8a4ca9720" loc="43:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7ff8a4ca9720"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a4ca9a70"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a4ca9bf8"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a4ca9d80"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a4ca8020"/>
        <function-ref name="get" scoped="" ref="0x7ff8a4ca81a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a4ca8330"/>
        <function-ref name="set" scoped="" ref="0x7ff8a4ca84b8"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a4ca8640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7ff8a4ca3120" loc="44:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7ff8a4ca3120"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a4ca3470"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a4ca35f8"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a4ca3780"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a4ca3908"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a4ca3a90"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a4ca3c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a4ca3da0"/>
        <function-ref name="get" scoped="" ref="0x7ff8a4ca1020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a4ca11a8"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a4ca1330"/>
        <function-ref name="set" scoped="" ref="0x7ff8a4ca14b8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a4ca1640"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a4ca17c8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a4ca1a50"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a4ca1bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7ff8a4ca4020" loc="43:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7ff8a4ca4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a4ca4370"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a4ca44f8"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a4ca4680"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a4ca4808"/>
        <function-ref name="get" scoped="" ref="0x7ff8a4ca4990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a4ca4b18"/>
        <function-ref name="set" scoped="" ref="0x7ff8a4ca4ca0"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a4ca4e28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7ff8a4c9e908" loc="44:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7ff8a4c9e908"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a4c9ec58"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a4c9ede0"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a4c9d020"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a4c9d1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a4c9d330"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a4c9d4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a4c9d640"/>
        <function-ref name="get" scoped="" ref="0x7ff8a4c9d7c8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a4c9d950"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a4c9dad8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a4c9dc60"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a4c9dde8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a4c9c020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a4c9c2a8"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a4c9c430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7ff8a4c9f720" loc="43:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7ff8a4c9f720"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a4c9fa70"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a4c9fbf8"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a4c9fd80"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a4c9e020"/>
        <function-ref name="get" scoped="" ref="0x7ff8a4c9e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a4c9e330"/>
        <function-ref name="set" scoped="" ref="0x7ff8a4c9e4b8"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a4c9e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x7ff8a4c878d0" loc="42:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7ff8a4c878d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7ff8a4c87c20"/>
        <function-ref name="disable" scoped="" ref="0x7ff8a4c87da8"/>
        <function-ref name="captured" scoped="" ref="0x7ff8a4c8a020"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7ff8a4c8a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x7ff8a4c8a578" loc="43:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7ff8a4c8a578"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff8a4c8a8c8"/>
        <function-ref name="disable" scoped="" ref="0x7ff8a4c8aa50"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7ff8a4c8abd8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7ff8a4c8ad60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x7ff8a4c86190" loc="44:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7ff8a4c86190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff8a4c864e0"/>
        <function-ref name="disable" scoped="" ref="0x7ff8a4c86668"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7ff8a4c867f0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7ff8a4c86978"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Capture" ref="0x7ff8a4c6f2a8" loc="42:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Capture" scoped="" ref="0x7ff8a4c6f2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff8a4c6f5f8"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7ff8a4c6f780"/>
        <function-ref name="captured" scoped="" ref="0x7ff8a4c6f908"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff8a4c6fa90"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff8a4c6fc18"/>
        <function-ref name="setEdge" scoped="" ref="0x7ff8a4c6fda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7ff8a4c83450" loc="40:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7ff8a4c83450"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7ff8a4c837a0"/>
        <function-ref name="disable" scoped="" ref="0x7ff8a4c83928"/>
        <function-ref name="captured" scoped="" ref="0x7ff8a4c83ab0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7ff8a4c83c38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7ff8a4c70020" loc="41:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7ff8a4c70020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ff8a4c70370"/>
        <function-ref name="getControl" scoped="" ref="0x7ff8a4c704f8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff8a4c70680"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ff8a4c70808"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ff8a4c70990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff8a4c70b18"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ff8a4c70ca0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ff8a4c70e28"/>
        <function-ref name="setControl" scoped="" ref="0x7ff8a4c6f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x7ff8a4c6e0a0" loc="43:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7ff8a4c6e0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a4c6e3f0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a4c6e578"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a4c6e700"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a4c6e888"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a4c6ea10"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a4c6eb98"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a4c6ed20"/>
        <function-ref name="get" scoped="" ref="0x7ff8a4c6d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a4c6d1a8"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a4c6d330"/>
        <function-ref name="set" scoped="" ref="0x7ff8a4c6d4b8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a4c6d640"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a4c6d7c8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a4c6da50"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a4c6dbd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7ff8a4c60b88" loc="46:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7ff8a4c60b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff8a4c5f020"/>
        <function-ref name="fired" scoped="" ref="0x7ff8a4c5f1a8"/>
        <function-ref name="disable" scoped="" ref="0x7ff8a4c5f330"/>
        <function-ref name="edge" scoped="" ref="0x7ff8a4c5f4b8"/>
        <function-ref name="enable" scoped="" ref="0x7ff8a4c5f640"/>
        <function-ref name="getValue" scoped="" ref="0x7ff8a4c5f7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7ff8a4c55b88" loc="58:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7ff8a4c55b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff8a4c54020"/>
        <function-ref name="fired" scoped="" ref="0x7ff8a4c541a8"/>
        <function-ref name="disable" scoped="" ref="0x7ff8a4c54330"/>
        <function-ref name="edge" scoped="" ref="0x7ff8a4c544b8"/>
        <function-ref name="enable" scoped="" ref="0x7ff8a4c54640"/>
        <function-ref name="getValue" scoped="" ref="0x7ff8a4c547c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7ff8a4c5db88" loc="49:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7ff8a4c5db88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff8a4c5c020"/>
        <function-ref name="fired" scoped="" ref="0x7ff8a4c5c1a8"/>
        <function-ref name="disable" scoped="" ref="0x7ff8a4c5c330"/>
        <function-ref name="edge" scoped="" ref="0x7ff8a4c5c4b8"/>
        <function-ref name="enable" scoped="" ref="0x7ff8a4c5c640"/>
        <function-ref name="getValue" scoped="" ref="0x7ff8a4c5c7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7ff8a4c5bb88" loc="53:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7ff8a4c5bb88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff8a4c5a020"/>
        <function-ref name="fired" scoped="" ref="0x7ff8a4c5a1a8"/>
        <function-ref name="disable" scoped="" ref="0x7ff8a4c5a330"/>
        <function-ref name="edge" scoped="" ref="0x7ff8a4c5a4b8"/>
        <function-ref name="enable" scoped="" ref="0x7ff8a4c5a640"/>
        <function-ref name="getValue" scoped="" ref="0x7ff8a4c5a7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7ff8a4c66b88" loc="44:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7ff8a4c66b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff8a4c61020"/>
        <function-ref name="fired" scoped="" ref="0x7ff8a4c611a8"/>
        <function-ref name="disable" scoped="" ref="0x7ff8a4c61330"/>
        <function-ref name="edge" scoped="" ref="0x7ff8a4c614b8"/>
        <function-ref name="enable" scoped="" ref="0x7ff8a4c61640"/>
        <function-ref name="getValue" scoped="" ref="0x7ff8a4c617c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7ff8a4c57b88" loc="56:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7ff8a4c57b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff8a4c56020"/>
        <function-ref name="fired" scoped="" ref="0x7ff8a4c561a8"/>
        <function-ref name="disable" scoped="" ref="0x7ff8a4c56330"/>
        <function-ref name="edge" scoped="" ref="0x7ff8a4c564b8"/>
        <function-ref name="enable" scoped="" ref="0x7ff8a4c56640"/>
        <function-ref name="getValue" scoped="" ref="0x7ff8a4c567c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7ff8a4c5fb88" loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7ff8a4c5fb88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff8a4c5e020"/>
        <function-ref name="fired" scoped="" ref="0x7ff8a4c5e1a8"/>
        <function-ref name="disable" scoped="" ref="0x7ff8a4c5e330"/>
        <function-ref name="edge" scoped="" ref="0x7ff8a4c5e4b8"/>
        <function-ref name="enable" scoped="" ref="0x7ff8a4c5e640"/>
        <function-ref name="getValue" scoped="" ref="0x7ff8a4c5e7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7ff8a4c54b88" loc="59:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7ff8a4c54b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff8a4c53020"/>
        <function-ref name="fired" scoped="" ref="0x7ff8a4c531a8"/>
        <function-ref name="disable" scoped="" ref="0x7ff8a4c53330"/>
        <function-ref name="edge" scoped="" ref="0x7ff8a4c534b8"/>
        <function-ref name="enable" scoped="" ref="0x7ff8a4c53640"/>
        <function-ref name="getValue" scoped="" ref="0x7ff8a4c537c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7ff8a4c62b40" loc="42:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7ff8a4c62b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff8a4c67020"/>
        <function-ref name="fired" scoped="" ref="0x7ff8a4c671a8"/>
        <function-ref name="disable" scoped="" ref="0x7ff8a4c67330"/>
        <function-ref name="edge" scoped="" ref="0x7ff8a4c674b8"/>
        <function-ref name="enable" scoped="" ref="0x7ff8a4c67640"/>
        <function-ref name="getValue" scoped="" ref="0x7ff8a4c677c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7ff8a4c5ab88" loc="54:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7ff8a4c5ab88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff8a4c58020"/>
        <function-ref name="fired" scoped="" ref="0x7ff8a4c581a8"/>
        <function-ref name="disable" scoped="" ref="0x7ff8a4c58330"/>
        <function-ref name="edge" scoped="" ref="0x7ff8a4c584b8"/>
        <function-ref name="enable" scoped="" ref="0x7ff8a4c58640"/>
        <function-ref name="getValue" scoped="" ref="0x7ff8a4c587c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7ff8a4c61b88" loc="45:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7ff8a4c61b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff8a4c60020"/>
        <function-ref name="fired" scoped="" ref="0x7ff8a4c601a8"/>
        <function-ref name="disable" scoped="" ref="0x7ff8a4c60330"/>
        <function-ref name="edge" scoped="" ref="0x7ff8a4c604b8"/>
        <function-ref name="enable" scoped="" ref="0x7ff8a4c60640"/>
        <function-ref name="getValue" scoped="" ref="0x7ff8a4c607c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7ff8a4c56b88" loc="57:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7ff8a4c56b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff8a4c55020"/>
        <function-ref name="fired" scoped="" ref="0x7ff8a4c551a8"/>
        <function-ref name="disable" scoped="" ref="0x7ff8a4c55330"/>
        <function-ref name="edge" scoped="" ref="0x7ff8a4c554b8"/>
        <function-ref name="enable" scoped="" ref="0x7ff8a4c55640"/>
        <function-ref name="getValue" scoped="" ref="0x7ff8a4c557c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7ff8a4c5eb88" loc="48:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7ff8a4c5eb88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff8a4c5d020"/>
        <function-ref name="fired" scoped="" ref="0x7ff8a4c5d1a8"/>
        <function-ref name="disable" scoped="" ref="0x7ff8a4c5d330"/>
        <function-ref name="edge" scoped="" ref="0x7ff8a4c5d4b8"/>
        <function-ref name="enable" scoped="" ref="0x7ff8a4c5d640"/>
        <function-ref name="getValue" scoped="" ref="0x7ff8a4c5d7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7ff8a4c5cb88" loc="52:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7ff8a4c5cb88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff8a4c5b020"/>
        <function-ref name="fired" scoped="" ref="0x7ff8a4c5b1a8"/>
        <function-ref name="disable" scoped="" ref="0x7ff8a4c5b330"/>
        <function-ref name="edge" scoped="" ref="0x7ff8a4c5b4b8"/>
        <function-ref name="enable" scoped="" ref="0x7ff8a4c5b640"/>
        <function-ref name="getValue" scoped="" ref="0x7ff8a4c5b7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7ff8a4c67b88" loc="43:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7ff8a4c67b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff8a4c66020"/>
        <function-ref name="fired" scoped="" ref="0x7ff8a4c661a8"/>
        <function-ref name="disable" scoped="" ref="0x7ff8a4c66330"/>
        <function-ref name="edge" scoped="" ref="0x7ff8a4c664b8"/>
        <function-ref name="enable" scoped="" ref="0x7ff8a4c66640"/>
        <function-ref name="getValue" scoped="" ref="0x7ff8a4c667c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7ff8a4c58b88" loc="55:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7ff8a4c58b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff8a4c57020"/>
        <function-ref name="fired" scoped="" ref="0x7ff8a4c571a8"/>
        <function-ref name="disable" scoped="" ref="0x7ff8a4c57330"/>
        <function-ref name="edge" scoped="" ref="0x7ff8a4c574b8"/>
        <function-ref name="enable" scoped="" ref="0x7ff8a4c57640"/>
        <function-ref name="getValue" scoped="" ref="0x7ff8a4c577c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7ff8a4c4c878" loc="43:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7ff8a4c4c878"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff8a4c4cbc8"/>
        <function-ref name="fired" scoped="" ref="0x7ff8a4c4cd50"/>
        <function-ref name="disable" scoped="" ref="0x7ff8a4c4b020"/>
        <function-ref name="edge" scoped="" ref="0x7ff8a4c4b1a8"/>
        <function-ref name="enable" scoped="" ref="0x7ff8a4c4b330"/>
        <function-ref name="getValue" scoped="" ref="0x7ff8a4c4b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7ff8a4c42878" loc="55:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7ff8a4c42878"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff8a4c42bc8"/>
        <function-ref name="fired" scoped="" ref="0x7ff8a4c42d50"/>
        <function-ref name="disable" scoped="" ref="0x7ff8a4c41020"/>
        <function-ref name="edge" scoped="" ref="0x7ff8a4c411a8"/>
        <function-ref name="enable" scoped="" ref="0x7ff8a4c41330"/>
        <function-ref name="getValue" scoped="" ref="0x7ff8a4c414b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7ff8a4c49878" loc="46:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7ff8a4c49878"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff8a4c49bc8"/>
        <function-ref name="fired" scoped="" ref="0x7ff8a4c49d50"/>
        <function-ref name="disable" scoped="" ref="0x7ff8a4c48020"/>
        <function-ref name="edge" scoped="" ref="0x7ff8a4c481a8"/>
        <function-ref name="enable" scoped="" ref="0x7ff8a4c48330"/>
        <function-ref name="getValue" scoped="" ref="0x7ff8a4c484b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7ff8a4c47878" loc="50:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7ff8a4c47878"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff8a4c47bc8"/>
        <function-ref name="fired" scoped="" ref="0x7ff8a4c47d50"/>
        <function-ref name="disable" scoped="" ref="0x7ff8a4c46020"/>
        <function-ref name="edge" scoped="" ref="0x7ff8a4c461a8"/>
        <function-ref name="enable" scoped="" ref="0x7ff8a4c46330"/>
        <function-ref name="getValue" scoped="" ref="0x7ff8a4c464b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7ff8a4c4e878" loc="41:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7ff8a4c4e878"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff8a4c4ebc8"/>
        <function-ref name="fired" scoped="" ref="0x7ff8a4c4ed50"/>
        <function-ref name="disable" scoped="" ref="0x7ff8a4c4d020"/>
        <function-ref name="edge" scoped="" ref="0x7ff8a4c4d1a8"/>
        <function-ref name="enable" scoped="" ref="0x7ff8a4c4d330"/>
        <function-ref name="getValue" scoped="" ref="0x7ff8a4c4d4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7ff8a4c44878" loc="53:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7ff8a4c44878"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff8a4c44cc8"/>
        <function-ref name="fired" scoped="" ref="0x7ff8a4c44e50"/>
        <function-ref name="disable" scoped="" ref="0x7ff8a4c43020"/>
        <function-ref name="edge" scoped="" ref="0x7ff8a4c431a8"/>
        <function-ref name="enable" scoped="" ref="0x7ff8a4c43330"/>
        <function-ref name="getValue" scoped="" ref="0x7ff8a4c434b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7ff8a4c4b878" loc="44:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7ff8a4c4b878"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff8a4c4bbc8"/>
        <function-ref name="fired" scoped="" ref="0x7ff8a4c4bd50"/>
        <function-ref name="disable" scoped="" ref="0x7ff8a4c4a020"/>
        <function-ref name="edge" scoped="" ref="0x7ff8a4c4a1a8"/>
        <function-ref name="enable" scoped="" ref="0x7ff8a4c4a330"/>
        <function-ref name="getValue" scoped="" ref="0x7ff8a4c4a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7ff8a4c41878" loc="56:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7ff8a4c41878"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff8a4c41bc8"/>
        <function-ref name="fired" scoped="" ref="0x7ff8a4c41d50"/>
        <function-ref name="disable" scoped="" ref="0x7ff8a4c40020"/>
        <function-ref name="edge" scoped="" ref="0x7ff8a4c401a8"/>
        <function-ref name="enable" scoped="" ref="0x7ff8a4c40330"/>
        <function-ref name="getValue" scoped="" ref="0x7ff8a4c404b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7ff8a4c52928" loc="39:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7ff8a4c52928"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff8a4c52c78"/>
        <function-ref name="fired" scoped="" ref="0x7ff8a4c52e00"/>
        <function-ref name="disable" scoped="" ref="0x7ff8a4c4f020"/>
        <function-ref name="edge" scoped="" ref="0x7ff8a4c4f1a8"/>
        <function-ref name="enable" scoped="" ref="0x7ff8a4c4f330"/>
        <function-ref name="getValue" scoped="" ref="0x7ff8a4c4f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7ff8a4c46878" loc="51:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7ff8a4c46878"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff8a4c46bc8"/>
        <function-ref name="fired" scoped="" ref="0x7ff8a4c46d50"/>
        <function-ref name="disable" scoped="" ref="0x7ff8a4c45020"/>
        <function-ref name="edge" scoped="" ref="0x7ff8a4c451a8"/>
        <function-ref name="enable" scoped="" ref="0x7ff8a4c45330"/>
        <function-ref name="getValue" scoped="" ref="0x7ff8a4c454b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7ff8a4c4d878" loc="42:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7ff8a4c4d878"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff8a4c4dbc8"/>
        <function-ref name="fired" scoped="" ref="0x7ff8a4c4dd50"/>
        <function-ref name="disable" scoped="" ref="0x7ff8a4c4c020"/>
        <function-ref name="edge" scoped="" ref="0x7ff8a4c4c1a8"/>
        <function-ref name="enable" scoped="" ref="0x7ff8a4c4c330"/>
        <function-ref name="getValue" scoped="" ref="0x7ff8a4c4c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7ff8a4c43878" loc="54:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7ff8a4c43878"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff8a4c43bc8"/>
        <function-ref name="fired" scoped="" ref="0x7ff8a4c43d50"/>
        <function-ref name="disable" scoped="" ref="0x7ff8a4c42020"/>
        <function-ref name="edge" scoped="" ref="0x7ff8a4c421a8"/>
        <function-ref name="enable" scoped="" ref="0x7ff8a4c42330"/>
        <function-ref name="getValue" scoped="" ref="0x7ff8a4c424b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7ff8a4c4a878" loc="45:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7ff8a4c4a878"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff8a4c4abc8"/>
        <function-ref name="fired" scoped="" ref="0x7ff8a4c4ad50"/>
        <function-ref name="disable" scoped="" ref="0x7ff8a4c49020"/>
        <function-ref name="edge" scoped="" ref="0x7ff8a4c491a8"/>
        <function-ref name="enable" scoped="" ref="0x7ff8a4c49330"/>
        <function-ref name="getValue" scoped="" ref="0x7ff8a4c494b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7ff8a4c48878" loc="49:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7ff8a4c48878"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff8a4c48bc8"/>
        <function-ref name="fired" scoped="" ref="0x7ff8a4c48d50"/>
        <function-ref name="disable" scoped="" ref="0x7ff8a4c47020"/>
        <function-ref name="edge" scoped="" ref="0x7ff8a4c471a8"/>
        <function-ref name="enable" scoped="" ref="0x7ff8a4c47330"/>
        <function-ref name="getValue" scoped="" ref="0x7ff8a4c474b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7ff8a4c4f878" loc="40:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7ff8a4c4f878"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff8a4c4fbc8"/>
        <function-ref name="fired" scoped="" ref="0x7ff8a4c4fd50"/>
        <function-ref name="disable" scoped="" ref="0x7ff8a4c4e020"/>
        <function-ref name="edge" scoped="" ref="0x7ff8a4c4e1a8"/>
        <function-ref name="enable" scoped="" ref="0x7ff8a4c4e330"/>
        <function-ref name="getValue" scoped="" ref="0x7ff8a4c4e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7ff8a4c45878" loc="52:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7ff8a4c45878"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff8a4c45bc8"/>
        <function-ref name="fired" scoped="" ref="0x7ff8a4c45d50"/>
        <function-ref name="disable" scoped="" ref="0x7ff8a4c44020"/>
        <function-ref name="edge" scoped="" ref="0x7ff8a4c441a8"/>
        <function-ref name="enable" scoped="" ref="0x7ff8a4c44330"/>
        <function-ref name="getValue" scoped="" ref="0x7ff8a4c444b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7ff8a4b75780" loc="46:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7ff8a4b75780"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff8a4b75ad0"/>
        <function-ref name="fired" scoped="" ref="0x7ff8a4b75c58"/>
        <function-ref name="disable" scoped="" ref="0x7ff8a4b75de0"/>
        <function-ref name="edge" scoped="" ref="0x7ff8a4b68020"/>
        <function-ref name="enable" scoped="" ref="0x7ff8a4b681a8"/>
        <function-ref name="getValue" scoped="" ref="0x7ff8a4b68330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7ff8a4b76b58" loc="45:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7ff8a4b76b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff8a4b75020"/>
        <function-ref name="disable" scoped="" ref="0x7ff8a4b751a8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7ff8a4b75330"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7ff8a4b754b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7ff8a4b665f8" loc="46:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7ff8a4b665f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff8a4b66948"/>
        <function-ref name="fired" scoped="" ref="0x7ff8a4b66ad0"/>
        <function-ref name="disable" scoped="" ref="0x7ff8a4b66c58"/>
        <function-ref name="edge" scoped="" ref="0x7ff8a4b66de0"/>
        <function-ref name="enable" scoped="" ref="0x7ff8a4b65020"/>
        <function-ref name="getValue" scoped="" ref="0x7ff8a4b651a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7ff8a4b67a78" loc="45:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7ff8a4b67a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff8a4b67dc8"/>
        <function-ref name="disable" scoped="" ref="0x7ff8a4b66020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7ff8a4b661a8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7ff8a4b66330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7ff8a473f470" loc="69:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7ff8a473f470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a473f9c0"/>
        <function-ref name="write" scoped="" ref="0x7ff8a473fb48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7ff8a474c9b8" loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7ff8a474c9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff8a474cd08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7ff8a4745470" loc="63:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7ff8a4745470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a47457c0"/>
        <function-ref name="write" scoped="" ref="0x7ff8a4745948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7ff8a473ed98" loc="72:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7ff8a473ed98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a473d170"/>
        <function-ref name="write" scoped="" ref="0x7ff8a473d2f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7ff8a4736470" loc="86:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7ff8a4736470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a47367c0"/>
        <function-ref name="write" scoped="" ref="0x7ff8a4736948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7ff8a473d5c0" loc="73:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7ff8a473d5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a473d910"/>
        <function-ref name="write" scoped="" ref="0x7ff8a473da98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7ff8a472a7c0" loc="108:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7ff8a472a7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a472ab10"/>
        <function-ref name="write" scoped="" ref="0x7ff8a472ac98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7ff8a472c7c0" loc="104:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7ff8a472c7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a472cb10"/>
        <function-ref name="write" scoped="" ref="0x7ff8a472cc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7ff8a474bc50" loc="50:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7ff8a474bc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff8a4749020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7ff8a4732c10" loc="93:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7ff8a4732c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a4731020"/>
        <function-ref name="write" scoped="" ref="0x7ff8a47311a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7ff8a472e7c0" loc="102:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7ff8a472e7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a472eb10"/>
        <function-ref name="write" scoped="" ref="0x7ff8a472ec98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7ff8a4743470" loc="65:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7ff8a4743470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a47437c0"/>
        <function-ref name="write" scoped="" ref="0x7ff8a4743948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7ff8a4740470" loc="67:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7ff8a4740470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a47407c0"/>
        <function-ref name="write" scoped="" ref="0x7ff8a4740948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7ff8a4738c10" loc="83:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7ff8a4738c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a4737020"/>
        <function-ref name="write" scoped="" ref="0x7ff8a47371a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7ff8a4739470" loc="79:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7ff8a4739470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a47397c0"/>
        <function-ref name="write" scoped="" ref="0x7ff8a4739948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7ff8a473dd60" loc="74:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7ff8a473dd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a473c0d8"/>
        <function-ref name="write" scoped="" ref="0x7ff8a473c260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7ff8a474d430" loc="42:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7ff8a474d430"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7ff8a474d780"/>
        <function-ref name="abortRelease" scoped="" ref="0x7ff8a474d908"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7ff8a474da90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7ff8a4748638" loc="54:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7ff8a4748638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff8a4748988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7ff8a4748c50" loc="55:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7ff8a4748c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff8a47470d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7ff8a4730060" loc="95:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7ff8a4730060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a47303b0"/>
        <function-ref name="write" scoped="" ref="0x7ff8a4730538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7ff8a47473a0" loc="56:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7ff8a47473a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff8a47476f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7ff8a472c020" loc="103:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7ff8a472c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a472c370"/>
        <function-ref name="write" scoped="" ref="0x7ff8a472c4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7ff8a4749900" loc="52:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7ff8a4749900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff8a4749c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7ff8a4732470" loc="92:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7ff8a4732470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a47327c0"/>
        <function-ref name="write" scoped="" ref="0x7ff8a4732948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7ff8a4743c10" loc="66:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7ff8a4743c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a4740020"/>
        <function-ref name="write" scoped="" ref="0x7ff8a47401a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7ff8a4745c10" loc="64:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7ff8a4745c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a4743020"/>
        <function-ref name="write" scoped="" ref="0x7ff8a47431a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7ff8a474c3a0" loc="46:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7ff8a474c3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff8a474c6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7ff8a4733470" loc="90:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7ff8a4733470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a47337c0"/>
        <function-ref name="write" scoped="" ref="0x7ff8a4733948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7ff8a4736c10" loc="87:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7ff8a4736c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a4734020"/>
        <function-ref name="write" scoped="" ref="0x7ff8a47341a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7ff8a4733c10" loc="91:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7ff8a4733c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a4732020"/>
        <function-ref name="write" scoped="" ref="0x7ff8a47321a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7ff8a472a020" loc="107:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7ff8a472a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a472a370"/>
        <function-ref name="write" scoped="" ref="0x7ff8a472a4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7ff8a472b020" loc="105:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7ff8a472b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a472b370"/>
        <function-ref name="write" scoped="" ref="0x7ff8a472b4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7ff8a4739c10" loc="80:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7ff8a4739c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a4738020"/>
        <function-ref name="write" scoped="" ref="0x7ff8a47381a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7ff8a4734470" loc="88:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7ff8a4734470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a47347c0"/>
        <function-ref name="write" scoped="" ref="0x7ff8a4734948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7ff8a472e020" loc="101:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7ff8a472e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a472e370"/>
        <function-ref name="write" scoped="" ref="0x7ff8a472e4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7ff8a473ccc8" loc="76:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7ff8a473ccc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a473a0a0"/>
        <function-ref name="write" scoped="" ref="0x7ff8a473a228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7ff8a4729020" loc="111:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7ff8a4729020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7ff8a4729370"/>
        <function-ref name="writeDone" scoped="" ref="0x7ff8a47294f8"/>
        <function-ref name="write" scoped="" ref="0x7ff8a4729680"/>
        <function-ref name="beginRead" scoped="" ref="0x7ff8a4729808"/>
        <function-ref name="readDone" scoped="" ref="0x7ff8a4729990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7ff8a474dd58" loc="45:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7ff8a474dd58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff8a474c0d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7ff8a4746c50" loc="62:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7ff8a4746c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a4745020"/>
        <function-ref name="write" scoped="" ref="0x7ff8a47451a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7ff8a4740c10" loc="68:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7ff8a4740c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a473f020"/>
        <function-ref name="write" scoped="" ref="0x7ff8a473f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7ff8a4737470" loc="84:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7ff8a4737470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a47377c0"/>
        <function-ref name="write" scoped="" ref="0x7ff8a4737948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7ff8a473c528" loc="75:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7ff8a473c528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a473c878"/>
        <function-ref name="write" scoped="" ref="0x7ff8a473ca00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7ff8a4737c10" loc="85:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7ff8a4737c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a4736020"/>
        <function-ref name="write" scoped="" ref="0x7ff8a47361a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7ff8a473fe10" loc="70:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7ff8a473fe10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a473e1a8"/>
        <function-ref name="write" scoped="" ref="0x7ff8a473e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7ff8a474b020" loc="48:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7ff8a474b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff8a474b370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7ff8a473e5f8" loc="71:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7ff8a473e5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a473e948"/>
        <function-ref name="write" scoped="" ref="0x7ff8a473ead0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ff8a474e7d0" loc="41:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ff8a474e7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff8a474eb20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff8a474eca8"/>
        <function-ref name="request" scoped="" ref="0x7ff8a474ee30"/>
        <function-ref name="granted" scoped="" ref="0x7ff8a474d020"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff8a474d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7ff8a47479b8" loc="57:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7ff8a47479b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff8a4747d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7ff8a4746638" loc="59:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7ff8a4746638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff8a4746988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7ff8a472f7c0" loc="100:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7ff8a472f7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a472fb10"/>
        <function-ref name="write" scoped="" ref="0x7ff8a472fc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7ff8a472f020" loc="99:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7ff8a472f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a472f370"/>
        <function-ref name="write" scoped="" ref="0x7ff8a472f4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7ff8a4748020" loc="53:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7ff8a4748020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff8a4748370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7ff8a4730800" loc="96:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7ff8a4730800"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a4730b50"/>
        <function-ref name="write" scoped="" ref="0x7ff8a4730cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7ff8a472b7c0" loc="106:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7ff8a472b7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a472bb10"/>
        <function-ref name="write" scoped="" ref="0x7ff8a472bc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7ff8a4738470" loc="81:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7ff8a4738470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a47387c0"/>
        <function-ref name="write" scoped="" ref="0x7ff8a4738948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7ff8a4734c10" loc="89:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7ff8a4734c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a4733020"/>
        <function-ref name="write" scoped="" ref="0x7ff8a47331a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7ff8a474b638" loc="49:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7ff8a474b638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff8a474b988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7ff8a47492e8" loc="51:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7ff8a47492e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff8a4749638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7ff8a473a4f0" loc="77:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7ff8a473a4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a473a840"/>
        <function-ref name="write" scoped="" ref="0x7ff8a473a9c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7ff8a4746020" loc="58:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7ff8a4746020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff8a4746370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7ff8a473ac90" loc="78:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7ff8a473ac90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a4739020"/>
        <function-ref name="write" scoped="" ref="0x7ff8a47391a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7ff8a4731470" loc="94:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7ff8a4731470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a4731bc0"/>
        <function-ref name="write" scoped="" ref="0x7ff8a4731d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7ff8a4729c58" loc="112:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7ff8a4729c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7ff8a4728020"/>
        <function-ref name="writeDone" scoped="" ref="0x7ff8a47281a8"/>
        <function-ref name="write" scoped="" ref="0x7ff8a4728330"/>
        <function-ref name="beginRead" scoped="" ref="0x7ff8a47284b8"/>
        <function-ref name="readDone" scoped="" ref="0x7ff8a4728640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7ff8a4b27c00" loc="41:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7ff8a4b27c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7ff8a4b26020"/>
        <function-ref name="writeDone" scoped="" ref="0x7ff8a4b261a8"/>
        <function-ref name="write" scoped="" ref="0x7ff8a4b26330"/>
        <function-ref name="beginRead" scoped="" ref="0x7ff8a4b264b8"/>
        <function-ref name="readDone" scoped="" ref="0x7ff8a4b26640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7ff8a4b28cb0" loc="40:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7ff8a4b28cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7ff8a4b270a0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7ff8a4b27228"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7ff8a4b273b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7ff8a4b25020" loc="42:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7ff8a4b25020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a4b25370"/>
        <function-ref name="write" scoped="" ref="0x7ff8a4b254f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7ff8a4b25d60" loc="43:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7ff8a4b25d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a4b240d8"/>
        <function-ref name="write" scoped="" ref="0x7ff8a4b24260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ff8a4b28020" loc="39:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ff8a4b28020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff8a4b28370"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff8a4b284f8"/>
        <function-ref name="request" scoped="" ref="0x7ff8a4b28680"/>
        <function-ref name="granted" scoped="" ref="0x7ff8a4b28808"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff8a4b28990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7ff8a4b24ad8" loc="44:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7ff8a4b24ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff8a4b24e28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x7ff8a4b16020" loc="55:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7ff8a4b16020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff8a4b16370"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff8a4b164f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7ff8a4b1ee50" loc="46:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7ff8a4b1ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7ff8a4b1d1e8"/>
        <function-ref name="writeDone" scoped="" ref="0x7ff8a4b1d370"/>
        <function-ref name="write" scoped="" ref="0x7ff8a4b1d4f8"/>
        <function-ref name="beginRead" scoped="" ref="0x7ff8a4b1d680"/>
        <function-ref name="readDone" scoped="" ref="0x7ff8a4b1d808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7ff8a4b22df0" loc="44:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7ff8a4b22df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7ff8a4b1f170"/>
        <function-ref name="abortRelease" scoped="" ref="0x7ff8a4b1f2f8"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7ff8a4b1f480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x7ff8a4b18d10" loc="54:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7ff8a4b18d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7ff8a4b170a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x7ff8a4b16838" loc="56:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="WorkingState" scoped="" ref="0x7ff8a4b16838"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7ff8a4b16b88"/>
        <function-ref name="toIdle" scoped="" ref="0x7ff8a4b16d10"/>
        <function-ref name="isState" scoped="" ref="0x7ff8a4b15020"/>
        <function-ref name="isIdle" scoped="" ref="0x7ff8a4b151a8"/>
        <function-ref name="requestState" scoped="" ref="0x7ff8a4b15330"/>
        <function-ref name="forceState" scoped="" ref="0x7ff8a4b154b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7ff8a4b191e8" loc="53:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7ff8a4b191e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff8a4b19538"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff8a4b196c0"/>
        <function-ref name="request" scoped="" ref="0x7ff8a4b19848"/>
        <function-ref name="granted" scoped="" ref="0x7ff8a4b199d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff8a4b19b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7ff8a4b1c040" loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7ff8a4b1c040"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a4b1c390"/>
        <function-ref name="write" scoped="" ref="0x7ff8a4b1c518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7ff8a4b1cd40" loc="48:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7ff8a4b1cd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a4b1a0d8"/>
        <function-ref name="write" scoped="" ref="0x7ff8a4b1a260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7ff8a4b15730" loc="57:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7ff8a4b15730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7ff8a4b15a80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7ff8a4b15c08"/>
        <function-ref name="led1On" scoped="" ref="0x7ff8a4b15d90"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7ff8a4b0f020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7ff8a4b0f1a8"/>
        <function-ref name="get" scoped="" ref="0x7ff8a4b0f330"/>
        <function-ref name="led1Off" scoped="" ref="0x7ff8a4b0f4b8"/>
        <function-ref name="led2Off" scoped="" ref="0x7ff8a4b0fad8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a4b0f640"/>
        <function-ref name="led0On" scoped="" ref="0x7ff8a4b0f7c8"/>
        <function-ref name="led2On" scoped="" ref="0x7ff8a4b0f950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ff8a4b1fc10" loc="45:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ff8a4b1fc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff8a4b1e020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff8a4b1e1a8"/>
        <function-ref name="request" scoped="" ref="0x7ff8a4b1e330"/>
        <function-ref name="granted" scoped="" ref="0x7ff8a4b1e4b8"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff8a4b1e640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x7ff8a4b0a5d0" loc="88:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grant" scoped="" ref="0x7ff8a4b0a5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ff8a4b0a920"/>
        <function-ref name="runTask" scoped="" ref="0x7ff8a4b0aaa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7ff8a4b1aa98" loc="49:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7ff8a4b1aa98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff8a4b1ade8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7ff8a4ab2100" loc="67:/home/paul/wsnpr/tinyos-main/tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7ff8a4ab2100"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7ff8a4ab2450"/>
        <function-ref name="toIdle" scoped="" ref="0x7ff8a4ab25d8"/>
        <function-ref name="isState" scoped="" ref="0x7ff8a4ab2760"/>
        <function-ref name="isIdle" scoped="" ref="0x7ff8a4ab28e8"/>
        <function-ref name="requestState" scoped="" ref="0x7ff8a4ab2a70"/>
        <function-ref name="forceState" scoped="" ref="0x7ff8a4ab2bf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7ff8a4ab0858" loc="66:/home/paul/wsnpr/tinyos-main/tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7ff8a4ab0858"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7ff8a4ab0ba8"/>
        <function-ref name="toIdle" scoped="" ref="0x7ff8a4ab0d30"/>
        <function-ref name="isState" scoped="" ref="0x7ff8a4aad020"/>
        <function-ref name="isIdle" scoped="" ref="0x7ff8a4aad1a8"/>
        <function-ref name="requestState" scoped="" ref="0x7ff8a4aad330"/>
        <function-ref name="forceState" scoped="" ref="0x7ff8a4aad4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ff8a4aaa5d8" loc="66:/home/paul/wsnpr/tinyos-main/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ff8a4aaa5d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff8a4aaa928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7ff8a4aa81c8" loc="67:/home/paul/wsnpr/tinyos-main/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7ff8a4aa81c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7ff8a4aa8518"/>
        <function-ref name="toIdle" scoped="" ref="0x7ff8a4aa86a0"/>
        <function-ref name="isState" scoped="" ref="0x7ff8a4aa8828"/>
        <function-ref name="isIdle" scoped="" ref="0x7ff8a4aa89b0"/>
        <function-ref name="requestState" scoped="" ref="0x7ff8a4aa8b38"/>
        <function-ref name="forceState" scoped="" ref="0x7ff8a4aa8cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7ff8a4774020" loc="44:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7ff8a4774020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff8a4774370"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff8a47744f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7ff8a4a91948" loc="43:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7ff8a4a91948"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7ff8a4a91c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ff8a4a92cf0" loc="42:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ff8a4a92cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff8a4a910a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff8a4a91228"/>
        <function-ref name="request" scoped="" ref="0x7ff8a4a913b0"/>
        <function-ref name="granted" scoped="" ref="0x7ff8a4a91538"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff8a4a916c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7ff8a3452430" loc="82:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7ff8a3452430"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7ff8a3452780"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7ff8a3452908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7ff8a3450d18" loc="87:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7ff8a3450d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff8a344f0a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff8a344f228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7ff8a344f4b0" loc="89:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7ff8a344f4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7ff8a344f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7ff8a3452b90" loc="83:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7ff8a3452b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7ff8a3450020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ff8a34537d0" loc="81:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ff8a34537d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff8a3453b20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff8a3453ca8"/>
        <function-ref name="request" scoped="" ref="0x7ff8a3453e30"/>
        <function-ref name="granted" scoped="" ref="0x7ff8a3452020"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff8a34521a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7ff8a34502a8" loc="85:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7ff8a34502a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7ff8a34505f8"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7ff8a3450780"/>
        <function-ref name="splitRead" scoped="" ref="0x7ff8a3450908"/>
        <function-ref name="write" scoped="" ref="0x7ff8a3450a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7ff8a4a2cde0" loc="74:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7ff8a4a2cde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7ff8a4a2e170"/>
        <function-ref name="configure" scoped="" ref="0x7ff8a4a2e2f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7ff8a4a2dc90" loc="77:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7ff8a4a2dc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff8a4a2a020"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff8a4a2a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7ff8a4a29ce8" loc="80:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7ff8a4a29ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7ff8a4a280a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7ff8a4a2e5c8" loc="75:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7ff8a4a2e5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7ff8a4a2e918"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7ff8a4a2aa40" loc="79:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7ff8a4a2aa40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff8a4a2ad90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff8a4a29020"/>
        <function-ref name="request" scoped="" ref="0x7ff8a4a291a8"/>
        <function-ref name="granted" scoped="" ref="0x7ff8a4a29330"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff8a4a294b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ff8a4a304e8" loc="73:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ff8a4a304e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff8a4a30838"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff8a4a309c0"/>
        <function-ref name="request" scoped="" ref="0x7ff8a4a30b48"/>
        <function-ref name="granted" scoped="" ref="0x7ff8a4a30cd0"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff8a4a30e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7ff8a4a2ec10" loc="76:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7ff8a4a2ec10"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7ff8a4a2d020"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7ff8a4a2d1a8"/>
        <function-ref name="splitRead" scoped="" ref="0x7ff8a4a2d330"/>
        <function-ref name="write" scoped="" ref="0x7ff8a4a2d4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7ff8a4a24b50" loc="81:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7ff8a4a24b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7ff8a4a27020"/>
        <function-ref name="txDone" scoped="" ref="0x7ff8a4a271a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7ff8a49b8d58" loc="76:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7ff8a49b8d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7ff8a49b70f0"/>
        <function-ref name="configure" scoped="" ref="0x7ff8a49b7278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7ff8a49b56d8" loc="79:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7ff8a49b56d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff8a49b5a48"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff8a49b5bd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7ff8a49b4d58" loc="82:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7ff8a49b4d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7ff8a49b30f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7ff8a49b7500" loc="77:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7ff8a49b7500"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7ff8a49b7850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7ff8a49b33b8" loc="83:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7ff8a49b33b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7ff8a49b3708"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7ff8a49b3890"/>
        <function-ref name="setUctl" scoped="" ref="0x7ff8a49b3a18"/>
        <function-ref name="enableUart" scoped="" ref="0x7ff8a49b3ba0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7ff8a49b3d28"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7ff8a49b2020"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7ff8a49b21a8"/>
        <function-ref name="getUtctl" scoped="" ref="0x7ff8a49b2330"/>
        <function-ref name="getUrctl" scoped="" ref="0x7ff8a49b24b8"/>
        <function-ref name="resetUsart" scoped="" ref="0x7ff8a49b2640"/>
        <function-ref name="getUmctl" scoped="" ref="0x7ff8a49b27c8"/>
        <function-ref name="disableIntr" scoped="" ref="0x7ff8a49b2950"/>
        <function-ref name="setUtctl" scoped="" ref="0x7ff8a49b2ad8"/>
        <function-ref name="getUbr" scoped="" ref="0x7ff8a49b2d60"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7ff8a49b1020"/>
        <function-ref name="setUmctl" scoped="" ref="0x7ff8a49b11a8"/>
        <function-ref name="isUartRx" scoped="" ref="0x7ff8a49b1330"/>
        <function-ref name="isUart" scoped="" ref="0x7ff8a49b14b8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7ff8a49b1640"/>
        <function-ref name="isSpi" scoped="" ref="0x7ff8a49b17c8"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7ff8a49b1950"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7ff8a49b1ad8"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7ff8a49b1c60"/>
        <function-ref name="enableIntr" scoped="" ref="0x7ff8a49b1de8"/>
        <function-ref name="getMode" scoped="" ref="0x7ff8a49b0020"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7ff8a49b03a8"/>
        <function-ref name="clrIntr" scoped="" ref="0x7ff8a49b0530"/>
        <function-ref name="setUbr" scoped="" ref="0x7ff8a49b06b8"/>
        <function-ref name="tx" scoped="" ref="0x7ff8a49b0840"/>
        <function-ref name="getUctl" scoped="" ref="0x7ff8a49b09c8"/>
        <function-ref name="disableUart" scoped="" ref="0x7ff8a49b0b50"/>
        <function-ref name="enableSpi" scoped="" ref="0x7ff8a49b0cd8"/>
        <function-ref name="setModeUart" scoped="" ref="0x7ff8a49b0e60"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7ff8a49af020"/>
        <function-ref name="rx" scoped="" ref="0x7ff8a49af1a8"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7ff8a49af330"/>
        <function-ref name="isUartTx" scoped="" ref="0x7ff8a49af4b8"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7ff8a49af640"/>
        <function-ref name="disableSpi" scoped="" ref="0x7ff8a49af7c8"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7ff8a49af950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7ff8a49ae430" loc="85:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7ff8a49ae430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7ff8a49ae780"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7ff8a49ae908"/>
        <function-ref name="led1On" scoped="" ref="0x7ff8a49aea90"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7ff8a49aec18"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7ff8a49aeda0"/>
        <function-ref name="get" scoped="" ref="0x7ff8a49ad020"/>
        <function-ref name="led1Off" scoped="" ref="0x7ff8a49ad1a8"/>
        <function-ref name="led2On" scoped="" ref="0x7ff8a49ad7c8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a49ad4b8"/>
        <function-ref name="led2Off" scoped="" ref="0x7ff8a49ad330"/>
        <function-ref name="led0On" scoped="" ref="0x7ff8a49ad640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7ff8a49b4020" loc="81:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7ff8a49b4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff8a49b4390"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff8a49b4518"/>
        <function-ref name="request" scoped="" ref="0x7ff8a49b46a0"/>
        <function-ref name="granted" scoped="" ref="0x7ff8a49b4828"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff8a49b49b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ff8a49b8020" loc="75:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ff8a49b8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff8a49b8390"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff8a49b8518"/>
        <function-ref name="request" scoped="" ref="0x7ff8a49b86a0"/>
        <function-ref name="granted" scoped="" ref="0x7ff8a49b8828"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff8a49b89b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7ff8a49b7ad8" loc="78:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7ff8a49b7ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7ff8a49b7e28"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7ff8a49b5020"/>
        <function-ref name="splitRead" scoped="" ref="0x7ff8a49b51a8"/>
        <function-ref name="write" scoped="" ref="0x7ff8a49b5330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7ff8a49afc18" loc="84:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7ff8a49afc18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7ff8a49ae020"/>
        <function-ref name="txDone" scoped="" ref="0x7ff8a49ae1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalDone_task" ref="0x7ff8a49ada90" loc="102:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalDone_task" scoped="" ref="0x7ff8a49ada90"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ff8a49adde0"/>
        <function-ref name="runTask" scoped="" ref="0x7ff8a49ac020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7ff8a499f020" loc="78:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7ff8a499f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff8a499f370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7ff8a49a19c0" loc="77:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7ff8a49a19c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7ff8a49a1d10"/>
        <function-ref name="txDone" scoped="" ref="0x7ff8a49a0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7ff8a49a5080" loc="76:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7ff8a49a5080"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7ff8a49a53d0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7ff8a49a5558"/>
        <function-ref name="setUctl" scoped="" ref="0x7ff8a49a56e0"/>
        <function-ref name="enableUart" scoped="" ref="0x7ff8a49a5868"/>
        <function-ref name="setUrctl" scoped="" ref="0x7ff8a49a59f0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7ff8a49a5b78"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7ff8a49a5d00"/>
        <function-ref name="getUtctl" scoped="" ref="0x7ff8a49a4020"/>
        <function-ref name="getUrctl" scoped="" ref="0x7ff8a49a41a8"/>
        <function-ref name="resetUsart" scoped="" ref="0x7ff8a49a4330"/>
        <function-ref name="getUmctl" scoped="" ref="0x7ff8a49a44b8"/>
        <function-ref name="disableIntr" scoped="" ref="0x7ff8a49a4640"/>
        <function-ref name="setUtctl" scoped="" ref="0x7ff8a49a47c8"/>
        <function-ref name="getUbr" scoped="" ref="0x7ff8a49a4a50"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7ff8a49a4bd8"/>
        <function-ref name="setUmctl" scoped="" ref="0x7ff8a49a4d60"/>
        <function-ref name="isUartRx" scoped="" ref="0x7ff8a49a3020"/>
        <function-ref name="isUart" scoped="" ref="0x7ff8a49a31a8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7ff8a49a3330"/>
        <function-ref name="isSpi" scoped="" ref="0x7ff8a49a34b8"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7ff8a49a3640"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7ff8a49a37c8"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7ff8a49a3950"/>
        <function-ref name="enableIntr" scoped="" ref="0x7ff8a49a3ad8"/>
        <function-ref name="getMode" scoped="" ref="0x7ff8a49a3c60"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7ff8a49a2020"/>
        <function-ref name="clrIntr" scoped="" ref="0x7ff8a49a21a8"/>
        <function-ref name="setUbr" scoped="" ref="0x7ff8a49a2330"/>
        <function-ref name="tx" scoped="" ref="0x7ff8a49a24b8"/>
        <function-ref name="getUctl" scoped="" ref="0x7ff8a49a2640"/>
        <function-ref name="disableUart" scoped="" ref="0x7ff8a49a27c8"/>
        <function-ref name="enableSpi" scoped="" ref="0x7ff8a49a2950"/>
        <function-ref name="setModeUart" scoped="" ref="0x7ff8a49a2ad8"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7ff8a49a2c60"/>
        <function-ref name="rx" scoped="" ref="0x7ff8a49a2de8"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7ff8a49a1020"/>
        <function-ref name="isUartTx" scoped="" ref="0x7ff8a49a11a8"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7ff8a49a1330"/>
        <function-ref name="disableSpi" scoped="" ref="0x7ff8a49a14b8"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7ff8a49a1640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7ff8a4966968" loc="82:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7ff8a4966968"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a4966cb8"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a4966e40"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a4965020"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a49651a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a4965330"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a49654b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a4965640"/>
        <function-ref name="get" scoped="" ref="0x7ff8a49657c8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a4965950"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a4965ad8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a4965c60"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a4965de8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a4964020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a49642a8"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a4964430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7ff8a4996020" loc="76:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7ff8a4996020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7ff8a4996370"/>
        <function-ref name="txDone" scoped="" ref="0x7ff8a49964f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7ff8a49647e0" loc="83:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7ff8a49647e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a4964b30"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a4964cb8"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a4964e40"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a4963020"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a49631a8"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a4963330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a49634b8"/>
        <function-ref name="get" scoped="" ref="0x7ff8a4963640"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a49637c8"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a4963950"/>
        <function-ref name="set" scoped="" ref="0x7ff8a4963ad8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a4963c60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a4963de8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a4962120"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a49622a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7ff8a4962658" loc="84:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7ff8a4962658"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a49629a8"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a4962b30"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a4962cb8"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a4962e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a4961020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a49611a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a4961330"/>
        <function-ref name="get" scoped="" ref="0x7ff8a49614b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a4961640"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a49617c8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a4961950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a4961ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a4961c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a4960020"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a49601a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7ff8a499c5a8" loc="75:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7ff8a499c5a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7ff8a499c8f8"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7ff8a499ca80"/>
        <function-ref name="setUctl" scoped="" ref="0x7ff8a499cc08"/>
        <function-ref name="enableUart" scoped="" ref="0x7ff8a499cd90"/>
        <function-ref name="setUrctl" scoped="" ref="0x7ff8a499a020"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7ff8a499a1a8"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7ff8a499a330"/>
        <function-ref name="getUtctl" scoped="" ref="0x7ff8a499a4b8"/>
        <function-ref name="getUrctl" scoped="" ref="0x7ff8a499a640"/>
        <function-ref name="resetUsart" scoped="" ref="0x7ff8a499a7c8"/>
        <function-ref name="getUmctl" scoped="" ref="0x7ff8a499a950"/>
        <function-ref name="disableIntr" scoped="" ref="0x7ff8a499aad8"/>
        <function-ref name="setUtctl" scoped="" ref="0x7ff8a499ac60"/>
        <function-ref name="getUbr" scoped="" ref="0x7ff8a4999020"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7ff8a49991a8"/>
        <function-ref name="setUmctl" scoped="" ref="0x7ff8a4999330"/>
        <function-ref name="isUartRx" scoped="" ref="0x7ff8a49994b8"/>
        <function-ref name="isUart" scoped="" ref="0x7ff8a4999640"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7ff8a49997c8"/>
        <function-ref name="isSpi" scoped="" ref="0x7ff8a4999950"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7ff8a4999ad8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7ff8a4999c60"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7ff8a4999de8"/>
        <function-ref name="enableIntr" scoped="" ref="0x7ff8a4998020"/>
        <function-ref name="getMode" scoped="" ref="0x7ff8a49981a8"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7ff8a4998530"/>
        <function-ref name="clrIntr" scoped="" ref="0x7ff8a49986b8"/>
        <function-ref name="setUbr" scoped="" ref="0x7ff8a4998840"/>
        <function-ref name="tx" scoped="" ref="0x7ff8a49989c8"/>
        <function-ref name="getUctl" scoped="" ref="0x7ff8a4998b50"/>
        <function-ref name="disableUart" scoped="" ref="0x7ff8a4998cd8"/>
        <function-ref name="enableSpi" scoped="" ref="0x7ff8a4998e60"/>
        <function-ref name="setModeUart" scoped="" ref="0x7ff8a4997020"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7ff8a49971a8"/>
        <function-ref name="rx" scoped="" ref="0x7ff8a4997330"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7ff8a49974b8"/>
        <function-ref name="isUartTx" scoped="" ref="0x7ff8a4997640"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7ff8a49977c8"/>
        <function-ref name="disableSpi" scoped="" ref="0x7ff8a4997950"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7ff8a4997ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplI2C" ref="0x7ff8a4994060" loc="79:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7ff8a4994060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7ff8a49943b0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7ff8a4994538"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7ff8a49946c0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7ff8a4994848"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7ff8a49949d0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7ff8a4994b58"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7ff8a4994ce0"/>
        <function-ref name="getStopBit" scoped="" ref="0x7ff8a4994e68"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ff8a4993020"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7ff8a49931a8"/>
        <function-ref name="getData" scoped="" ref="0x7ff8a4993330"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7ff8a49934b8"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7ff8a4993640"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7ff8a49938c8"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7ff8a4993a50"/>
        <function-ref name="getIV" scoped="" ref="0x7ff8a4993bd8"/>
        <function-ref name="enableI2C" scoped="" ref="0x7ff8a4993d60"/>
        <function-ref name="setStartBit" scoped="" ref="0x7ff8a496e020"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7ff8a496e1a8"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7ff8a496e330"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7ff8a496e4b8"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7ff8a496e640"/>
        <function-ref name="isI2C" scoped="" ref="0x7ff8a496e7c8"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7ff8a496e950"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7ff8a496ead8"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7ff8a496ee60"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7ff8a496d020"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7ff8a496d1a8"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7ff8a496d330"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7ff8a496d4b8"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7ff8a496d640"/>
        <function-ref name="disableI2C" scoped="" ref="0x7ff8a496d7c8"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7ff8a496d950"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7ff8a496dad8"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7ff8a496dc60"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7ff8a496dde8"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7ff8a496c020"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7ff8a496c1a8"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7ff8a496c330"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7ff8a496c4b8"/>
        <function-ref name="getStartBit" scoped="" ref="0x7ff8a496c640"/>
        <function-ref name="setWordMode" scoped="" ref="0x7ff8a496c7c8"/>
        <function-ref name="setData" scoped="" ref="0x7ff8a496c950"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7ff8a496cad8"/>
        <function-ref name="getClockSource" scoped="" ref="0x7ff8a496cc60"/>
        <function-ref name="getWordMode" scoped="" ref="0x7ff8a496cde8"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7ff8a496b020"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7ff8a496b1a8"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7ff8a496b330"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7ff8a496b8b8"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7ff8a496ba40"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7ff8a496bbc8"/>
        <function-ref name="setStopBit" scoped="" ref="0x7ff8a496bd50"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7ff8a496a020"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7ff8a496a1a8"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7ff8a496a330"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7ff8a496a4b8"/>
        <function-ref name="setStartByte" scoped="" ref="0x7ff8a496a640"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7ff8a496a7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7ff8a4968af0" loc="81:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7ff8a4968af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a4968e40"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a4967020"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a49671a8"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a4967330"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a49674b8"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a4967640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a49677c8"/>
        <function-ref name="get" scoped="" ref="0x7ff8a4967950"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a4967ad8"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a4967c60"/>
        <function-ref name="set" scoped="" ref="0x7ff8a4967de8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a4966020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a49661a8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a4966430"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a49665b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7ff8a4996928" loc="77:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7ff8a4996928"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff8a4996c78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7ff8a496ab78" loc="80:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7ff8a496ab78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a4969020"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a49691a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a4969330"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a49694b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a4969640"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a49697c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a4969950"/>
        <function-ref name="get" scoped="" ref="0x7ff8a4969ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a4969c60"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a4969de8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a4968020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a49681a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a4968330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a49685b8"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a4968740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7ff8a34488c8" loc="42:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7ff8a34488c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7ff8a3448c18"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7ff8a3448da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7ff8a3442780" loc="46:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7ff8a3442780"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff8a3442ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7ff8a343b8c8" loc="51:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7ff8a343b8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7ff8a343bc18"/>
        <function-ref name="configure" scoped="" ref="0x7ff8a343bda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7ff8a3442d58" loc="48:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7ff8a3442d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7ff8a34410d8"/>
        <function-ref name="getStartByte" scoped="" ref="0x7ff8a3441260"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7ff8a34413e8"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7ff8a3441570"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7ff8a34416f8"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7ff8a3441880"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7ff8a3441a08"/>
        <function-ref name="getStopBit" scoped="" ref="0x7ff8a3441b90"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ff8a3441d18"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7ff8a3440020"/>
        <function-ref name="getData" scoped="" ref="0x7ff8a34401a8"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7ff8a3440330"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7ff8a34404b8"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7ff8a3440740"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7ff8a34408c8"/>
        <function-ref name="getIV" scoped="" ref="0x7ff8a3440a50"/>
        <function-ref name="enableI2C" scoped="" ref="0x7ff8a3440bd8"/>
        <function-ref name="setStartBit" scoped="" ref="0x7ff8a3440d60"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7ff8a343f020"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7ff8a343f1a8"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7ff8a343f330"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7ff8a343f4b8"/>
        <function-ref name="isI2C" scoped="" ref="0x7ff8a343f640"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7ff8a343f7c8"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7ff8a343f950"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7ff8a343fcd8"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7ff8a343fe60"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7ff8a343e020"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7ff8a343e1a8"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7ff8a343e330"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7ff8a343e4b8"/>
        <function-ref name="disableI2C" scoped="" ref="0x7ff8a343e640"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7ff8a343e7c8"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7ff8a343e950"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7ff8a343ead8"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7ff8a343ec60"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7ff8a343ede8"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7ff8a343d020"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7ff8a343d1a8"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7ff8a343d330"/>
        <function-ref name="getStartBit" scoped="" ref="0x7ff8a343d4b8"/>
        <function-ref name="setWordMode" scoped="" ref="0x7ff8a343d640"/>
        <function-ref name="setData" scoped="" ref="0x7ff8a343d7c8"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7ff8a343d950"/>
        <function-ref name="getClockSource" scoped="" ref="0x7ff8a343dad8"/>
        <function-ref name="getWordMode" scoped="" ref="0x7ff8a343dc60"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7ff8a343dde8"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7ff8a343c020"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7ff8a343c1a8"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7ff8a343c730"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7ff8a343c8b8"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7ff8a343ca40"/>
        <function-ref name="setStopBit" scoped="" ref="0x7ff8a343cbc8"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7ff8a343cd50"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7ff8a343b020"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7ff8a343b1a8"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7ff8a343b330"/>
        <function-ref name="setStartByte" scoped="" ref="0x7ff8a343b4b8"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7ff8a343b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7ff8a3442020" loc="45:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7ff8a3442020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7ff8a3442370"/>
        <function-ref name="txDone" scoped="" ref="0x7ff8a34424f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ff8a3449b38" loc="41:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ff8a3449b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff8a3448020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff8a34481a8"/>
        <function-ref name="request" scoped="" ref="0x7ff8a3448330"/>
        <function-ref name="granted" scoped="" ref="0x7ff8a34484b8"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff8a3448640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7ff8a34477c0" loc="44:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7ff8a34477c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7ff8a3447b10"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7ff8a3447c98"/>
        <function-ref name="setUctl" scoped="" ref="0x7ff8a3447e20"/>
        <function-ref name="enableUart" scoped="" ref="0x7ff8a3446020"/>
        <function-ref name="setUrctl" scoped="" ref="0x7ff8a34461a8"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7ff8a3446330"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7ff8a34464b8"/>
        <function-ref name="getUtctl" scoped="" ref="0x7ff8a3446640"/>
        <function-ref name="getUrctl" scoped="" ref="0x7ff8a34467c8"/>
        <function-ref name="resetUsart" scoped="" ref="0x7ff8a3446950"/>
        <function-ref name="getUmctl" scoped="" ref="0x7ff8a3446ad8"/>
        <function-ref name="disableIntr" scoped="" ref="0x7ff8a3446c60"/>
        <function-ref name="setUtctl" scoped="" ref="0x7ff8a3446de8"/>
        <function-ref name="getUbr" scoped="" ref="0x7ff8a3445120"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7ff8a34452a8"/>
        <function-ref name="setUmctl" scoped="" ref="0x7ff8a3445430"/>
        <function-ref name="isUartRx" scoped="" ref="0x7ff8a34455b8"/>
        <function-ref name="isUart" scoped="" ref="0x7ff8a3445740"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7ff8a34458c8"/>
        <function-ref name="isSpi" scoped="" ref="0x7ff8a3445a50"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7ff8a3445bd8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7ff8a3445d60"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7ff8a3444020"/>
        <function-ref name="enableIntr" scoped="" ref="0x7ff8a34441a8"/>
        <function-ref name="getMode" scoped="" ref="0x7ff8a3444330"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7ff8a34446b8"/>
        <function-ref name="clrIntr" scoped="" ref="0x7ff8a3444840"/>
        <function-ref name="setUbr" scoped="" ref="0x7ff8a34449c8"/>
        <function-ref name="tx" scoped="" ref="0x7ff8a3444b50"/>
        <function-ref name="getUctl" scoped="" ref="0x7ff8a3444cd8"/>
        <function-ref name="disableUart" scoped="" ref="0x7ff8a3444e60"/>
        <function-ref name="enableSpi" scoped="" ref="0x7ff8a3443020"/>
        <function-ref name="setModeUart" scoped="" ref="0x7ff8a34431a8"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7ff8a3443330"/>
        <function-ref name="rx" scoped="" ref="0x7ff8a34434b8"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7ff8a3443640"/>
        <function-ref name="isUartTx" scoped="" ref="0x7ff8a34437c8"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7ff8a3443950"/>
        <function-ref name="disableSpi" scoped="" ref="0x7ff8a3443ad8"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7ff8a3443c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7ff8a3447060" loc="43:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7ff8a3447060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7ff8a34473b0"/>
        <function-ref name="userId" scoped="" ref="0x7ff8a3447538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7ff8a48c5660" loc="42:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7ff8a48c5660"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7ff8a48c59b0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7ff8a48c5b38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7ff8a48c3b58" loc="45:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7ff8a48c3b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7ff8a48c2020"/>
        <function-ref name="configure" scoped="" ref="0x7ff8a48c21a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7ff8a48cba50" loc="39:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7ff8a48cba50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7ff8a48cbda0"/>
        <function-ref name="txDone" scoped="" ref="0x7ff8a48c7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ff8a48c6498" loc="41:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ff8a48c6498"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff8a48c67e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff8a48c6970"/>
        <function-ref name="request" scoped="" ref="0x7ff8a48c6af8"/>
        <function-ref name="granted" scoped="" ref="0x7ff8a48c6c80"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff8a48c6e08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7ff8a48c7940" loc="40:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7ff8a48c7940"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff8a48c7c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7ff8a48c5e30" loc="43:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7ff8a48c5e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7ff8a48c31a8"/>
        <function-ref name="userId" scoped="" ref="0x7ff8a48c3330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7ff8a48ae2a8" loc="43:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7ff8a48ae2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7ff8a48ae5f8"/>
        <function-ref name="userId" scoped="" ref="0x7ff8a48ae780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7ff8a48c0480" loc="39:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7ff8a48c0480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7ff8a48c07f0"/>
        <function-ref name="txDone" scoped="" ref="0x7ff8a48c0978"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7ff8a48b0bd8" loc="42:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7ff8a48b0bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff8a48ae020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7ff8a48c0d60" loc="40:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7ff8a48c0d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff8a48b0170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7ff8a48b0438" loc="41:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7ff8a48b0438"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7ff8a48b0788"/>
        <function-ref name="txDone" scoped="" ref="0x7ff8a48b0910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7ff8a483ad18" loc="92:/home/paul/wsnpr/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7ff8a483ad18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7ff8a48390d8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7ff8a4839260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7ff8a4838960" loc="96:/home/paul/wsnpr/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7ff8a4838960"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7ff8a4838cd0"/>
        <function-ref name="configure" scoped="" ref="0x7ff8a4838e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7ff8a48394a8" loc="93:/home/paul/wsnpr/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7ff8a48394a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff8a48397f8"/>
        <function-ref name="requested" scoped="" ref="0x7ff8a4839980"/>
        <function-ref name="granted" scoped="" ref="0x7ff8a4839b08"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff8a4839c90"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7ff8a4839e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ff8a483a020" loc="91:/home/paul/wsnpr/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ff8a483a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff8a483a390"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff8a483a518"/>
        <function-ref name="request" scoped="" ref="0x7ff8a483a6a0"/>
        <function-ref name="granted" scoped="" ref="0x7ff8a483a828"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff8a483a9b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7ff8a48380e0" loc="94:/home/paul/wsnpr/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7ff8a48380e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7ff8a4838430"/>
        <function-ref name="userId" scoped="" ref="0x7ff8a48385b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ff8a33da8e0" loc="44:/home/paul/wsnpr/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ff8a33da8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff8a33dac30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7ff8a33d9020" loc="45:/home/paul/wsnpr/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7ff8a33d9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7ff8a33d9370"/>
        <function-ref name="isEmpty" scoped="" ref="0x7ff8a33d94f8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7ff8a33d9680"/>
        <function-ref name="dequeue" scoped="" ref="0x7ff8a33d9808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7ff8a33d7d58" loc="55:/home/paul/wsnpr/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7ff8a33d7d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7ff8a33d50f0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7ff8a33d5278"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7ff8a33d4980" loc="60:/home/paul/wsnpr/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7ff8a33d4980"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7ff8a33d4cf0"/>
        <function-ref name="configure" scoped="" ref="0x7ff8a33d4e78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7ff8a33d3130" loc="61:/home/paul/wsnpr/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7ff8a33d3130"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7ff8a33d3480"/>
        <function-ref name="isEmpty" scoped="" ref="0x7ff8a33d3608"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7ff8a33d3790"/>
        <function-ref name="dequeue" scoped="" ref="0x7ff8a33d3918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7ff8a33d54c0" loc="56:/home/paul/wsnpr/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7ff8a33d54c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff8a33d5810"/>
        <function-ref name="requested" scoped="" ref="0x7ff8a33d5998"/>
        <function-ref name="granted" scoped="" ref="0x7ff8a33d5b20"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff8a33d5ca8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7ff8a33d5e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7ff8a33d3b60" loc="62:/home/paul/wsnpr/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7ff8a33d3b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7ff8a33d2020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7ff8a33d21a8"/>
        <function-ref name="led1On" scoped="" ref="0x7ff8a33d2330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7ff8a33d24b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7ff8a33d2640"/>
        <function-ref name="get" scoped="" ref="0x7ff8a33d27c8"/>
        <function-ref name="led1Off" scoped="" ref="0x7ff8a33d2950"/>
        <function-ref name="led0On" scoped="" ref="0x7ff8a33d1020"/>
        <function-ref name="set" scoped="" ref="0x7ff8a33d2c60"/>
        <function-ref name="led2On" scoped="" ref="0x7ff8a33d2ad8"/>
        <function-ref name="led2Off" scoped="" ref="0x7ff8a33d2de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ff8a33d7060" loc="54:/home/paul/wsnpr/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ff8a33d7060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff8a33d73d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff8a33d7558"/>
        <function-ref name="request" scoped="" ref="0x7ff8a33d76e0"/>
        <function-ref name="granted" scoped="" ref="0x7ff8a33d7868"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff8a33d79f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7ff8a33d40e0" loc="57:/home/paul/wsnpr/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7ff8a33d40e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7ff8a33d4430"/>
        <function-ref name="userId" scoped="" ref="0x7ff8a33d45b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7ff8a33d12e8" loc="75:/home/paul/wsnpr/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7ff8a33d12e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ff8a33d1638"/>
        <function-ref name="runTask" scoped="" ref="0x7ff8a33d17c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7ff8a4831298" loc="4:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <component-ref qname="HplMsp430I2C0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7ff8a4831298"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7ff8a48315e8"/>
        <function-ref name="getStartByte" scoped="" ref="0x7ff8a4831770"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7ff8a48318f8"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7ff8a4831a80"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7ff8a4831c08"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7ff8a4831d90"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7ff8a482e020"/>
        <function-ref name="getStopBit" scoped="" ref="0x7ff8a482e1a8"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ff8a482e330"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7ff8a482e4b8"/>
        <function-ref name="getData" scoped="" ref="0x7ff8a482e640"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7ff8a482e7c8"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7ff8a482e950"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7ff8a482ebd8"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7ff8a482ed60"/>
        <function-ref name="getIV" scoped="" ref="0x7ff8a482d020"/>
        <function-ref name="enableI2C" scoped="" ref="0x7ff8a482d1a8"/>
        <function-ref name="setStartBit" scoped="" ref="0x7ff8a482d330"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7ff8a482d4b8"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7ff8a482d640"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7ff8a482d7c8"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7ff8a482d950"/>
        <function-ref name="isI2C" scoped="" ref="0x7ff8a482dad8"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7ff8a482dc60"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7ff8a482dde8"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7ff8a482c220"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7ff8a482c3a8"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7ff8a482c530"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7ff8a482c6b8"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7ff8a482c840"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7ff8a482c9c8"/>
        <function-ref name="disableI2C" scoped="" ref="0x7ff8a482cb50"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7ff8a482ccd8"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7ff8a482ce60"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7ff8a482b020"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7ff8a482b1a8"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7ff8a482b330"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7ff8a482b4b8"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7ff8a482b640"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7ff8a482b7c8"/>
        <function-ref name="getStartBit" scoped="" ref="0x7ff8a482b950"/>
        <function-ref name="setWordMode" scoped="" ref="0x7ff8a482bad8"/>
        <function-ref name="setData" scoped="" ref="0x7ff8a482bc60"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7ff8a482bde8"/>
        <function-ref name="getClockSource" scoped="" ref="0x7ff8a482a020"/>
        <function-ref name="getWordMode" scoped="" ref="0x7ff8a482a1a8"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7ff8a482a330"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7ff8a482a4b8"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7ff8a482a640"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7ff8a482abc8"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7ff8a482ad50"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7ff8a4829020"/>
        <function-ref name="setStopBit" scoped="" ref="0x7ff8a48291a8"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7ff8a4829330"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7ff8a48294b8"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7ff8a4829640"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7ff8a48297c8"/>
        <function-ref name="setStartByte" scoped="" ref="0x7ff8a4829950"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7ff8a4829ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUsart" ref="0x7ff8a481f6e0" loc="41:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplUsart" scoped="" ref="0x7ff8a481f6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7ff8a481fa30"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7ff8a481fbb8"/>
        <function-ref name="setUctl" scoped="" ref="0x7ff8a481fd40"/>
        <function-ref name="enableUart" scoped="" ref="0x7ff8a481d020"/>
        <function-ref name="setUrctl" scoped="" ref="0x7ff8a481d1a8"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7ff8a481d330"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7ff8a481d4b8"/>
        <function-ref name="getUtctl" scoped="" ref="0x7ff8a481d640"/>
        <function-ref name="getUrctl" scoped="" ref="0x7ff8a481d7c8"/>
        <function-ref name="resetUsart" scoped="" ref="0x7ff8a481d950"/>
        <function-ref name="getUmctl" scoped="" ref="0x7ff8a481dad8"/>
        <function-ref name="disableIntr" scoped="" ref="0x7ff8a481dc60"/>
        <function-ref name="setUtctl" scoped="" ref="0x7ff8a481dde8"/>
        <function-ref name="getUbr" scoped="" ref="0x7ff8a481c120"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7ff8a481c2a8"/>
        <function-ref name="setUmctl" scoped="" ref="0x7ff8a481c430"/>
        <function-ref name="isUartRx" scoped="" ref="0x7ff8a481c5b8"/>
        <function-ref name="isUart" scoped="" ref="0x7ff8a481c740"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7ff8a481c8c8"/>
        <function-ref name="isSpi" scoped="" ref="0x7ff8a481ca50"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7ff8a481cbd8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7ff8a481cd60"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7ff8a481b020"/>
        <function-ref name="enableIntr" scoped="" ref="0x7ff8a481b1a8"/>
        <function-ref name="getMode" scoped="" ref="0x7ff8a481b330"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7ff8a481b6b8"/>
        <function-ref name="clrIntr" scoped="" ref="0x7ff8a481b840"/>
        <function-ref name="setUbr" scoped="" ref="0x7ff8a481b9c8"/>
        <function-ref name="tx" scoped="" ref="0x7ff8a481bb50"/>
        <function-ref name="getUctl" scoped="" ref="0x7ff8a481bcd8"/>
        <function-ref name="disableUart" scoped="" ref="0x7ff8a481be60"/>
        <function-ref name="enableSpi" scoped="" ref="0x7ff8a481a020"/>
        <function-ref name="setModeUart" scoped="" ref="0x7ff8a481a1a8"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7ff8a481a330"/>
        <function-ref name="rx" scoped="" ref="0x7ff8a481a4b8"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7ff8a481a640"/>
        <function-ref name="isUartTx" scoped="" ref="0x7ff8a481a7c8"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7ff8a481a950"/>
        <function-ref name="disableSpi" scoped="" ref="0x7ff8a481aad8"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7ff8a481ac60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7ff8a4818e00" loc="43:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7ff8a4818e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a48171a8"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a4817330"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a48174b8"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a4817640"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a48177c8"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a4817950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a4817ad8"/>
        <function-ref name="get" scoped="" ref="0x7ff8a4817c60"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a4817de8"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a4816020"/>
        <function-ref name="set" scoped="" ref="0x7ff8a48161a8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a4816330"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a48164b8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a4816740"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a48168c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplI2C" ref="0x7ff8a4828b30" loc="39:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7ff8a4828b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7ff8a4828e80"/>
        <function-ref name="getStartByte" scoped="" ref="0x7ff8a4825030"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7ff8a48251b8"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7ff8a4825340"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7ff8a48254c8"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7ff8a4825650"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7ff8a48257d8"/>
        <function-ref name="getStopBit" scoped="" ref="0x7ff8a4825960"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ff8a4825ae8"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7ff8a4825c70"/>
        <function-ref name="getData" scoped="" ref="0x7ff8a4825df8"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7ff8a4824020"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7ff8a48241a8"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7ff8a4824430"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7ff8a48245b8"/>
        <function-ref name="getIV" scoped="" ref="0x7ff8a4824740"/>
        <function-ref name="enableI2C" scoped="" ref="0x7ff8a48248c8"/>
        <function-ref name="setStartBit" scoped="" ref="0x7ff8a4824a50"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7ff8a4824bd8"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7ff8a4824d60"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7ff8a4823020"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7ff8a48231a8"/>
        <function-ref name="isI2C" scoped="" ref="0x7ff8a4823330"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7ff8a48234b8"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7ff8a4823640"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7ff8a48239c8"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7ff8a4823b50"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7ff8a4823cd8"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7ff8a4823e60"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7ff8a4822020"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7ff8a48221a8"/>
        <function-ref name="disableI2C" scoped="" ref="0x7ff8a4822330"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7ff8a48224b8"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7ff8a4822640"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7ff8a48227c8"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7ff8a4822950"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7ff8a4822ad8"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7ff8a4822c60"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7ff8a4822de8"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7ff8a4821020"/>
        <function-ref name="getStartBit" scoped="" ref="0x7ff8a48211a8"/>
        <function-ref name="setWordMode" scoped="" ref="0x7ff8a4821330"/>
        <function-ref name="setData" scoped="" ref="0x7ff8a48214b8"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7ff8a4821640"/>
        <function-ref name="getClockSource" scoped="" ref="0x7ff8a48217c8"/>
        <function-ref name="getWordMode" scoped="" ref="0x7ff8a4821950"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7ff8a4821ad8"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7ff8a4821c60"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7ff8a4821de8"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7ff8a4820420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7ff8a48205a8"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7ff8a4820730"/>
        <function-ref name="setStopBit" scoped="" ref="0x7ff8a48208b8"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7ff8a4820a40"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7ff8a4820bc8"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7ff8a4820d50"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7ff8a481f020"/>
        <function-ref name="setStartByte" scoped="" ref="0x7ff8a481f1a8"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7ff8a481f330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7ff8a4819060" loc="42:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7ff8a4819060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a48193b0"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a4819538"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a48196c0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a4819848"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a48199d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a4819b58"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a4819ce0"/>
        <function-ref name="get" scoped="" ref="0x7ff8a4819e68"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a4818020"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a48181a8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a4818330"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a48184b8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a4818640"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a48188c8"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a4818a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7ff8a4711a88" loc="69:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7ff8a4711a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a470f020"/>
        <function-ref name="write" scoped="" ref="0x7ff8a470f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7ff8a471a100" loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7ff8a471a100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff8a471a450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7ff8a4714a88" loc="63:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7ff8a4714a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a4714dd8"/>
        <function-ref name="write" scoped="" ref="0x7ff8a4713020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7ff8a470e470" loc="72:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7ff8a470e470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a470e7c0"/>
        <function-ref name="write" scoped="" ref="0x7ff8a470e948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7ff8a4707c10" loc="86:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7ff8a4707c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a4706020"/>
        <function-ref name="write" scoped="" ref="0x7ff8a47061a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7ff8a470ec10" loc="73:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7ff8a470ec10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a470d020"/>
        <function-ref name="write" scoped="" ref="0x7ff8a470d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7ff8a46fa2e8" loc="108:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7ff8a46fa2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a46fa638"/>
        <function-ref name="write" scoped="" ref="0x7ff8a46fa7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7ff8a46fd2e8" loc="104:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7ff8a46fd2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a46fd638"/>
        <function-ref name="write" scoped="" ref="0x7ff8a46fd7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7ff8a47193a0" loc="50:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7ff8a47193a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff8a47196f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7ff8a4703470" loc="93:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7ff8a4703470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a47037c0"/>
        <function-ref name="write" scoped="" ref="0x7ff8a4703948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7ff8a46fe2e8" loc="102:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7ff8a46fe2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a46fe638"/>
        <function-ref name="write" scoped="" ref="0x7ff8a46fe7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7ff8a4713a88" loc="65:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7ff8a4713a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a4713dd8"/>
        <function-ref name="write" scoped="" ref="0x7ff8a4712020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7ff8a4712a88" loc="67:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7ff8a4712a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a4712dd8"/>
        <function-ref name="write" scoped="" ref="0x7ff8a4711020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7ff8a4708470" loc="83:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7ff8a4708470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a47087c0"/>
        <function-ref name="write" scoped="" ref="0x7ff8a4708948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7ff8a470bc10" loc="79:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7ff8a470bc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a470a020"/>
        <function-ref name="write" scoped="" ref="0x7ff8a470a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7ff8a470d470" loc="74:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7ff8a470d470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a470d7c0"/>
        <function-ref name="write" scoped="" ref="0x7ff8a470d948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7ff8a471da90" loc="42:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7ff8a471da90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7ff8a471dde0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7ff8a471b020"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7ff8a471b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7ff8a4718c50" loc="54:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7ff8a4718c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff8a4717020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7ff8a47172e8" loc="55:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7ff8a47172e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff8a4717738"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7ff8a4701a38" loc="95:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7ff8a4701a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a4701d88"/>
        <function-ref name="write" scoped="" ref="0x7ff8a4700020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7ff8a4717a00" loc="56:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7ff8a4717a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff8a4717d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7ff8a46fea88" loc="103:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7ff8a46fea88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a46fedd8"/>
        <function-ref name="write" scoped="" ref="0x7ff8a46fd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7ff8a4718020" loc="52:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7ff8a4718020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff8a4718370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7ff8a4704c10" loc="92:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7ff8a4704c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a4703020"/>
        <function-ref name="write" scoped="" ref="0x7ff8a47031a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7ff8a47122e8" loc="66:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7ff8a47122e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a4712638"/>
        <function-ref name="write" scoped="" ref="0x7ff8a47127c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7ff8a47132e8" loc="64:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7ff8a47132e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a4713638"/>
        <function-ref name="write" scoped="" ref="0x7ff8a47137c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7ff8a471ba88" loc="46:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7ff8a471ba88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff8a471bdd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7ff8a4705c10" loc="90:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7ff8a4705c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a4704020"/>
        <function-ref name="write" scoped="" ref="0x7ff8a47041a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7ff8a4706470" loc="87:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7ff8a4706470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a47067c0"/>
        <function-ref name="write" scoped="" ref="0x7ff8a4706948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7ff8a4704470" loc="91:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7ff8a4704470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a47047c0"/>
        <function-ref name="write" scoped="" ref="0x7ff8a4704948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7ff8a46fca88" loc="107:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7ff8a46fca88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a46fcdd8"/>
        <function-ref name="write" scoped="" ref="0x7ff8a46fa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7ff8a46fda88" loc="105:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7ff8a46fda88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a46fddd8"/>
        <function-ref name="write" scoped="" ref="0x7ff8a46fc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7ff8a470a470" loc="80:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7ff8a470a470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a470a7c0"/>
        <function-ref name="write" scoped="" ref="0x7ff8a470a948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7ff8a4706c10" loc="88:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7ff8a4706c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a4705020"/>
        <function-ref name="write" scoped="" ref="0x7ff8a47051a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7ff8a46ffa88" loc="101:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7ff8a46ffa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a46ffdd8"/>
        <function-ref name="write" scoped="" ref="0x7ff8a46fe020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7ff8a470c470" loc="76:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7ff8a470c470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a470c7c0"/>
        <function-ref name="write" scoped="" ref="0x7ff8a470c948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7ff8a46faa88" loc="111:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7ff8a46faa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7ff8a46fadd8"/>
        <function-ref name="writeDone" scoped="" ref="0x7ff8a46f9020"/>
        <function-ref name="write" scoped="" ref="0x7ff8a46f91a8"/>
        <function-ref name="beginRead" scoped="" ref="0x7ff8a46f9330"/>
        <function-ref name="readDone" scoped="" ref="0x7ff8a46f94b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7ff8a471b470" loc="45:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7ff8a471b470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff8a471b7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7ff8a47142e8" loc="62:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7ff8a47142e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a4714638"/>
        <function-ref name="write" scoped="" ref="0x7ff8a47147c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7ff8a47112e8" loc="68:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7ff8a47112e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a4711638"/>
        <function-ref name="write" scoped="" ref="0x7ff8a47117c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7ff8a4708c10" loc="84:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7ff8a4708c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a4707020"/>
        <function-ref name="write" scoped="" ref="0x7ff8a47071a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7ff8a470dc10" loc="75:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7ff8a470dc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a470c020"/>
        <function-ref name="write" scoped="" ref="0x7ff8a470c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7ff8a4707470" loc="85:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7ff8a4707470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a47077c0"/>
        <function-ref name="write" scoped="" ref="0x7ff8a4707948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7ff8a470f470" loc="70:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7ff8a470f470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a470f7c0"/>
        <function-ref name="write" scoped="" ref="0x7ff8a470f948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7ff8a471a718" loc="48:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7ff8a471a718"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff8a471aa68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7ff8a470fc10" loc="71:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7ff8a470fc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a470e020"/>
        <function-ref name="write" scoped="" ref="0x7ff8a470e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ff8a471ee60" loc="41:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ff8a471ee60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff8a471d1e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff8a471d370"/>
        <function-ref name="request" scoped="" ref="0x7ff8a471d4f8"/>
        <function-ref name="granted" scoped="" ref="0x7ff8a471d680"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff8a471d808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7ff8a4715060" loc="57:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7ff8a4715060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff8a47153b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7ff8a4715c90" loc="59:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7ff8a4715c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff8a4714020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7ff8a46ff2e8" loc="100:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7ff8a46ff2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a46ff638"/>
        <function-ref name="write" scoped="" ref="0x7ff8a46ff7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7ff8a4700a88" loc="99:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7ff8a4700a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a4700dd8"/>
        <function-ref name="write" scoped="" ref="0x7ff8a46ff020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7ff8a4718638" loc="53:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7ff8a4718638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff8a4718988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7ff8a47002e8" loc="96:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7ff8a47002e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a4700638"/>
        <function-ref name="write" scoped="" ref="0x7ff8a47007c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7ff8a46fc2e8" loc="106:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7ff8a46fc2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a46fc638"/>
        <function-ref name="write" scoped="" ref="0x7ff8a46fc7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7ff8a470ac10" loc="81:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7ff8a470ac10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a4708020"/>
        <function-ref name="write" scoped="" ref="0x7ff8a47081a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7ff8a4705470" loc="89:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7ff8a4705470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a47057c0"/>
        <function-ref name="write" scoped="" ref="0x7ff8a4705948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7ff8a471ad30" loc="49:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7ff8a471ad30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff8a47190d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7ff8a47199b8" loc="51:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7ff8a47199b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff8a4719d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7ff8a470cc10" loc="77:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7ff8a470cc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a470b020"/>
        <function-ref name="write" scoped="" ref="0x7ff8a470b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7ff8a4715678" loc="58:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7ff8a4715678"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff8a47159c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7ff8a470b470" loc="78:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7ff8a470b470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a470b7c0"/>
        <function-ref name="write" scoped="" ref="0x7ff8a470b948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7ff8a4703c10" loc="94:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7ff8a4703c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a47015e8"/>
        <function-ref name="write" scoped="" ref="0x7ff8a4701770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7ff8a46f9780" loc="112:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7ff8a46f9780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7ff8a46f9ad0"/>
        <function-ref name="writeDone" scoped="" ref="0x7ff8a46f9c58"/>
        <function-ref name="write" scoped="" ref="0x7ff8a46f9de0"/>
        <function-ref name="beginRead" scoped="" ref="0x7ff8a46f8020"/>
        <function-ref name="readDone" scoped="" ref="0x7ff8a46f81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7ff8a46e4470" loc="69:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7ff8a46e4470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a46e49c0"/>
        <function-ref name="write" scoped="" ref="0x7ff8a46e4b48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7ff8a46ef900" loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7ff8a46ef900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff8a46efc50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7ff8a46e8470" loc="63:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7ff8a46e8470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a46e87c0"/>
        <function-ref name="write" scoped="" ref="0x7ff8a46e8948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7ff8a46e3d98" loc="72:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7ff8a46e3d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a46e2170"/>
        <function-ref name="write" scoped="" ref="0x7ff8a46e22f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7ff8a46db470" loc="86:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7ff8a46db470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a46db7c0"/>
        <function-ref name="write" scoped="" ref="0x7ff8a46db948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7ff8a46e25c0" loc="73:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7ff8a46e25c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a46e2910"/>
        <function-ref name="write" scoped="" ref="0x7ff8a46e2a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7ff8a46cf7c0" loc="108:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7ff8a46cf7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a46cfb10"/>
        <function-ref name="write" scoped="" ref="0x7ff8a46cfc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7ff8a46d17c0" loc="104:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7ff8a46d17c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a46d1b10"/>
        <function-ref name="write" scoped="" ref="0x7ff8a46d1c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7ff8a46eec50" loc="50:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7ff8a46eec50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff8a46ec020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7ff8a46d7c10" loc="93:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7ff8a46d7c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a46d6020"/>
        <function-ref name="write" scoped="" ref="0x7ff8a46d61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7ff8a46d27c0" loc="102:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7ff8a46d27c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a46d2b10"/>
        <function-ref name="write" scoped="" ref="0x7ff8a46d2c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7ff8a46e6470" loc="65:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7ff8a46e6470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a46e67c0"/>
        <function-ref name="write" scoped="" ref="0x7ff8a46e6948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7ff8a46e5470" loc="67:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7ff8a46e5470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a46e57c0"/>
        <function-ref name="write" scoped="" ref="0x7ff8a46e5948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7ff8a46ddc10" loc="83:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7ff8a46ddc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a46dc020"/>
        <function-ref name="write" scoped="" ref="0x7ff8a46dc1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7ff8a46de470" loc="79:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7ff8a46de470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a46de7c0"/>
        <function-ref name="write" scoped="" ref="0x7ff8a46de948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7ff8a46e2d60" loc="74:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7ff8a46e2d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a46e00d8"/>
        <function-ref name="write" scoped="" ref="0x7ff8a46e0260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7ff8a46f02a8" loc="42:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7ff8a46f02a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7ff8a46f05f8"/>
        <function-ref name="abortRelease" scoped="" ref="0x7ff8a46f0780"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7ff8a46f0908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7ff8a46eb638" loc="54:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7ff8a46eb638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff8a46eb988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7ff8a46ebc50" loc="55:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7ff8a46ebc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff8a46ea0d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7ff8a46d5060" loc="95:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7ff8a46d5060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a46d53b0"/>
        <function-ref name="write" scoped="" ref="0x7ff8a46d5538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7ff8a46ea3a0" loc="56:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7ff8a46ea3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff8a46ea6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7ff8a46d1020" loc="103:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7ff8a46d1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a46d1370"/>
        <function-ref name="write" scoped="" ref="0x7ff8a46d14f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7ff8a46ec900" loc="52:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7ff8a46ec900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff8a46ecc50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7ff8a46d7470" loc="92:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7ff8a46d7470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a46d77c0"/>
        <function-ref name="write" scoped="" ref="0x7ff8a46d7948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7ff8a46e6c10" loc="66:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7ff8a46e6c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a46e5020"/>
        <function-ref name="write" scoped="" ref="0x7ff8a46e51a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7ff8a46e8c10" loc="64:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7ff8a46e8c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a46e6020"/>
        <function-ref name="write" scoped="" ref="0x7ff8a46e61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7ff8a46ef2e8" loc="46:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7ff8a46ef2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff8a46ef638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7ff8a46d8470" loc="90:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7ff8a46d8470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a46d87c0"/>
        <function-ref name="write" scoped="" ref="0x7ff8a46d8948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7ff8a46dbc10" loc="87:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7ff8a46dbc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a46d9020"/>
        <function-ref name="write" scoped="" ref="0x7ff8a46d91a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7ff8a46d8c10" loc="91:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7ff8a46d8c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a46d7020"/>
        <function-ref name="write" scoped="" ref="0x7ff8a46d71a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7ff8a46cf020" loc="107:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7ff8a46cf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a46cf370"/>
        <function-ref name="write" scoped="" ref="0x7ff8a46cf4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7ff8a46d0020" loc="105:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7ff8a46d0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a46d0370"/>
        <function-ref name="write" scoped="" ref="0x7ff8a46d04f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7ff8a46dec10" loc="80:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7ff8a46dec10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a46dd020"/>
        <function-ref name="write" scoped="" ref="0x7ff8a46dd1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7ff8a46d9470" loc="88:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7ff8a46d9470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a46d97c0"/>
        <function-ref name="write" scoped="" ref="0x7ff8a46d9948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7ff8a46d2020" loc="101:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7ff8a46d2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a46d2370"/>
        <function-ref name="write" scoped="" ref="0x7ff8a46d24f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7ff8a46e0cc8" loc="76:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7ff8a46e0cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a46df0a0"/>
        <function-ref name="write" scoped="" ref="0x7ff8a46df228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7ff8a46ce020" loc="111:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7ff8a46ce020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7ff8a46ce370"/>
        <function-ref name="writeDone" scoped="" ref="0x7ff8a46ce4f8"/>
        <function-ref name="write" scoped="" ref="0x7ff8a46ce680"/>
        <function-ref name="beginRead" scoped="" ref="0x7ff8a46ce808"/>
        <function-ref name="readDone" scoped="" ref="0x7ff8a46ce990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7ff8a46f0bd0" loc="45:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7ff8a46f0bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff8a46ef020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7ff8a46e9c50" loc="62:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7ff8a46e9c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a46e8020"/>
        <function-ref name="write" scoped="" ref="0x7ff8a46e81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7ff8a46e5c10" loc="68:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7ff8a46e5c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a46e4020"/>
        <function-ref name="write" scoped="" ref="0x7ff8a46e41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7ff8a46dc470" loc="84:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7ff8a46dc470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a46dc7c0"/>
        <function-ref name="write" scoped="" ref="0x7ff8a46dc948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7ff8a46e0528" loc="75:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7ff8a46e0528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a46e0878"/>
        <function-ref name="write" scoped="" ref="0x7ff8a46e0a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7ff8a46dcc10" loc="85:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7ff8a46dcc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a46db020"/>
        <function-ref name="write" scoped="" ref="0x7ff8a46db1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7ff8a46e4e10" loc="70:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7ff8a46e4e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a46e31a8"/>
        <function-ref name="write" scoped="" ref="0x7ff8a46e3330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7ff8a46ee020" loc="48:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7ff8a46ee020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff8a46ee370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7ff8a46e35f8" loc="71:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7ff8a46e35f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a46e3948"/>
        <function-ref name="write" scoped="" ref="0x7ff8a46e3ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ff8a46f1558" loc="41:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ff8a46f1558"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff8a46f18a8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff8a46f1a30"/>
        <function-ref name="request" scoped="" ref="0x7ff8a46f1bb8"/>
        <function-ref name="granted" scoped="" ref="0x7ff8a46f1d40"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff8a46f0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7ff8a46ea9b8" loc="57:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7ff8a46ea9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff8a46ead08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7ff8a46e9638" loc="59:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7ff8a46e9638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff8a46e9988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7ff8a46d47c0" loc="100:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7ff8a46d47c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a46d4b10"/>
        <function-ref name="write" scoped="" ref="0x7ff8a46d4c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7ff8a46d4020" loc="99:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7ff8a46d4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a46d4370"/>
        <function-ref name="write" scoped="" ref="0x7ff8a46d44f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7ff8a46eb020" loc="53:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7ff8a46eb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff8a46eb370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7ff8a46d5800" loc="96:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7ff8a46d5800"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a46d5b50"/>
        <function-ref name="write" scoped="" ref="0x7ff8a46d5cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7ff8a46d07c0" loc="106:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7ff8a46d07c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a46d0b10"/>
        <function-ref name="write" scoped="" ref="0x7ff8a46d0c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7ff8a46dd470" loc="81:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7ff8a46dd470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a46dd7c0"/>
        <function-ref name="write" scoped="" ref="0x7ff8a46dd948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7ff8a46d9c10" loc="89:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7ff8a46d9c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a46d8020"/>
        <function-ref name="write" scoped="" ref="0x7ff8a46d81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7ff8a46ee638" loc="49:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7ff8a46ee638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff8a46ee988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7ff8a46ec2e8" loc="51:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7ff8a46ec2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff8a46ec638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7ff8a46df4f0" loc="77:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7ff8a46df4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a46df840"/>
        <function-ref name="write" scoped="" ref="0x7ff8a46df9c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7ff8a46e9020" loc="58:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7ff8a46e9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff8a46e9370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7ff8a46dfc90" loc="78:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7ff8a46dfc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a46de020"/>
        <function-ref name="write" scoped="" ref="0x7ff8a46de1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7ff8a46d6470" loc="94:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7ff8a46d6470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a46d6bc0"/>
        <function-ref name="write" scoped="" ref="0x7ff8a46d6d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7ff8a46cec58" loc="112:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7ff8a46cec58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7ff8a46cd020"/>
        <function-ref name="writeDone" scoped="" ref="0x7ff8a46cd1a8"/>
        <function-ref name="write" scoped="" ref="0x7ff8a46cd330"/>
        <function-ref name="beginRead" scoped="" ref="0x7ff8a46cd4b8"/>
        <function-ref name="readDone" scoped="" ref="0x7ff8a46cd640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x7ff8a46c4690" loc="54:/home/paul/wsnpr/tinyos-main/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7ff8a46c4690"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7ff8a46c49e0"/>
        <function-ref name="changed" scoped="" ref="0x7ff8a46c4b68"/>
        <function-ref name="amGroup" scoped="" ref="0x7ff8a46c4cf0"/>
        <function-ref name="setAddress" scoped="" ref="0x7ff8a46c4e78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7ff8a46c6cd8" loc="13:/home/paul/wsnpr/tinyos-main/tos/chips/ds2411/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7ff8a46c6cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7ff8a46af0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7ff8a46ab190" loc="5:/home/paul/wsnpr/tinyos-main/tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7ff8a46ab190"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7ff8a46ab4e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadId48" ref="0x7ff8a46a8648" loc="8:/home/paul/wsnpr/tinyos-main/tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7ff8a46a8648"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a46a8998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x7ff8a46aead0" loc="8:/home/paul/wsnpr/tinyos-main/tos/chips/ds2411/Ds2411C.nc">
      <component-ref qname="Ds2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7ff8a46aead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a46aee20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OneWire" ref="0x7ff8a46933f8" loc="14:/home/paul/wsnpr/tinyos-main/tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7ff8a46933f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a4693748"/>
        <function-ref name="write" scoped="" ref="0x7ff8a46938d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerControl" ref="0x7ff8a4693c40" loc="15:/home/paul/wsnpr/tinyos-main/tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerControl" scoped="" ref="0x7ff8a4693c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7ff8a4697020"/>
        <function-ref name="stop" scoped="" ref="0x7ff8a46971a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x7ff8a4699b08" loc="11:/home/paul/wsnpr/tinyos-main/tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7ff8a4699b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a4699e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x7ff8a469cba0" loc="8:/home/paul/wsnpr/tinyos-main/tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7ff8a469cba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a4684020"/>
        <function-ref name="write" scoped="" ref="0x7ff8a46841a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x7ff8a4684530" loc="11:/home/paul/wsnpr/tinyos-main/tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x7ff8a4684530"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a4684880"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a4684a08"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a4684b90"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a4684d18"/>
        <function-ref name="get" scoped="" ref="0x7ff8a4683020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a46831a8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a4683330"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a46834b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7ff8a467b748" loc="15:/home/paul/wsnpr/tinyos-main/tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7ff8a467b748"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff8a5294788"/>
            <typename><typedef-ref name="TMicro" ref="0x7ff8a5294ae0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7ff8a467e578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x7ff8a4680108" loc="11:/home/paul/wsnpr/tinyos-main/tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7ff8a4680108"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a4680458"/>
        <function-ref name="write" scoped="" ref="0x7ff8a46805e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x7ff8a4680968" loc="14:/home/paul/wsnpr/tinyos-main/tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x7ff8a4680968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a4680cb8"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a4680e40"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a467f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a467f1a8"/>
        <function-ref name="get" scoped="" ref="0x7ff8a467f330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a467f4b8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a467f640"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a467f7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7ff8a4682b78" loc="41:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7ff8a4682b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff8a5294788"/>
            <typename><typedef-ref name="TMicro" ref="0x7ff8a5294ae0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7ff8a465b8f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7ff8a4659bc8" loc="54:/home/paul/wsnpr/tinyos-main/tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7ff8a4659bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff8a5294788"/>
            <typename><typedef-ref name="TMicro" ref="0x7ff8a5294ae0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7ff8a464a948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7ff8a4649020" loc="55:/home/paul/wsnpr/tinyos-main/tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7ff8a4649020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff8a5294788"/>
            <typename><typedef-ref name="TMicro" ref="0x7ff8a5294ae0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ff8a4649d70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff8a46486b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff8a4648230"/>
        <function-ref name="overflow" scoped="" ref="0x7ff8a4648b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430CounterMicro" ref="0x7ff8a46433a8" loc="46:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430CounterMicroC.nc">
      <component-ref qname="Msp430CounterMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7ff8a46433a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff8a5294788"/>
            <typename><typedef-ref name="TMicro" ref="0x7ff8a5294ae0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ff8a4642130"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff8a4642a40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff8a46425b8"/>
        <function-ref name="overflow" scoped="" ref="0x7ff8a4641020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7ff8a463d928" loc="45:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7ff8a463d928"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff8a463dc78"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ff8a463de00"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff8a463c020"/>
        <function-ref name="get" scoped="" ref="0x7ff8a463c1a8"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff8a463c330"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff8a463c4b8"/>
        <function-ref name="getMode" scoped="" ref="0x7ff8a463c640"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff8a463c7c8"/>
        <function-ref name="overflow" scoped="" ref="0x7ff8a463c950"/>
        <function-ref name="setMode" scoped="" ref="0x7ff8a463cad8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7ff8a463cc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7ff8a4640980" loc="44:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7ff8a4640980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff8a5294788"/>
            <typename><typedef-ref name="TMicro" ref="0x7ff8a5294ae0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ff8a463e730"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff8a463d088"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff8a463ebb8"/>
        <function-ref name="overflow" scoped="" ref="0x7ff8a463d510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Gpio" ref="0x7ff8a4685378" loc="3:/home/paul/wsnpr/tinyos-main/tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <component-ref qname="HplDs2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Gpio" scoped="" ref="0x7ff8a4685378"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a46856c8"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a4685850"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a46859d8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a4685b60"/>
        <function-ref name="get" scoped="" ref="0x7ff8a4685ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a4685e70"/>
        <function-ref name="set" scoped="" ref="0x7ff8a4638020"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a46381a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7ff8a46355f8" loc="44:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7ff8a46355f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a4635948"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a4635ad0"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a4635c58"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a4635de0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a4634020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a46341a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a4634330"/>
        <function-ref name="get" scoped="" ref="0x7ff8a46344b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a4634640"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a46347c8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a4634950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a4634ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a4634c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a4633020"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a46331a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7ff8a46374e0" loc="43:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7ff8a46374e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a4637830"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a46379b8"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a4637b40"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a4637cc8"/>
        <function-ref name="get" scoped="" ref="0x7ff8a4637e50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a4635020"/>
        <function-ref name="set" scoped="" ref="0x7ff8a46351a8"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a4635330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7ff8a462f020" loc="14:/home/paul/wsnpr/tinyos-main/tos/chips/ds2411/Ds2411PowerControlC.nc">
      <component-ref qname="Ds2411PowerControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7ff8a462f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7ff8a462f370"/>
        <function-ref name="stop" scoped="" ref="0x7ff8a462f4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7ff8a4621140" loc="46:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7ff8a4621140"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7ff8a4621490"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7ff8a4621618"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7ff8a46217a0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7ff8a4621928"/>
        <function-ref name="setCca" scoped="" ref="0x7ff8a4621ab0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7ff8a4621c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7ff8a4620cc0" loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7ff8a4620cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7ff8a461f0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x7ff8a4622480" loc="45:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7ff8a4622480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff8a46227d0"/>
        <function-ref name="cancel" scoped="" ref="0x7ff8a4622958"/>
        <function-ref name="modify" scoped="" ref="0x7ff8a4622ae0"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff8a4622c68"/>
        <function-ref name="resend" scoped="" ref="0x7ff8a4622df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7ff8a4625c58" loc="44:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7ff8a4625c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7ff8a4622020"/>
        <function-ref name="stop" scoped="" ref="0x7ff8a46221a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7ff8a461f458" loc="48:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7ff8a461f458"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7ff8a461f7a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7ff8a46127c0" loc="51:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7ff8a46127c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7ff8a4612b10"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7ff8a4612c98"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7ff8a4612e20"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7ff8a4611020"/>
        <function-ref name="setCca" scoped="" ref="0x7ff8a46111a8"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7ff8a4611330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7ff8a460a460" loc="58:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7ff8a460a460"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff8a5294020"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff8a5294378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff8a6018020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7ff8a4609900"/>
        <function-ref name="clear" scoped="" ref="0x7ff8a4608020"/>
        <function-ref name="isValid" scoped="" ref="0x7ff8a4609220"/>
        <function-ref name="set" scoped="" ref="0x7ff8a4608700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7ff8a45f5de0" loc="78:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7ff8a45f5de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a45f4170"/>
        <function-ref name="write" scoped="" ref="0x7ff8a45f42f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7ff8a45f4650" loc="79:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7ff8a45f4650"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a45f49a0"/>
        <function-ref name="write" scoped="" ref="0x7ff8a45f4b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7ff8a4611738" loc="52:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7ff8a4611738"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7ff8a4611a88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x7ff8a45f7478" loc="72:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7ff8a45f7478"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff8a45f77c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x7ff8a45fed60" loc="60:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7ff8a45fed60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7ff8a46050d8"/>
        <function-ref name="disable" scoped="" ref="0x7ff8a4605260"/>
        <function-ref name="captured" scoped="" ref="0x7ff8a46053e8"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7ff8a4605570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x7ff8a4610820" loc="55:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BackoffTimer" scoped="" ref="0x7ff8a4610820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff8a5294020"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff8a5294378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff8a6018020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ff8a460d020"/>
        <function-ref name="fired" scoped="" ref="0x7ff8a460e020"/>
        <function-ref name="startAt" scoped="" ref="0x7ff8a460e930"/>
        <function-ref name="isRunning" scoped="" ref="0x7ff8a460e4a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x7ff8a460d4a8"/>
        <function-ref name="start" scoped="" ref="0x7ff8a460f598"/>
        <function-ref name="stop" scoped="" ref="0x7ff8a460fa70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7ff8a460d940" loc="56:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7ff8a460d940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7ff8a460dc90"/>
        <function-ref name="setNetwork" scoped="" ref="0x7ff8a460de18"/>
        <function-ref name="getRssi" scoped="" ref="0x7ff8a460b020"/>
        <function-ref name="getNetwork" scoped="" ref="0x7ff8a460b1a8"/>
        <function-ref name="getPower" scoped="" ref="0x7ff8a460b330"/>
        <function-ref name="getLqi" scoped="" ref="0x7ff8a460b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x7ff8a45f9538" loc="68:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7ff8a45f9538"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a45f9888"/>
        <function-ref name="write" scoped="" ref="0x7ff8a45f9a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7ff8a45f9da8" loc="69:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7ff8a45f9da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a45f8170"/>
        <function-ref name="write" scoped="" ref="0x7ff8a45f82f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x7ff8a45ed750" loc="83:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7ff8a45ed750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ff8a45edaa0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7ff8a45edc28"/>
        <function-ref name="sfd" scoped="" ref="0x7ff8a45eddb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7ff8a46169f8" loc="50:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7ff8a46169f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff8a4616d48"/>
        <function-ref name="cancel" scoped="" ref="0x7ff8a4612020"/>
        <function-ref name="modify" scoped="" ref="0x7ff8a46121a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff8a4612330"/>
        <function-ref name="resend" scoped="" ref="0x7ff8a46124b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x7ff8a45fbcb0" loc="66:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7ff8a45fbcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7ff8a45fa0a0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7ff8a45fa228"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7ff8a45fa3b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x7ff8a45f7b68" loc="73:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7ff8a45f7b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff8a45f6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7ff8a4603c98" loc="62:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7ff8a4603c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a45fd020"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a45fd1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a45fd330"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a45fd4b8"/>
        <function-ref name="get" scoped="" ref="0x7ff8a45fd640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a45fd7c8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a45fd950"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a45fdad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ff8a4617b28" loc="48:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ff8a4617b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff8a4617e78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7ff8a460b7e8" loc="57:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ff8a460b7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7ff8a460bb38"/>
        <function-ref name="getHeader" scoped="" ref="0x7ff8a460bcc0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7ff8a460be48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x7ff8a45fe1d8" loc="59:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7ff8a45fe1d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ff8a45fe528"/>
        <function-ref name="isSet" scoped="" ref="0x7ff8a45fe6b0"/>
        <function-ref name="cancel" scoped="" ref="0x7ff8a45fe838"/>
        <function-ref name="set" scoped="" ref="0x7ff8a45fe9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7ff8a45f63d0" loc="74:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7ff8a45f63d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a45f6920"/>
        <function-ref name="write" scoped="" ref="0x7ff8a45f6aa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7ff8a45fb020" loc="65:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7ff8a45fb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff8a45fb370"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff8a45fb4f8"/>
        <function-ref name="request" scoped="" ref="0x7ff8a45fb680"/>
        <function-ref name="granted" scoped="" ref="0x7ff8a45fb808"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff8a45fb990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x7ff8a46058b8" loc="61:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7ff8a46058b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a4605d08"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a4603020"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a46031a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a4603330"/>
        <function-ref name="get" scoped="" ref="0x7ff8a46034b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a4603640"/>
        <function-ref name="set" scoped="" ref="0x7ff8a46037c8"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a4603950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7ff8a45f4e80" loc="80:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7ff8a45f4e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a45f31f8"/>
        <function-ref name="write" scoped="" ref="0x7ff8a45f3380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x7ff8a45f36f0" loc="81:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7ff8a45f36f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a45f3a40"/>
        <function-ref name="write" scoped="" ref="0x7ff8a45f3bc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7ff8a45f8670" loc="70:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7ff8a45f8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff8a45f89c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x7ff8a45fde20" loc="63:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7ff8a45fde20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a45fc1a8"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a45fc330"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a45fc4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a45fc640"/>
        <function-ref name="get" scoped="" ref="0x7ff8a45fc7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a45fc950"/>
        <function-ref name="set" scoped="" ref="0x7ff8a45fcad8"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a45fcc60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7ff8a45f10c0" loc="84:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7ff8a45f10c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7ff8a45f1410"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7ff8a45f1598"/>
        <function-ref name="led1On" scoped="" ref="0x7ff8a45f1720"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7ff8a45f18a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7ff8a45f1a30"/>
        <function-ref name="get" scoped="" ref="0x7ff8a45f1bb8"/>
        <function-ref name="led1Off" scoped="" ref="0x7ff8a45f1d40"/>
        <function-ref name="led2Off" scoped="" ref="0x7ff8a45f04b8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a45f0020"/>
        <function-ref name="led0On" scoped="" ref="0x7ff8a45f01a8"/>
        <function-ref name="led2On" scoped="" ref="0x7ff8a45f0330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7ff8a45f5558" loc="77:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7ff8a45f5558"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a45f58a8"/>
        <function-ref name="write" scoped="" ref="0x7ff8a45f5a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7ff8a4616198" loc="49:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7ff8a4616198"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7ff8a46164e8"/>
        <function-ref name="stop" scoped="" ref="0x7ff8a4616670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x7ff8a45fa720" loc="67:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7ff8a45fa720"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7ff8a45faa70"/>
        <function-ref name="writeDone" scoped="" ref="0x7ff8a45fabf8"/>
        <function-ref name="write" scoped="" ref="0x7ff8a45fad80"/>
        <function-ref name="beginRead" scoped="" ref="0x7ff8a45f9020"/>
        <function-ref name="readDone" scoped="" ref="0x7ff8a45f91a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x7ff8a45f8d40" loc="71:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7ff8a45f8d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff8a45f70d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x7ff8a45f6e30" loc="76:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7ff8a45f6e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff8a45f51a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7ff8a4611e80" loc="53:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7ff8a4611e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7ff8a46101f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7ff8a4558470" loc="69:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7ff8a4558470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a45589c0"/>
        <function-ref name="write" scoped="" ref="0x7ff8a4558b48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7ff8a45639b8" loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7ff8a45639b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff8a4563d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7ff8a455c470" loc="63:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7ff8a455c470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a455c7c0"/>
        <function-ref name="write" scoped="" ref="0x7ff8a455c948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7ff8a4557d98" loc="72:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7ff8a4557d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a4556170"/>
        <function-ref name="write" scoped="" ref="0x7ff8a45562f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7ff8a454f470" loc="86:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7ff8a454f470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a454f7c0"/>
        <function-ref name="write" scoped="" ref="0x7ff8a454f948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7ff8a45565c0" loc="73:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7ff8a45565c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a4556910"/>
        <function-ref name="write" scoped="" ref="0x7ff8a4556a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7ff8a45437c0" loc="108:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7ff8a45437c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a4543b10"/>
        <function-ref name="write" scoped="" ref="0x7ff8a4543c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7ff8a45457c0" loc="104:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7ff8a45457c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a4545b10"/>
        <function-ref name="write" scoped="" ref="0x7ff8a4545c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7ff8a4562c50" loc="50:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7ff8a4562c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff8a4560020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7ff8a454bc10" loc="93:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7ff8a454bc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a454a020"/>
        <function-ref name="write" scoped="" ref="0x7ff8a454a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7ff8a45467c0" loc="102:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7ff8a45467c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a4546b10"/>
        <function-ref name="write" scoped="" ref="0x7ff8a4546c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7ff8a455a470" loc="65:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7ff8a455a470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a455a7c0"/>
        <function-ref name="write" scoped="" ref="0x7ff8a455a948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7ff8a4559470" loc="67:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7ff8a4559470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a45597c0"/>
        <function-ref name="write" scoped="" ref="0x7ff8a4559948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7ff8a4551c10" loc="83:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7ff8a4551c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a4550020"/>
        <function-ref name="write" scoped="" ref="0x7ff8a45501a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7ff8a4552470" loc="79:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7ff8a4552470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a45527c0"/>
        <function-ref name="write" scoped="" ref="0x7ff8a4552948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7ff8a4556d60" loc="74:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7ff8a4556d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a45540d8"/>
        <function-ref name="write" scoped="" ref="0x7ff8a4554260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7ff8a4564430" loc="42:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7ff8a4564430"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7ff8a4564780"/>
        <function-ref name="abortRelease" scoped="" ref="0x7ff8a4564908"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7ff8a4564a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7ff8a455f638" loc="54:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7ff8a455f638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff8a455f988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7ff8a455fc50" loc="55:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7ff8a455fc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff8a455e0d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7ff8a4549060" loc="95:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7ff8a4549060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a45493b0"/>
        <function-ref name="write" scoped="" ref="0x7ff8a4549538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7ff8a455e3a0" loc="56:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7ff8a455e3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff8a455e6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7ff8a4545020" loc="103:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7ff8a4545020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a4545370"/>
        <function-ref name="write" scoped="" ref="0x7ff8a45454f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7ff8a4560900" loc="52:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7ff8a4560900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff8a4560c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7ff8a454b470" loc="92:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7ff8a454b470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a454b7c0"/>
        <function-ref name="write" scoped="" ref="0x7ff8a454b948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7ff8a455ac10" loc="66:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7ff8a455ac10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a4559020"/>
        <function-ref name="write" scoped="" ref="0x7ff8a45591a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7ff8a455cc10" loc="64:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7ff8a455cc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a455a020"/>
        <function-ref name="write" scoped="" ref="0x7ff8a455a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7ff8a45633a0" loc="46:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7ff8a45633a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff8a45636f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7ff8a454c470" loc="90:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7ff8a454c470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a454c7c0"/>
        <function-ref name="write" scoped="" ref="0x7ff8a454c948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7ff8a454fc10" loc="87:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7ff8a454fc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a454d020"/>
        <function-ref name="write" scoped="" ref="0x7ff8a454d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7ff8a454cc10" loc="91:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7ff8a454cc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a454b020"/>
        <function-ref name="write" scoped="" ref="0x7ff8a454b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7ff8a4543020" loc="107:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7ff8a4543020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a4543370"/>
        <function-ref name="write" scoped="" ref="0x7ff8a45434f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7ff8a4544020" loc="105:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7ff8a4544020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a4544370"/>
        <function-ref name="write" scoped="" ref="0x7ff8a45444f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7ff8a4552c10" loc="80:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7ff8a4552c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a4551020"/>
        <function-ref name="write" scoped="" ref="0x7ff8a45511a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7ff8a454d470" loc="88:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7ff8a454d470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a454d7c0"/>
        <function-ref name="write" scoped="" ref="0x7ff8a454d948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7ff8a4546020" loc="101:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7ff8a4546020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a4546370"/>
        <function-ref name="write" scoped="" ref="0x7ff8a45464f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7ff8a4554cc8" loc="76:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7ff8a4554cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a45530a0"/>
        <function-ref name="write" scoped="" ref="0x7ff8a4553228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7ff8a4542020" loc="111:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7ff8a4542020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7ff8a4542370"/>
        <function-ref name="writeDone" scoped="" ref="0x7ff8a45424f8"/>
        <function-ref name="write" scoped="" ref="0x7ff8a4542680"/>
        <function-ref name="beginRead" scoped="" ref="0x7ff8a4542808"/>
        <function-ref name="readDone" scoped="" ref="0x7ff8a4542990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7ff8a4564d58" loc="45:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7ff8a4564d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff8a45630d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7ff8a455dc50" loc="62:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7ff8a455dc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a455c020"/>
        <function-ref name="write" scoped="" ref="0x7ff8a455c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7ff8a4559c10" loc="68:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7ff8a4559c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a4558020"/>
        <function-ref name="write" scoped="" ref="0x7ff8a45581a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7ff8a4550470" loc="84:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7ff8a4550470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a45507c0"/>
        <function-ref name="write" scoped="" ref="0x7ff8a4550948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7ff8a4554528" loc="75:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7ff8a4554528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a4554878"/>
        <function-ref name="write" scoped="" ref="0x7ff8a4554a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7ff8a4550c10" loc="85:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7ff8a4550c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a454f020"/>
        <function-ref name="write" scoped="" ref="0x7ff8a454f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7ff8a4558e10" loc="70:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7ff8a4558e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a45571a8"/>
        <function-ref name="write" scoped="" ref="0x7ff8a4557330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7ff8a4562020" loc="48:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7ff8a4562020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff8a4562370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7ff8a45575f8" loc="71:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7ff8a45575f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a4557948"/>
        <function-ref name="write" scoped="" ref="0x7ff8a4557ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ff8a45657d0" loc="41:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ff8a45657d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff8a4565b20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff8a4565ca8"/>
        <function-ref name="request" scoped="" ref="0x7ff8a4565e30"/>
        <function-ref name="granted" scoped="" ref="0x7ff8a4564020"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff8a45641a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7ff8a455e9b8" loc="57:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7ff8a455e9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff8a455ed08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7ff8a455d638" loc="59:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7ff8a455d638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff8a455d988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7ff8a45487c0" loc="100:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7ff8a45487c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a4548b10"/>
        <function-ref name="write" scoped="" ref="0x7ff8a4548c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7ff8a4548020" loc="99:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7ff8a4548020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a4548370"/>
        <function-ref name="write" scoped="" ref="0x7ff8a45484f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7ff8a455f020" loc="53:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7ff8a455f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff8a455f370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7ff8a4549800" loc="96:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7ff8a4549800"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a4549b50"/>
        <function-ref name="write" scoped="" ref="0x7ff8a4549cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7ff8a45447c0" loc="106:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7ff8a45447c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a4544b10"/>
        <function-ref name="write" scoped="" ref="0x7ff8a4544c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7ff8a4551470" loc="81:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7ff8a4551470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a45517c0"/>
        <function-ref name="write" scoped="" ref="0x7ff8a4551948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7ff8a454dc10" loc="89:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7ff8a454dc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a454c020"/>
        <function-ref name="write" scoped="" ref="0x7ff8a454c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7ff8a4562638" loc="49:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7ff8a4562638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff8a4562988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7ff8a45602e8" loc="51:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7ff8a45602e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff8a4560638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7ff8a45534f0" loc="77:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7ff8a45534f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a4553840"/>
        <function-ref name="write" scoped="" ref="0x7ff8a45539c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7ff8a455d020" loc="58:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7ff8a455d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff8a455d370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7ff8a4553c90" loc="78:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7ff8a4553c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a4552020"/>
        <function-ref name="write" scoped="" ref="0x7ff8a45521a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7ff8a454a470" loc="94:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7ff8a454a470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a454abc0"/>
        <function-ref name="write" scoped="" ref="0x7ff8a454ad48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7ff8a4542c58" loc="112:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7ff8a4542c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7ff8a4541020"/>
        <function-ref name="writeDone" scoped="" ref="0x7ff8a45411a8"/>
        <function-ref name="write" scoped="" ref="0x7ff8a4541330"/>
        <function-ref name="beginRead" scoped="" ref="0x7ff8a45414b8"/>
        <function-ref name="readDone" scoped="" ref="0x7ff8a4541640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7ff8a4534808" loc="42:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7ff8a4534808"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ff8a4534b58"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7ff8a4534ce0"/>
        <function-ref name="sfd" scoped="" ref="0x7ff8a4534e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7ff8a4532168" loc="43:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7ff8a4532168"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ff8a45324b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7ff8a45328c0" loc="44:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7ff8a45328c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7ff8a4532c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7ff8a4534020" loc="41:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7ff8a4534020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7ff8a4534370"/>
        <function-ref name="stop" scoped="" ref="0x7ff8a45344f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x7ff8a452b688" loc="54:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7ff8a452b688"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a452b9d8"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a452bb60"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a452bce8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a452be70"/>
        <function-ref name="get" scoped="" ref="0x7ff8a452a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a452a1a8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a452a330"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a452a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7ff8a4524af0" loc="64:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7ff8a4524af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7ff8a4524e40"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7ff8a4523020"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7ff8a45231a8"/>
        <function-ref name="syncDone" scoped="" ref="0x7ff8a4523330"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7ff8a45234b8"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7ff8a4523640"/>
        <function-ref name="setChannel" scoped="" ref="0x7ff8a45237c8"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7ff8a4523950"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7ff8a4523ad8"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7ff8a4523c60"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7ff8a4523de8"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7ff8a4522020"/>
        <function-ref name="sync" scoped="" ref="0x7ff8a45221a8"/>
        <function-ref name="getChannel" scoped="" ref="0x7ff8a4522430"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7ff8a45225b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x7ff8a450ee38" loc="148:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveDone_task" scoped="" ref="0x7ff8a450ee38"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ff8a450c1c0"/>
        <function-ref name="runTask" scoped="" ref="0x7ff8a450c348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7ff8a4522b80" loc="65:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7ff8a4522b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff8a5294020"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff8a5294378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff8a6018020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7ff8a451f020"/>
        <function-ref name="clear" scoped="" ref="0x7ff8a451f700"/>
        <function-ref name="isValid" scoped="" ref="0x7ff8a45218f8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a451fde0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x7ff8a452a818" loc="55:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7ff8a452a818"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a452ab68"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a452acf0"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a452ae78"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a4529030"/>
        <function-ref name="get" scoped="" ref="0x7ff8a45291b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a4529340"/>
        <function-ref name="set" scoped="" ref="0x7ff8a45294c8"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a4529650"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7ff8a451d6a8" loc="69:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7ff8a451d6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a451d9f8"/>
        <function-ref name="write" scoped="" ref="0x7ff8a451db80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7ff8a451b020" loc="70:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7ff8a451b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a451b370"/>
        <function-ref name="write" scoped="" ref="0x7ff8a451b4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x7ff8a451a108" loc="72:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7ff8a451a108"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a451a458"/>
        <function-ref name="write" scoped="" ref="0x7ff8a451a5e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7ff8a4525328" loc="62:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7ff8a4525328"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7ff8a4525678"/>
        <function-ref name="setNetwork" scoped="" ref="0x7ff8a4525800"/>
        <function-ref name="getRssi" scoped="" ref="0x7ff8a4525988"/>
        <function-ref name="getNetwork" scoped="" ref="0x7ff8a4525b10"/>
        <function-ref name="getPower" scoped="" ref="0x7ff8a4525c98"/>
        <function-ref name="getLqi" scoped="" ref="0x7ff8a4525e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7ff8a452ec48" loc="49:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7ff8a452ec48"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ff8a452d020"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7ff8a452d1a8"/>
        <function-ref name="sfd" scoped="" ref="0x7ff8a452d330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x7ff8a4526398" loc="60:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7ff8a4526398"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff8a45266e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7ff8a452c420" loc="53:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7ff8a452c420"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a452c770"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a452c8f8"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a452ca80"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a452cc08"/>
        <function-ref name="get" scoped="" ref="0x7ff8a452cd90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a452b020"/>
        <function-ref name="set" scoped="" ref="0x7ff8a452b1a8"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a452b330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x7ff8a451a970" loc="73:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7ff8a451a970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a451acc0"/>
        <function-ref name="write" scoped="" ref="0x7ff8a451ae48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ff8a4531df8" loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ff8a4531df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff8a452e170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7ff8a4524188" loc="63:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ff8a4524188"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7ff8a45244d8"/>
        <function-ref name="getHeader" scoped="" ref="0x7ff8a4524660"/>
        <function-ref name="getMetadata" scoped="" ref="0x7ff8a45247e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7ff8a452d600" loc="50:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7ff8a452d600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ff8a452d950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7ff8a45286c0" loc="58:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7ff8a45286c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff8a4528a10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff8a4528b98"/>
        <function-ref name="request" scoped="" ref="0x7ff8a4528d20"/>
        <function-ref name="granted" scoped="" ref="0x7ff8a4527020"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff8a45271a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7ff8a451b850" loc="71:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7ff8a451b850"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a451bba0"/>
        <function-ref name="write" scoped="" ref="0x7ff8a451bd28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x7ff8a4527518" loc="59:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7ff8a4527518"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7ff8a4527868"/>
        <function-ref name="writeDone" scoped="" ref="0x7ff8a45279f0"/>
        <function-ref name="write" scoped="" ref="0x7ff8a4527b78"/>
        <function-ref name="beginRead" scoped="" ref="0x7ff8a4527d00"/>
        <function-ref name="readDone" scoped="" ref="0x7ff8a4526020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7ff8a4519210" loc="74:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7ff8a4519210"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff8a4519760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7ff8a452dd58" loc="51:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7ff8a452dd58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7ff8a452c0d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7ff8a4519a18" loc="76:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7ff8a4519a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7ff8a4519d68"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7ff8a4518020"/>
        <function-ref name="led1On" scoped="" ref="0x7ff8a45181a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7ff8a4518330"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7ff8a45184b8"/>
        <function-ref name="get" scoped="" ref="0x7ff8a4518640"/>
        <function-ref name="led1Off" scoped="" ref="0x7ff8a45187c8"/>
        <function-ref name="led2Off" scoped="" ref="0x7ff8a4518de8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a4518950"/>
        <function-ref name="led0On" scoped="" ref="0x7ff8a4518ad8"/>
        <function-ref name="led2On" scoped="" ref="0x7ff8a4518c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7ff8a451edc8" loc="68:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7ff8a451edc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a451d170"/>
        <function-ref name="write" scoped="" ref="0x7ff8a451d2f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x7ff8a451e6c8" loc="67:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7ff8a451e6c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff8a451ea18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x7ff8a4529a30" loc="56:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7ff8a4529a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff8a4529d80"/>
        <function-ref name="disable" scoped="" ref="0x7ff8a4528020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7ff8a45281a8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7ff8a4528330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x7ff8a4526a88" loc="61:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7ff8a4526a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff8a4525020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7ff8a452e460" loc="48:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7ff8a452e460"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7ff8a452e7b0"/>
        <function-ref name="stop" scoped="" ref="0x7ff8a452e938"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7ff8a44b06b0" loc="44:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7ff8a44b06b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7ff8a44b0a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7ff8a44b44b0" loc="41:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7ff8a44b44b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7ff8a44b4800"/>
        <function-ref name="setNetwork" scoped="" ref="0x7ff8a44b4988"/>
        <function-ref name="getRssi" scoped="" ref="0x7ff8a44b4b10"/>
        <function-ref name="getNetwork" scoped="" ref="0x7ff8a44b4c98"/>
        <function-ref name="getPower" scoped="" ref="0x7ff8a44b4e20"/>
        <function-ref name="getLqi" scoped="" ref="0x7ff8a44b1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7ff8a44af130" loc="46:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7ff8a44af130"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff8a5294020"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff8a5294378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff8a6018020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7ff8a44ae588"/>
        <function-ref name="clear" scoped="" ref="0x7ff8a44aec68"/>
        <function-ref name="isValid" scoped="" ref="0x7ff8a44afe80"/>
        <function-ref name="set" scoped="" ref="0x7ff8a44ac380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7ff8a44b1d08" loc="43:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ff8a44b1d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7ff8a44b00a0"/>
        <function-ref name="getHeader" scoped="" ref="0x7ff8a44b0228"/>
        <function-ref name="getMetadata" scoped="" ref="0x7ff8a44b03b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7ff8a44a8ac8" loc="48:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7ff8a44a8ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ff8a44a8e18"/>
        <function-ref name="isSet" scoped="" ref="0x7ff8a44a7020"/>
        <function-ref name="cancel" scoped="" ref="0x7ff8a44a71a8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a44a7330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7ff8a44ab020" loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7ff8a44ab020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff8a5296828"/>
            <typename><typedef-ref name="TMilli" ref="0x7ff8a5296b80"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff8a6018020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7ff8a44a9478"/>
        <function-ref name="clear" scoped="" ref="0x7ff8a44a9b58"/>
        <function-ref name="isValid" scoped="" ref="0x7ff8a44abd70"/>
        <function-ref name="set" scoped="" ref="0x7ff8a44a8278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7ff8a44b13b8" loc="42:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7ff8a44b13b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7ff8a44b1708"/>
        <function-ref name="noAck" scoped="" ref="0x7ff8a44b1890"/>
        <function-ref name="wasAcked" scoped="" ref="0x7ff8a44b1a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7ff8a44a1630" loc="49:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7ff8a44a1630"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7ff8a44a1980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7ff8a44a32e8" loc="46:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7ff8a44a32e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7ff8a44a3638"/>
        <function-ref name="setNetwork" scoped="" ref="0x7ff8a44a37c0"/>
        <function-ref name="getRssi" scoped="" ref="0x7ff8a44a3948"/>
        <function-ref name="getNetwork" scoped="" ref="0x7ff8a44a3ad0"/>
        <function-ref name="getPower" scoped="" ref="0x7ff8a44a3c58"/>
        <function-ref name="getLqi" scoped="" ref="0x7ff8a44a3de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7ff8a4498618" loc="56:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7ff8a4498618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff8a4498968"/>
        <function-ref name="payloadLength" scoped="" ref="0x7ff8a4498af0"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff8a4498c78"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff8a4498e00"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7ff8a4496020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7ff8a449f060" loc="51:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7ff8a449f060"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff8a5294020"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff8a5294378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff8a6018020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7ff8a449e4b8"/>
        <function-ref name="clear" scoped="" ref="0x7ff8a449eb98"/>
        <function-ref name="isValid" scoped="" ref="0x7ff8a449fdb0"/>
        <function-ref name="set" scoped="" ref="0x7ff8a449d2b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7ff8a44a2b60" loc="48:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ff8a44a2b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7ff8a44a1020"/>
        <function-ref name="getHeader" scoped="" ref="0x7ff8a44a11a8"/>
        <function-ref name="getMetadata" scoped="" ref="0x7ff8a44a1330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7ff8a4499ac8" loc="53:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7ff8a4499ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ff8a4499e18"/>
        <function-ref name="isSet" scoped="" ref="0x7ff8a4498020"/>
        <function-ref name="cancel" scoped="" ref="0x7ff8a44981a8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a4498330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x7ff8a44938b0" loc="57:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x7ff8a44938b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff8a5294020"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff8a5294378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ff8a4495490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x7ff8a4495b20" loc="58:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMilli" scoped="" ref="0x7ff8a4495b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff8a5296828"/>
            <typename><typedef-ref name="TMilli" ref="0x7ff8a5296b80"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ff8a4494728"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7ff8a449b020" loc="52:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7ff8a449b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff8a5296828"/>
            <typename><typedef-ref name="TMilli" ref="0x7ff8a5296b80"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff8a6018020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7ff8a449a478"/>
        <function-ref name="clear" scoped="" ref="0x7ff8a449ab58"/>
        <function-ref name="isValid" scoped="" ref="0x7ff8a449bd70"/>
        <function-ref name="set" scoped="" ref="0x7ff8a4499278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7ff8a44a2210" loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7ff8a44a2210"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7ff8a44a2560"/>
        <function-ref name="noAck" scoped="" ref="0x7ff8a44a26e8"/>
        <function-ref name="wasAcked" scoped="" ref="0x7ff8a44a2870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7ff8a4446528" loc="48:/home/paul/wsnpr/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7ff8a4446528"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff8a5294020"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff8a5294378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ff8a44450f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7ff8a4445720" loc="49:/home/paul/wsnpr/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7ff8a4445720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff8a5294020"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff8a5294378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff8a6018020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ff8a443b578"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff8a443a020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff8a443ba00"/>
        <function-ref name="overflow" scoped="" ref="0x7ff8a443a4a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7ff8a4436d78" loc="46:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7ff8a4436d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff8a5296828"/>
            <typename><typedef-ref name="TMilli" ref="0x7ff8a5296b80"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ff8a4431088"/>
        <function-ref name="fired" scoped="" ref="0x7ff8a44336c8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7ff8a4432470"/>
        <function-ref name="isOneShot" scoped="" ref="0x7ff8a4432020"/>
        <function-ref name="getdt" scoped="" ref="0x7ff8a4431928"/>
        <function-ref name="gett0" scoped="" ref="0x7ff8a44314d8"/>
        <function-ref name="isRunning" scoped="" ref="0x7ff8a4433b18"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7ff8a44358f0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7ff8a4432a40"/>
        <function-ref name="startOneShot" scoped="" ref="0x7ff8a4435d90"/>
        <function-ref name="stop" scoped="" ref="0x7ff8a4433278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7ff8a442f020" loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7ff8a442f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff8a5296828"/>
            <typename><typedef-ref name="TMilli" ref="0x7ff8a5296b80"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ff8a442fba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ff8a4436080" loc="45:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ff8a4436080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff8a44363d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7ff8a442cd48" loc="44:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7ff8a442cd48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff8a5296828"/>
            <typename><typedef-ref name="TMilli" ref="0x7ff8a5296b80"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff8a6018020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ff8a4400410"/>
        <function-ref name="fired" scoped="" ref="0x7ff8a44024a8"/>
        <function-ref name="startAt" scoped="" ref="0x7ff8a4402db8"/>
        <function-ref name="isRunning" scoped="" ref="0x7ff8a4402930"/>
        <function-ref name="getAlarm" scoped="" ref="0x7ff8a4400898"/>
        <function-ref name="start" scoped="" ref="0x7ff8a4403ac0"/>
        <function-ref name="stop" scoped="" ref="0x7ff8a4402020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ff8a442c560" loc="43:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ff8a442c560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff8a442c8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7ff8a32d5d08" loc="44:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7ff8a32d5d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff8a5294020"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff8a5294378"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ff8a32d2410"/>
        <function-ref name="fired" scoped="" ref="0x7ff8a32d34a8"/>
        <function-ref name="startAt" scoped="" ref="0x7ff8a32d3db8"/>
        <function-ref name="isRunning" scoped="" ref="0x7ff8a32d3930"/>
        <function-ref name="getAlarm" scoped="" ref="0x7ff8a32d2898"/>
        <function-ref name="start" scoped="" ref="0x7ff8a32d4ac0"/>
        <function-ref name="stop" scoped="" ref="0x7ff8a32d3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ff8a32d5520" loc="43:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ff8a32d5520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff8a32d5870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7ff8a329a430" loc="41:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7ff8a329a430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff8a329a780"/>
        <function-ref name="setEvent" scoped="" ref="0x7ff8a329a908"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ff8a329aa90"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ff8a329ac18"/>
        <function-ref name="fired" scoped="" ref="0x7ff8a329ada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7ff8a32c0a08" loc="39:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7ff8a32c0a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff8a32c0d58"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ff8a32bf020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff8a32bf1a8"/>
        <function-ref name="get" scoped="" ref="0x7ff8a32bf330"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff8a32bf4b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff8a32bf640"/>
        <function-ref name="getMode" scoped="" ref="0x7ff8a32bf7c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff8a32bf950"/>
        <function-ref name="overflow" scoped="" ref="0x7ff8a32bfad8"/>
        <function-ref name="setMode" scoped="" ref="0x7ff8a32bfc60"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7ff8a32bfde8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7ff8a32be0c0" loc="40:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7ff8a32be0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ff8a32be410"/>
        <function-ref name="getControl" scoped="" ref="0x7ff8a32be598"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff8a32be720"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ff8a32be8a8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ff8a32bea30"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff8a32bebb8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ff8a32bed40"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ff8a329a020"/>
        <function-ref name="setControl" scoped="" ref="0x7ff8a329a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7ff8a3291a50" loc="49:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7ff8a3291a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff8a3291da0"/>
        <function-ref name="setEvent" scoped="" ref="0x7ff8a3290020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ff8a32901a8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ff8a3290330"/>
        <function-ref name="fired" scoped="" ref="0x7ff8a32904b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7ff8a3293200" loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7ff8a3293200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff8a3293550"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ff8a32936d8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff8a3293860"/>
        <function-ref name="get" scoped="" ref="0x7ff8a32939e8"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff8a3293b70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff8a3293cf8"/>
        <function-ref name="getMode" scoped="" ref="0x7ff8a3293e80"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff8a3292030"/>
        <function-ref name="overflow" scoped="" ref="0x7ff8a32921b8"/>
        <function-ref name="setMode" scoped="" ref="0x7ff8a3292340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7ff8a32924c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7ff8a3297270" loc="46:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7ff8a3297270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff8a5294020"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff8a5294378"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ff8a3294918"/>
        <function-ref name="fired" scoped="" ref="0x7ff8a3295980"/>
        <function-ref name="startAt" scoped="" ref="0x7ff8a3294310"/>
        <function-ref name="isRunning" scoped="" ref="0x7ff8a3295e08"/>
        <function-ref name="getAlarm" scoped="" ref="0x7ff8a3294da0"/>
        <function-ref name="start" scoped="" ref="0x7ff8a3295020"/>
        <function-ref name="stop" scoped="" ref="0x7ff8a32954f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ff8a3298a18" loc="45:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ff8a3298a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff8a3298d68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7ff8a3292750" loc="48:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7ff8a3292750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ff8a3292aa0"/>
        <function-ref name="getControl" scoped="" ref="0x7ff8a3292c28"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff8a3292db0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ff8a3291020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ff8a32911a8"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff8a3291330"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ff8a32914b8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ff8a3291640"/>
        <function-ref name="setControl" scoped="" ref="0x7ff8a32917c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7ff8a4421bd0" loc="43:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7ff8a4421bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff8a5296828"/>
            <typename><typedef-ref name="TMilli" ref="0x7ff8a5296b80"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff8a6018020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ff8a441e948"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff8a441d2b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff8a441edd0"/>
        <function-ref name="overflow" scoped="" ref="0x7ff8a441d738"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7ff8a4416688" loc="63:/home/paul/wsnpr/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7ff8a4416688"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff8a5294020"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff8a5294378"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ff8a4415400"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff8a4415d10"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff8a4415888"/>
        <function-ref name="overflow" scoped="" ref="0x7ff8a44141f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7ff8a44193f8" loc="62:/home/paul/wsnpr/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7ff8a44193f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff8a5296828"/>
            <typename><typedef-ref name="TMilli" ref="0x7ff8a5296b80"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff8a6018020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ff8a4418190"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff8a4418aa0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff8a4418618"/>
        <function-ref name="overflow" scoped="" ref="0x7ff8a4416020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7ff8a32cfc78" loc="61:/home/paul/wsnpr/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7ff8a32cfc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff8a5296828"/>
            <typename><typedef-ref name="TMilli" ref="0x7ff8a5296b80"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff8a6018020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ff8a32cc410"/>
        <function-ref name="fired" scoped="" ref="0x7ff8a32cd4a8"/>
        <function-ref name="startAt" scoped="" ref="0x7ff8a32cddb8"/>
        <function-ref name="isRunning" scoped="" ref="0x7ff8a32cd930"/>
        <function-ref name="getAlarm" scoped="" ref="0x7ff8a32cc898"/>
        <function-ref name="start" scoped="" ref="0x7ff8a32ce9f0"/>
        <function-ref name="stop" scoped="" ref="0x7ff8a32cd020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7ff8a32c81e8" loc="73:/home/paul/wsnpr/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7ff8a32c81e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff8a5294020"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff8a5294378"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ff8a32c6918"/>
        <function-ref name="fired" scoped="" ref="0x7ff8a32c7980"/>
        <function-ref name="startAt" scoped="" ref="0x7ff8a32c6310"/>
        <function-ref name="isRunning" scoped="" ref="0x7ff8a32c7e08"/>
        <function-ref name="getAlarm" scoped="" ref="0x7ff8a32c6da0"/>
        <function-ref name="start" scoped="" ref="0x7ff8a32c7020"/>
        <function-ref name="stop" scoped="" ref="0x7ff8a32c74f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7ff8a32cb020" loc="68:/home/paul/wsnpr/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7ff8a32cb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff8a5296828"/>
            <typename><typedef-ref name="TMilli" ref="0x7ff8a5296b80"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff8a6018020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ff8a32cbd70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff8a32ca6b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff8a32ca230"/>
        <function-ref name="overflow" scoped="" ref="0x7ff8a32cab40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7ff8a43d0020" loc="74:/home/paul/wsnpr/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x7ff8a43d0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ff8a43d0370"/>
        <function-ref name="runTask" scoped="" ref="0x7ff8a43d04f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7ff8a43d3020" loc="49:/home/paul/wsnpr/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7ff8a43d3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff8a5296828"/>
            <typename><typedef-ref name="TMilli" ref="0x7ff8a5296b80"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff8a6018020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ff8a43d1690"/>
        <function-ref name="fired" scoped="" ref="0x7ff8a43d26f8"/>
        <function-ref name="startAt" scoped="" ref="0x7ff8a43d1088"/>
        <function-ref name="isRunning" scoped="" ref="0x7ff8a43d2b80"/>
        <function-ref name="getAlarm" scoped="" ref="0x7ff8a43d1b18"/>
        <function-ref name="start" scoped="" ref="0x7ff8a43d3d70"/>
        <function-ref name="stop" scoped="" ref="0x7ff8a43d2270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7ff8a43fdd88" loc="48:/home/paul/wsnpr/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7ff8a43fdd88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff8a5296828"/>
            <typename><typedef-ref name="TMilli" ref="0x7ff8a5296b80"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ff8a43d5088"/>
        <function-ref name="fired" scoped="" ref="0x7ff8a43d76c8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7ff8a43d6470"/>
        <function-ref name="isOneShot" scoped="" ref="0x7ff8a43d6020"/>
        <function-ref name="getdt" scoped="" ref="0x7ff8a43d5928"/>
        <function-ref name="gett0" scoped="" ref="0x7ff8a43d54d8"/>
        <function-ref name="isRunning" scoped="" ref="0x7ff8a43d7b18"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7ff8a43d8908"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7ff8a43d6a40"/>
        <function-ref name="startOneShot" scoped="" ref="0x7ff8a43d8da8"/>
        <function-ref name="stop" scoped="" ref="0x7ff8a43d7278"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7ff8a4381478" loc="71:/home/paul/wsnpr/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x7ff8a4381478"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ff8a43817c8"/>
        <function-ref name="runTask" scoped="" ref="0x7ff8a4381950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7ff8a4386208" loc="49:/home/paul/wsnpr/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x7ff8a4386208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff8a5296828"/>
            <typename><typedef-ref name="TMilli" ref="0x7ff8a5296b80"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ff8a43835f0"/>
        <function-ref name="fired" scoped="" ref="0x7ff8a4385b28"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7ff8a43848c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7ff8a4384470"/>
        <function-ref name="getdt" scoped="" ref="0x7ff8a4381020"/>
        <function-ref name="gett0" scoped="" ref="0x7ff8a4383a40"/>
        <function-ref name="isRunning" scoped="" ref="0x7ff8a4384020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7ff8a4386d50"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7ff8a4383020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7ff8a4385238"/>
        <function-ref name="stop" scoped="" ref="0x7ff8a43856d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7ff8a438c020" loc="48:/home/paul/wsnpr/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7ff8a438c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff8a5296828"/>
            <typename><typedef-ref name="TMilli" ref="0x7ff8a5296b80"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ff8a4388358"/>
        <function-ref name="fired" scoped="" ref="0x7ff8a438b9b8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7ff8a4389748"/>
        <function-ref name="isOneShot" scoped="" ref="0x7ff8a43892d8"/>
        <function-ref name="getdt" scoped="" ref="0x7ff8a4388c38"/>
        <function-ref name="gett0" scoped="" ref="0x7ff8a43887c8"/>
        <function-ref name="isRunning" scoped="" ref="0x7ff8a438be28"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7ff8a438cb88"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7ff8a4389d38"/>
        <function-ref name="startOneShot" scoped="" ref="0x7ff8a438b088"/>
        <function-ref name="stop" scoped="" ref="0x7ff8a438b548"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7ff8a437f988" loc="48:/home/paul/wsnpr/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7ff8a437f988"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff8a5296828"/>
            <typename><typedef-ref name="TMilli" ref="0x7ff8a5296b80"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ff8a437e560"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7ff8a437eb88" loc="49:/home/paul/wsnpr/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7ff8a437eb88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff8a5296828"/>
            <typename><typedef-ref name="TMilli" ref="0x7ff8a5296b80"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff8a6018020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ff8a437d930"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff8a437b270"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff8a437ddb8"/>
        <function-ref name="overflow" scoped="" ref="0x7ff8a437b6f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7ff8a4376420" loc="45:/home/paul/wsnpr/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7ff8a4376420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff8a5296828"/>
            <typename><typedef-ref name="TMilli" ref="0x7ff8a5296b80"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ff8a43626c8"/>
        <function-ref name="fired" scoped="" ref="0x7ff8a4365db0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7ff8a4363ad8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7ff8a4363688"/>
        <function-ref name="getdt" scoped="" ref="0x7ff8a4361020"/>
        <function-ref name="gett0" scoped="" ref="0x7ff8a4362b18"/>
        <function-ref name="isRunning" scoped="" ref="0x7ff8a4363238"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7ff8a4365020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7ff8a43620f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7ff8a43654c0"/>
        <function-ref name="stop" scoped="" ref="0x7ff8a4365960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7ff8a436d6a0" loc="49:/home/paul/wsnpr/tinyos-main/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7ff8a436d6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff8a5296828"/>
            <typename><typedef-ref name="TMilli" ref="0x7ff8a5296b80"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ff8a4369a18"/>
        <function-ref name="fired" scoped="" ref="0x7ff8a436a158"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7ff8a436ae48"/>
        <function-ref name="isOneShot" scoped="" ref="0x7ff8a436a9f8"/>
        <function-ref name="getdt" scoped="" ref="0x7ff8a43682e8"/>
        <function-ref name="gett0" scoped="" ref="0x7ff8a4369e68"/>
        <function-ref name="isRunning" scoped="" ref="0x7ff8a436a5a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7ff8a436c370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7ff8a4369448"/>
        <function-ref name="startOneShot" scoped="" ref="0x7ff8a436c810"/>
        <function-ref name="stop" scoped="" ref="0x7ff8a436ccb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7ff8a4352a88" loc="69:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7ff8a4352a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a4350020"/>
        <function-ref name="write" scoped="" ref="0x7ff8a43501a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7ff8a435b100" loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7ff8a435b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff8a435b450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7ff8a4355a88" loc="63:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7ff8a4355a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a4355dd8"/>
        <function-ref name="write" scoped="" ref="0x7ff8a4354020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7ff8a434f470" loc="72:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7ff8a434f470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a434f7c0"/>
        <function-ref name="write" scoped="" ref="0x7ff8a434f948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7ff8a4348c10" loc="86:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7ff8a4348c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a4347020"/>
        <function-ref name="write" scoped="" ref="0x7ff8a43471a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7ff8a434fc10" loc="73:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7ff8a434fc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a434e020"/>
        <function-ref name="write" scoped="" ref="0x7ff8a434e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7ff8a433b2e8" loc="108:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7ff8a433b2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a433b638"/>
        <function-ref name="write" scoped="" ref="0x7ff8a433b7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7ff8a433e2e8" loc="104:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7ff8a433e2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a433e638"/>
        <function-ref name="write" scoped="" ref="0x7ff8a433e7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7ff8a435a3a0" loc="50:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7ff8a435a3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff8a435a6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7ff8a4343470" loc="93:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7ff8a4343470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a43437c0"/>
        <function-ref name="write" scoped="" ref="0x7ff8a4343948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7ff8a433f2e8" loc="102:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7ff8a433f2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a433f638"/>
        <function-ref name="write" scoped="" ref="0x7ff8a433f7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7ff8a4354a88" loc="65:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7ff8a4354a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a4354dd8"/>
        <function-ref name="write" scoped="" ref="0x7ff8a4353020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7ff8a4353a88" loc="67:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7ff8a4353a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a4353dd8"/>
        <function-ref name="write" scoped="" ref="0x7ff8a4352020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7ff8a4349470" loc="83:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7ff8a4349470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a43497c0"/>
        <function-ref name="write" scoped="" ref="0x7ff8a4349948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7ff8a434cc10" loc="79:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7ff8a434cc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a434b020"/>
        <function-ref name="write" scoped="" ref="0x7ff8a434b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7ff8a434e470" loc="74:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7ff8a434e470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a434e7c0"/>
        <function-ref name="write" scoped="" ref="0x7ff8a434e948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7ff8a435da18" loc="42:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7ff8a435da18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7ff8a435dd68"/>
        <function-ref name="abortRelease" scoped="" ref="0x7ff8a435c020"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7ff8a435c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7ff8a4359c50" loc="54:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7ff8a4359c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff8a4358020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7ff8a43582e8" loc="55:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7ff8a43582e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff8a4358738"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7ff8a4342a38" loc="95:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7ff8a4342a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a4342d88"/>
        <function-ref name="write" scoped="" ref="0x7ff8a4341020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7ff8a4358a00" loc="56:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7ff8a4358a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff8a4358d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7ff8a433fa88" loc="103:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7ff8a433fa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a433fdd8"/>
        <function-ref name="write" scoped="" ref="0x7ff8a433e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7ff8a4359020" loc="52:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7ff8a4359020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff8a4359370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7ff8a4345c10" loc="92:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7ff8a4345c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a4343020"/>
        <function-ref name="write" scoped="" ref="0x7ff8a43431a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7ff8a43532e8" loc="66:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7ff8a43532e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a4353638"/>
        <function-ref name="write" scoped="" ref="0x7ff8a43537c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7ff8a43542e8" loc="64:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7ff8a43542e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a4354638"/>
        <function-ref name="write" scoped="" ref="0x7ff8a43547c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7ff8a435ca88" loc="46:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7ff8a435ca88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff8a435cdd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7ff8a4346c10" loc="90:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7ff8a4346c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a4345020"/>
        <function-ref name="write" scoped="" ref="0x7ff8a43451a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7ff8a4347470" loc="87:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7ff8a4347470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a43477c0"/>
        <function-ref name="write" scoped="" ref="0x7ff8a4347948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7ff8a4345470" loc="91:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7ff8a4345470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a43457c0"/>
        <function-ref name="write" scoped="" ref="0x7ff8a4345948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7ff8a433da88" loc="107:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7ff8a433da88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a433ddd8"/>
        <function-ref name="write" scoped="" ref="0x7ff8a433b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7ff8a433ea88" loc="105:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7ff8a433ea88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a433edd8"/>
        <function-ref name="write" scoped="" ref="0x7ff8a433d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7ff8a434b470" loc="80:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7ff8a434b470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a434b7c0"/>
        <function-ref name="write" scoped="" ref="0x7ff8a434b948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7ff8a4347c10" loc="88:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7ff8a4347c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a4346020"/>
        <function-ref name="write" scoped="" ref="0x7ff8a43461a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7ff8a4340a88" loc="101:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7ff8a4340a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a4340dd8"/>
        <function-ref name="write" scoped="" ref="0x7ff8a433f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7ff8a434d470" loc="76:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7ff8a434d470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a434d7c0"/>
        <function-ref name="write" scoped="" ref="0x7ff8a434d948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7ff8a433ba88" loc="111:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7ff8a433ba88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7ff8a433bdd8"/>
        <function-ref name="writeDone" scoped="" ref="0x7ff8a433a020"/>
        <function-ref name="write" scoped="" ref="0x7ff8a433a1a8"/>
        <function-ref name="beginRead" scoped="" ref="0x7ff8a433a330"/>
        <function-ref name="readDone" scoped="" ref="0x7ff8a433a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7ff8a435c470" loc="45:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7ff8a435c470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff8a435c7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7ff8a43552e8" loc="62:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7ff8a43552e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a4355638"/>
        <function-ref name="write" scoped="" ref="0x7ff8a43557c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7ff8a43522e8" loc="68:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7ff8a43522e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a4352638"/>
        <function-ref name="write" scoped="" ref="0x7ff8a43527c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7ff8a4349c10" loc="84:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7ff8a4349c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a4348020"/>
        <function-ref name="write" scoped="" ref="0x7ff8a43481a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7ff8a434ec10" loc="75:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7ff8a434ec10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a434d020"/>
        <function-ref name="write" scoped="" ref="0x7ff8a434d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7ff8a4348470" loc="85:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7ff8a4348470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a43487c0"/>
        <function-ref name="write" scoped="" ref="0x7ff8a4348948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7ff8a4350470" loc="70:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7ff8a4350470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a43507c0"/>
        <function-ref name="write" scoped="" ref="0x7ff8a4350948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7ff8a435b718" loc="48:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7ff8a435b718"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff8a435ba68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7ff8a4350c10" loc="71:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7ff8a4350c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a434f020"/>
        <function-ref name="write" scoped="" ref="0x7ff8a434f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ff8a435fdb8" loc="41:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ff8a435fdb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff8a435d170"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff8a435d2f8"/>
        <function-ref name="request" scoped="" ref="0x7ff8a435d480"/>
        <function-ref name="granted" scoped="" ref="0x7ff8a435d608"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff8a435d790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7ff8a4356060" loc="57:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7ff8a4356060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff8a43563b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7ff8a4356c90" loc="59:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7ff8a4356c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff8a4355020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7ff8a43402e8" loc="100:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7ff8a43402e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a4340638"/>
        <function-ref name="write" scoped="" ref="0x7ff8a43407c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7ff8a4341a88" loc="99:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7ff8a4341a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a4341dd8"/>
        <function-ref name="write" scoped="" ref="0x7ff8a4340020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7ff8a4359638" loc="53:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7ff8a4359638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff8a4359988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7ff8a43412e8" loc="96:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7ff8a43412e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a4341638"/>
        <function-ref name="write" scoped="" ref="0x7ff8a43417c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7ff8a433d2e8" loc="106:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7ff8a433d2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a433d638"/>
        <function-ref name="write" scoped="" ref="0x7ff8a433d7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7ff8a434bc10" loc="81:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7ff8a434bc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a4349020"/>
        <function-ref name="write" scoped="" ref="0x7ff8a43491a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7ff8a4346470" loc="89:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7ff8a4346470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a43467c0"/>
        <function-ref name="write" scoped="" ref="0x7ff8a4346948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7ff8a435bd30" loc="49:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7ff8a435bd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff8a435a0d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7ff8a435a9b8" loc="51:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7ff8a435a9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff8a435ad08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7ff8a434dc10" loc="77:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7ff8a434dc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a434c020"/>
        <function-ref name="write" scoped="" ref="0x7ff8a434c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7ff8a4356678" loc="58:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7ff8a4356678"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7ff8a43569c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7ff8a434c470" loc="78:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7ff8a434c470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a434c7c0"/>
        <function-ref name="write" scoped="" ref="0x7ff8a434c948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7ff8a4343c10" loc="94:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7ff8a4343c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a43425e8"/>
        <function-ref name="write" scoped="" ref="0x7ff8a4342770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7ff8a433a780" loc="112:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7ff8a433a780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7ff8a433aad0"/>
        <function-ref name="writeDone" scoped="" ref="0x7ff8a433ac58"/>
        <function-ref name="write" scoped="" ref="0x7ff8a433ade0"/>
        <function-ref name="beginRead" scoped="" ref="0x7ff8a4339020"/>
        <function-ref name="readDone" scoped="" ref="0x7ff8a43391a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7ff8a4314690" loc="46:/home/paul/wsnpr/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7ff8a4314690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7ff8a43149e0"/>
        <function-ref name="rand32" scoped="" ref="0x7ff8a4314b68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7ff8a4311668" loc="45:/home/paul/wsnpr/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7ff8a4311668"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff8a43141e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ff8a43188d0" loc="44:/home/paul/wsnpr/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ff8a43188d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff8a4318c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7ff8a430d568" loc="48:/home/paul/wsnpr/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7ff8a430d568"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7ff8a430d8b8"/>
        <function-ref name="rand32" scoped="" ref="0x7ff8a430da40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7ff8a430e528" loc="47:/home/paul/wsnpr/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7ff8a430e528"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff8a430d0c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ff8a4313b38" loc="46:/home/paul/wsnpr/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ff8a4313b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff8a430e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7ff8a4316bb0" loc="67:/home/paul/wsnpr/tinyos-main/tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7ff8a4316bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7ff8a4300020"/>
        <function-ref name="toIdle" scoped="" ref="0x7ff8a43001a8"/>
        <function-ref name="isState" scoped="" ref="0x7ff8a4300330"/>
        <function-ref name="isIdle" scoped="" ref="0x7ff8a43004b8"/>
        <function-ref name="requestState" scoped="" ref="0x7ff8a4300640"/>
        <function-ref name="forceState" scoped="" ref="0x7ff8a43007c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7ff8a42f3838" loc="44:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7ff8a42f3838"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff8a42f3b88"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff8a42f3d10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff8a42f2020"/>
        <function-ref name="cancel" scoped="" ref="0x7ff8a42f21a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff8a42f2330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7ff8a42faa78" loc="40:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7ff8a42faa78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff8a42fadc8"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff8a42f3020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff8a42f31a8"/>
        <function-ref name="cancel" scoped="" ref="0x7ff8a42f3330"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff8a42f34b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7ff8a42ee578" loc="45:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7ff8a42ee578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff8a42ee8c8"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff8a42eea50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff8a42eebd8"/>
        <function-ref name="cancel" scoped="" ref="0x7ff8a42eed60"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff8a42ed020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7ff8a42ef298" loc="40:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7ff8a42ef298"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff8a42ef5e8"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff8a42ef770"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff8a42ef8f8"/>
        <function-ref name="cancel" scoped="" ref="0x7ff8a42efa80"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff8a42efc08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7ff8a42ec080" loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7ff8a42ec080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7ff8a42ec3d0"/>
        <function-ref name="rand32" scoped="" ref="0x7ff8a42ec558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ff8a42efe80" loc="41:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ff8a42efe80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff8a42ee1f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7ff8a42ec848" loc="48:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ff8a42ec848"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7ff8a42ecb98"/>
        <function-ref name="getHeader" scoped="" ref="0x7ff8a42ecd20"/>
        <function-ref name="getMetadata" scoped="" ref="0x7ff8a42eb020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x7ff8a42ed2a0" loc="46:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7ff8a42ed2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7ff8a42ed5f0"/>
        <function-ref name="toIdle" scoped="" ref="0x7ff8a42ed778"/>
        <function-ref name="isState" scoped="" ref="0x7ff8a42ed900"/>
        <function-ref name="isIdle" scoped="" ref="0x7ff8a42eda88"/>
        <function-ref name="requestState" scoped="" ref="0x7ff8a42edc10"/>
        <function-ref name="forceState" scoped="" ref="0x7ff8a42edd98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7ff8a42f0468" loc="67:/home/paul/wsnpr/tinyos-main/tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7ff8a42f0468"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7ff8a42f07b8"/>
        <function-ref name="toIdle" scoped="" ref="0x7ff8a42f0940"/>
        <function-ref name="isState" scoped="" ref="0x7ff8a42f0ac8"/>
        <function-ref name="isIdle" scoped="" ref="0x7ff8a42f0c50"/>
        <function-ref name="requestState" scoped="" ref="0x7ff8a42f0dd8"/>
        <function-ref name="forceState" scoped="" ref="0x7ff8a42db020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7ff8a42d6e50" loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7ff8a42d6e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ff8a42d51e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7ff8a42d6080" loc="42:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7ff8a42d6080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ff8a42d63d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7ff8a42d6748" loc="43:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7ff8a42d6748"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ff8a42d6a98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7ff8a42d0728" loc="49:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7ff8a42d0728"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ff8a42d0a78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ff8a42d0020" loc="45:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ff8a42d0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff8a42d0370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7ff8a42d22b0" loc="43:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7ff8a42d22b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ff8a42d2600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7ff8a42d0d68" loc="50:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ff8a42d0d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7ff8a42cf0f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7ff8a42cf278"/>
        <function-ref name="getMetadata" scoped="" ref="0x7ff8a42cf400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7ff8a42d2978" loc="44:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7ff8a42d2978"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ff8a42d2cc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7ff8a42a3020" loc="75:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7ff8a42a3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ff8a42a3370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7ff8a42a3670" loc="76:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7ff8a42a3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff8a42a39c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff8a42a3b48"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff8a42a3cd0"/>
        <function-ref name="cancel" scoped="" ref="0x7ff8a42a3e58"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff8a42a2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7ff8a42a7a40" loc="65:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7ff8a42a7a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff8a42a7d90"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff8a42a6020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff8a42a61a8"/>
        <function-ref name="cancel" scoped="" ref="0x7ff8a42a6330"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff8a42a64b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7ff8a42a6db8" loc="68:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7ff8a42a6db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff8a42a5170"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff8a42a52f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff8a42a5480"/>
        <function-ref name="cancel" scoped="" ref="0x7ff8a42a5608"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff8a42a5790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7ff8a42a6748" loc="66:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7ff8a42a6748"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ff8a42a6a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ff8a42aae28" loc="64:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ff8a42aae28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff8a42a71a8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff8a42a7330"/>
        <function-ref name="request" scoped="" ref="0x7ff8a42a74b8"/>
        <function-ref name="granted" scoped="" ref="0x7ff8a42a7640"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff8a42a77c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7ff8a42a5ae8" loc="69:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7ff8a42a5ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ff8a42a5e38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7ff8a42a41a8" loc="71:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7ff8a42a41a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff8a42a44f8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7ff8a42a4680"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff8a42a4808"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff8a42a4990"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7ff8a42a4b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7ff8a4298528" loc="58:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7ff8a4298528"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff8a4298878"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff8a4298a00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff8a4298b88"/>
        <function-ref name="cancel" scoped="" ref="0x7ff8a4298d10"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff8a4297020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7ff8a4297358" loc="59:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7ff8a4297358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ff8a42976a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x7ff8a426bac0" loc="184:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantTask" scoped="" ref="0x7ff8a426bac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ff8a426be10"/>
        <function-ref name="runTask" scoped="" ref="0x7ff8a426a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7ff8a4297970" loc="60:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7ff8a4297970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7ff8a4297cc0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7ff8a4297e48"/>
        <function-ref name="getRssi" scoped="" ref="0x7ff8a4296020"/>
        <function-ref name="getNetwork" scoped="" ref="0x7ff8a42961a8"/>
        <function-ref name="getPower" scoped="" ref="0x7ff8a4296330"/>
        <function-ref name="getLqi" scoped="" ref="0x7ff8a42964b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7ff8a429a490" loc="51:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7ff8a429a490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff8a429a7e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff8a429a968"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff8a429aaf0"/>
        <function-ref name="cancel" scoped="" ref="0x7ff8a429ac78"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff8a429ae00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7ff8a42951c0" loc="62:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7ff8a42951c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7ff8a4295510"/>
        <function-ref name="isEmpty" scoped="" ref="0x7ff8a4295698"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7ff8a4295820"/>
        <function-ref name="dequeue" scoped="" ref="0x7ff8a42959a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7ff8a42967a8" loc="61:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ff8a42967a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7ff8a4296af8"/>
        <function-ref name="getHeader" scoped="" ref="0x7ff8a4296c80"/>
        <function-ref name="getMetadata" scoped="" ref="0x7ff8a4296e08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7ff8a429bdc8" loc="49:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7ff8a429bdc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ff8a429a170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ff8a429d440" loc="46:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ff8a429d440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff8a429d790"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff8a429d918"/>
        <function-ref name="request" scoped="" ref="0x7ff8a429daa0"/>
        <function-ref name="granted" scoped="" ref="0x7ff8a429dc28"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff8a429ddb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7ff8a429b118" loc="48:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7ff8a429b118"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff8a429b468"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff8a429b5f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff8a429b778"/>
        <function-ref name="cancel" scoped="" ref="0x7ff8a429b900"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff8a429ba88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7ff8a4299188" loc="52:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7ff8a4299188"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ff8a42994d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7ff8a4299808" loc="54:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7ff8a4299808"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff8a4299b58"/>
        <function-ref name="payloadLength" scoped="" ref="0x7ff8a4299ce0"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff8a4299e68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff8a4298020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7ff8a42981a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ff8a424cc28" loc="44:/home/paul/wsnpr/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ff8a424cc28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff8a424b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7ff8a424b2a8" loc="45:/home/paul/wsnpr/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7ff8a424b2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7ff8a424b5f8"/>
        <function-ref name="isEmpty" scoped="" ref="0x7ff8a424b780"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7ff8a424b908"/>
        <function-ref name="dequeue" scoped="" ref="0x7ff8a424ba90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7ff8a4240dc8" loc="46:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7ff8a4240dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7ff8a423f170"/>
        <function-ref name="stopDone" scoped="" ref="0x7ff8a423f2f8"/>
        <function-ref name="start" scoped="" ref="0x7ff8a423f480"/>
        <function-ref name="stop" scoped="" ref="0x7ff8a423f608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7ff8a423e838" loc="51:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7ff8a423e838"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff8a423eb88"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff8a423ed10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff8a423d020"/>
        <function-ref name="cancel" scoped="" ref="0x7ff8a423d1a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff8a423d330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7ff8a423d668" loc="52:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7ff8a423d668"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ff8a423d9b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7ff8a4241080" loc="43:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7ff8a4241080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff8a42413d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff8a4241558"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff8a42416e0"/>
        <function-ref name="cancel" scoped="" ref="0x7ff8a4241868"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff8a42419f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7ff8a4240318" loc="45:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7ff8a4240318"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7ff8a4240668"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7ff8a42407f0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7ff8a4240978"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7ff8a4240b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x7ff8a423f928" loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x7ff8a423f928"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7ff8a423fc78"/>
        <function-ref name="toIdle" scoped="" ref="0x7ff8a423fe00"/>
        <function-ref name="isState" scoped="" ref="0x7ff8a423e020"/>
        <function-ref name="isIdle" scoped="" ref="0x7ff8a423e1a8"/>
        <function-ref name="requestState" scoped="" ref="0x7ff8a423e330"/>
        <function-ref name="forceState" scoped="" ref="0x7ff8a423e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7ff8a423dd28" loc="53:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7ff8a423dd28"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7ff8a423c0a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7ff8a423c228"/>
        <function-ref name="start" scoped="" ref="0x7ff8a423c3b0"/>
        <function-ref name="stop" scoped="" ref="0x7ff8a423c538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7ff8a4241c80" loc="44:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7ff8a4241c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ff8a4240020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7ff8a4239170" loc="41:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7ff8a4239170"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7ff8a42394c0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7ff8a4239648"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7ff8a42397d0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7ff8a4239958"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7ff8a423bd50" loc="67:/home/paul/wsnpr/tinyos-main/tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7ff8a423bd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7ff8a423a0d8"/>
        <function-ref name="toIdle" scoped="" ref="0x7ff8a423a260"/>
        <function-ref name="isState" scoped="" ref="0x7ff8a423a3e8"/>
        <function-ref name="isIdle" scoped="" ref="0x7ff8a423a570"/>
        <function-ref name="requestState" scoped="" ref="0x7ff8a423a6f8"/>
        <function-ref name="forceState" scoped="" ref="0x7ff8a423a880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7ff8a422c020" loc="45:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7ff8a422c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff8a422c370"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff8a422c4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff8a422c680"/>
        <function-ref name="cancel" scoped="" ref="0x7ff8a422c808"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff8a422c990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7ff8a42305d0" loc="40:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7ff8a42305d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff8a4230920"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff8a4230aa8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff8a4230c30"/>
        <function-ref name="cancel" scoped="" ref="0x7ff8a4230db8"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff8a422d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7ff8a422d2d0" loc="41:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7ff8a422d2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7ff8a422d620"/>
        <function-ref name="setRetries" scoped="" ref="0x7ff8a422d7a8"/>
        <function-ref name="getRetries" scoped="" ref="0x7ff8a422d930"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7ff8a422dab8"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7ff8a422dc40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7ff8a42283c8" loc="44:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7ff8a42283c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7ff8a4228718"/>
        <function-ref name="noAck" scoped="" ref="0x7ff8a42288a0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7ff8a4228a28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7ff8a422b548" loc="40:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7ff8a422b548"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7ff8a422b898"/>
        <function-ref name="setRetries" scoped="" ref="0x7ff8a422ba20"/>
        <function-ref name="getRetries" scoped="" ref="0x7ff8a422bba8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7ff8a422bd30"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7ff8a4228020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7ff8a420acc8" loc="59:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7ff8a420acc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ff8a42090a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7ff8a420a020" loc="58:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7ff8a420a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff8a420a370"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff8a420a4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff8a420a680"/>
        <function-ref name="cancel" scoped="" ref="0x7ff8a420a808"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff8a420a990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7ff8a4208ab0" loc="62:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7ff8a4208ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7ff8a4208e00"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7ff8a4207020"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7ff8a42071a8"/>
        <function-ref name="syncDone" scoped="" ref="0x7ff8a4207330"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7ff8a42074b8"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7ff8a4207640"/>
        <function-ref name="setChannel" scoped="" ref="0x7ff8a42077c8"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7ff8a4207950"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7ff8a4207ad8"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7ff8a4207c60"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7ff8a4207de8"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7ff8a4206020"/>
        <function-ref name="sync" scoped="" ref="0x7ff8a42061a8"/>
        <function-ref name="getChannel" scoped="" ref="0x7ff8a4206430"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7ff8a42065b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7ff8a420b020" loc="54:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7ff8a420b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7ff8a5477908"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7ff8a420b370"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7ff8a420b4f8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7ff8a420b680"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7ff8a420b808"/>
        <function-ref name="setCca" scoped="" ref="0x7ff8a420b990"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7ff8a420bb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7ff8a420c400" loc="53:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7ff8a420c400"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7ff8a5477908"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7ff8a420c750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7ff8a42056a0" loc="64:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7ff8a42056a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7ff8a42059f0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7ff8a4205b78"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7ff8a4205d00"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7ff8a4204020"/>
        <function-ref name="setCca" scoped="" ref="0x7ff8a42041a8"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7ff8a4204330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7ff8a420d2a8" loc="52:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7ff8a420d2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff8a420d5f8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7ff8a420d780"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff8a420d908"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff8a420da90"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7ff8a420dc18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7ff8a4212980" loc="48:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7ff8a4212980"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7ff8a5477908"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff8a4212cd0"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff8a4212e58"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff8a4211020"/>
        <function-ref name="cancel" scoped="" ref="0x7ff8a42111a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff8a4211330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7ff8a4210628" loc="50:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7ff8a4210628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7ff8a5477908"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ff8a4210978"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7ff8a4209368" loc="60:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7ff8a4209368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7ff8a42096b8"/>
        <function-ref name="setNetwork" scoped="" ref="0x7ff8a4209840"/>
        <function-ref name="getRssi" scoped="" ref="0x7ff8a42099c8"/>
        <function-ref name="getNetwork" scoped="" ref="0x7ff8a4209b50"/>
        <function-ref name="getPower" scoped="" ref="0x7ff8a4209cd8"/>
        <function-ref name="getLqi" scoped="" ref="0x7ff8a4209e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7ff8a42068d0" loc="63:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7ff8a42068d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7ff8a4206d20"/>
        <function-ref name="changed" scoped="" ref="0x7ff8a4205020"/>
        <function-ref name="amGroup" scoped="" ref="0x7ff8a42051a8"/>
        <function-ref name="setAddress" scoped="" ref="0x7ff8a4205330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7ff8a4208188" loc="61:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7ff8a4208188"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7ff8a42084d8"/>
        <function-ref name="getHeader" scoped="" ref="0x7ff8a4208660"/>
        <function-ref name="getMetadata" scoped="" ref="0x7ff8a42087e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7ff8a4211ab0" loc="49:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7ff8a4211ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7ff8a5477908"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ff8a4211e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7ff8a42032a8" loc="67:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7ff8a42032a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7ff8a42035f8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7ff8a4203780"/>
        <function-ref name="led1On" scoped="" ref="0x7ff8a4203908"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7ff8a4203a90"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7ff8a4203c18"/>
        <function-ref name="get" scoped="" ref="0x7ff8a4203da0"/>
        <function-ref name="led1Off" scoped="" ref="0x7ff8a4201020"/>
        <function-ref name="led2Off" scoped="" ref="0x7ff8a4201640"/>
        <function-ref name="set" scoped="" ref="0x7ff8a42011a8"/>
        <function-ref name="led0On" scoped="" ref="0x7ff8a4201330"/>
        <function-ref name="led2On" scoped="" ref="0x7ff8a42014b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7ff8a4210c18" loc="51:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7ff8a4210c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7ff8a420e020"/>
        <function-ref name="source" scoped="" ref="0x7ff8a420e1a8"/>
        <function-ref name="address" scoped="" ref="0x7ff8a420e330"/>
        <function-ref name="destination" scoped="" ref="0x7ff8a420e4b8"/>
        <function-ref name="setSource" scoped="" ref="0x7ff8a420e640"/>
        <function-ref name="setDestination" scoped="" ref="0x7ff8a420e7c8"/>
        <function-ref name="type" scoped="" ref="0x7ff8a420e950"/>
        <function-ref name="setType" scoped="" ref="0x7ff8a420ead8"/>
        <function-ref name="isForMe" scoped="" ref="0x7ff8a420ec60"/>
        <function-ref name="setGroup" scoped="" ref="0x7ff8a420ede8"/>
        <function-ref name="localGroup" scoped="" ref="0x7ff8a420d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0x7ff8a4204698" loc="66:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioResource" scoped="" ref="0x7ff8a4204698"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff8a42049e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff8a4204b70"/>
        <function-ref name="request" scoped="" ref="0x7ff8a4204cf8"/>
        <function-ref name="granted" scoped="" ref="0x7ff8a4204e80"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff8a4203030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7ff8a417f760" loc="46:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7ff8a417f760"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7ff8a417fab0"/>
        <function-ref name="stopDone" scoped="" ref="0x7ff8a417fc38"/>
        <function-ref name="start" scoped="" ref="0x7ff8a417fdc0"/>
        <function-ref name="stop" scoped="" ref="0x7ff8a417c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7ff8a417c798" loc="47:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7ff8a417c798"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7ff8a5477908"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff8a417cae8"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff8a417cc70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff8a417cdf8"/>
        <function-ref name="cancel" scoped="" ref="0x7ff8a417b020"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff8a417b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7ff8a4179020" loc="49:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7ff8a4179020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff8a4179370"/>
        <function-ref name="payloadLength" scoped="" ref="0x7ff8a41794f8"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff8a4179680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff8a4179808"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7ff8a4179990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7ff8a417b928" loc="48:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7ff8a417b928"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7ff8a5477908"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ff8a417bc78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7ff8a4177c80" loc="53:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7ff8a4177c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7ff8a4176020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7ff8a41761a8"/>
        <function-ref name="led1On" scoped="" ref="0x7ff8a4176330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7ff8a41764b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7ff8a4176640"/>
        <function-ref name="get" scoped="" ref="0x7ff8a41767c8"/>
        <function-ref name="led1Off" scoped="" ref="0x7ff8a4176950"/>
        <function-ref name="led2Off" scoped="" ref="0x7ff8a4175020"/>
        <function-ref name="set" scoped="" ref="0x7ff8a4176ad8"/>
        <function-ref name="led0On" scoped="" ref="0x7ff8a4176c60"/>
        <function-ref name="led2On" scoped="" ref="0x7ff8a4176de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7ff8a4177348" loc="51:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7ff8a4177348"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7ff8a4177698"/>
        <function-ref name="noAck" scoped="" ref="0x7ff8a4177820"/>
        <function-ref name="wasAcked" scoped="" ref="0x7ff8a41779a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7ff8a4179c30" loc="50:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7ff8a4179c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7ff8a4178020"/>
        <function-ref name="source" scoped="" ref="0x7ff8a41781a8"/>
        <function-ref name="address" scoped="" ref="0x7ff8a4178330"/>
        <function-ref name="destination" scoped="" ref="0x7ff8a41784b8"/>
        <function-ref name="setSource" scoped="" ref="0x7ff8a4178640"/>
        <function-ref name="setDestination" scoped="" ref="0x7ff8a41787c8"/>
        <function-ref name="type" scoped="" ref="0x7ff8a4178950"/>
        <function-ref name="setType" scoped="" ref="0x7ff8a4178ad8"/>
        <function-ref name="isForMe" scoped="" ref="0x7ff8a4178c60"/>
        <function-ref name="setGroup" scoped="" ref="0x7ff8a4178de8"/>
        <function-ref name="localGroup" scoped="" ref="0x7ff8a4177020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7ff8a411c308" loc="54:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7ff8a411c308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff8a411c658"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff8a411c7e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff8a411c968"/>
        <function-ref name="cancel" scoped="" ref="0x7ff8a411caf0"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff8a411cc78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7ff8a411b020" loc="55:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7ff8a411b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ff8a411b370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7ff8a4173460" loc="47:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7ff8a4173460"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7ff8a5477908"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff8a41737d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff8a4173958"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff8a4173ae0"/>
        <function-ref name="cancel" scoped="" ref="0x7ff8a4173c68"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff8a4173df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7ff8a411ed20" loc="50:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7ff8a411ed20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff8a411d0a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7ff8a411d228"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff8a411d3b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff8a411d538"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7ff8a411d6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7ff8a411f180" loc="48:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7ff8a411f180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7ff8a5477908"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ff8a411f4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7ff8a411d908" loc="51:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7ff8a411d908"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7ff8a411dc58"/>
        <function-ref name="noAck" scoped="" ref="0x7ff8a411dde0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7ff8a411c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7ff8a411f738" loc="49:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7ff8a411f738"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7ff8a411fa88"/>
        <function-ref name="source" scoped="" ref="0x7ff8a411fc10"/>
        <function-ref name="address" scoped="" ref="0x7ff8a411fd98"/>
        <function-ref name="destination" scoped="" ref="0x7ff8a411e020"/>
        <function-ref name="setSource" scoped="" ref="0x7ff8a411e1a8"/>
        <function-ref name="setDestination" scoped="" ref="0x7ff8a411e330"/>
        <function-ref name="type" scoped="" ref="0x7ff8a411e4b8"/>
        <function-ref name="setType" scoped="" ref="0x7ff8a411e640"/>
        <function-ref name="isForMe" scoped="" ref="0x7ff8a411e7c8"/>
        <function-ref name="setGroup" scoped="" ref="0x7ff8a411e950"/>
        <function-ref name="localGroup" scoped="" ref="0x7ff8a411ead8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7ff8a4117728" loc="50:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7ff8a4117728"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7ff8a4117a78"/>
        <function-ref name="stopDone" scoped="" ref="0x7ff8a4117c00"/>
        <function-ref name="start" scoped="" ref="0x7ff8a4117d88"/>
        <function-ref name="stop" scoped="" ref="0x7ff8a4116020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7ff8a4114208" loc="52:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7ff8a4114208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7ff8a5474408"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff8a4114558"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff8a41146e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff8a4114868"/>
        <function-ref name="cancel" scoped="" ref="0x7ff8a41149f0"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff8a4114b78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ff8a4117110" loc="49:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ff8a4117110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff8a4117460"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7ff8a4116760" loc="51:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7ff8a4116760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7ff8a5474408"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ff8a4116ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7ff8a41128f8" loc="56:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7ff8a41128f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7ff8a4112c48"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7ff8a4112dd0"/>
        <function-ref name="led1On" scoped="" ref="0x7ff8a4111020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7ff8a41111a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7ff8a4111330"/>
        <function-ref name="get" scoped="" ref="0x7ff8a41114b8"/>
        <function-ref name="led1Off" scoped="" ref="0x7ff8a4111640"/>
        <function-ref name="led2Off" scoped="" ref="0x7ff8a4111c60"/>
        <function-ref name="set" scoped="" ref="0x7ff8a41117c8"/>
        <function-ref name="led0On" scoped="" ref="0x7ff8a4111950"/>
        <function-ref name="led2On" scoped="" ref="0x7ff8a4111ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x7ff8a4112020" loc="55:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialPacketInfo" scoped="" ref="0x7ff8a4112020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7ff8a5474408"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7ff8a4112370"/>
        <function-ref name="offset" scoped="" ref="0x7ff8a41124f8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7ff8a4112680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7ff8a410dd00" loc="66:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7ff8a410dd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7ff8a410a0a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7ff8a410a228"/>
        <function-ref name="start" scoped="" ref="0x7ff8a410a3b0"/>
        <function-ref name="stop" scoped="" ref="0x7ff8a410a538"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x7ff8a40a6830" loc="332:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDoneTask" scoped="" ref="0x7ff8a40a6830"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ff8a40a6b80"/>
        <function-ref name="runTask" scoped="" ref="0x7ff8a40a6d08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x7ff8a40fa398" loc="74:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialControl" scoped="" ref="0x7ff8a40fa398"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7ff8a40fa6e8"/>
        <function-ref name="stop" scoped="" ref="0x7ff8a40fa870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x7ff8a40dcd70" loc="191:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RunTx" scoped="" ref="0x7ff8a40dcd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ff8a40db0f0"/>
        <function-ref name="runTask" scoped="" ref="0x7ff8a40db278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ff8a410d6e8" loc="65:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ff8a410d6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff8a410da38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x7ff8a40f7e40" loc="75:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFlush" scoped="" ref="0x7ff8a40f7e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x7ff8a40f91c0"/>
        <function-ref name="flush" scoped="" ref="0x7ff8a40f9348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x7ff8a40a8020" loc="322:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDoneTask" scoped="" ref="0x7ff8a40a8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ff8a40a8370"/>
        <function-ref name="runTask" scoped="" ref="0x7ff8a40a84f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x7ff8a40fbb38" loc="72:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x7ff8a40fbb38"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7ff8a4103020"/>
        <function-ref name="resetSend" scoped="" ref="0x7ff8a41031a8"/>
        <function-ref name="dataReceived" scoped="" ref="0x7ff8a4103330"/>
        <function-ref name="resetReceive" scoped="" ref="0x7ff8a41034b8"/>
        <function-ref name="putData" scoped="" ref="0x7ff8a4103640"/>
        <function-ref name="putDone" scoped="" ref="0x7ff8a41037c8"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7ff8a4103950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7ff8a4103bc8" loc="73:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7ff8a4103bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7ff8a4100020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7ff8a41001a8"/>
        <function-ref name="led1On" scoped="" ref="0x7ff8a4100330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7ff8a41004b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7ff8a4100640"/>
        <function-ref name="get" scoped="" ref="0x7ff8a41007c8"/>
        <function-ref name="led1Off" scoped="" ref="0x7ff8a4100950"/>
        <function-ref name="led2Off" scoped="" ref="0x7ff8a40fa020"/>
        <function-ref name="set" scoped="" ref="0x7ff8a4100ad8"/>
        <function-ref name="led0On" scoped="" ref="0x7ff8a4100c60"/>
        <function-ref name="led2On" scoped="" ref="0x7ff8a4100de8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x7ff8a40a3918" loc="341:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x7ff8a40a3918"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ff8a40a3c68"/>
        <function-ref name="runTask" scoped="" ref="0x7ff8a40a3df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x7ff8a4105898" loc="67:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x7ff8a4105898"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7ff8a4105be8"/>
        <function-ref name="nextByte" scoped="" ref="0x7ff8a4105d70"/>
        <function-ref name="startSend" scoped="" ref="0x7ff8a4109020"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7ff8a41091a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x7ff8a4101b48" loc="68:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7ff8a4101b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7ff8a4108020"/>
        <function-ref name="byteReceived" scoped="" ref="0x7ff8a41081a8"/>
        <function-ref name="endPacket" scoped="" ref="0x7ff8a4108330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x7ff8a3fde100" loc="275:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveTask" scoped="" ref="0x7ff8a3fde100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ff8a3fde450"/>
        <function-ref name="runTask" scoped="" ref="0x7ff8a3fde5d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7ff8a3fe3020" loc="51:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7ff8a3fe3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7ff8a5474408"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff8a3fe3390"/>
        <function-ref name="getPayload" scoped="" ref="0x7ff8a3fe3518"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7ff8a3fe36a0"/>
        <function-ref name="cancel" scoped="" ref="0x7ff8a3fe3828"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff8a3fe39b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x7ff8a3fde8a0" loc="158:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalSendDone" scoped="" ref="0x7ff8a3fde8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ff8a3fdebf0"/>
        <function-ref name="runTask" scoped="" ref="0x7ff8a3fded78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7ff8a3fe4868" loc="50:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7ff8a3fe4868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7ff8a5474408"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7ff8a3fe4bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x7ff8a3fe3db8" loc="54:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketInfo" scoped="" ref="0x7ff8a3fe3db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x7ff8a5474408"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7ff8a3fe2170"/>
        <function-ref name="offset" scoped="" ref="0x7ff8a3fe22f8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7ff8a3fe2480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7ff8a3fe1a50" loc="57:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7ff8a3fe1a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7ff8a3fe1da0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7ff8a3fdf020"/>
        <function-ref name="led1On" scoped="" ref="0x7ff8a3fdf1a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7ff8a3fdf330"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7ff8a3fdf4b8"/>
        <function-ref name="get" scoped="" ref="0x7ff8a3fdf640"/>
        <function-ref name="led1Off" scoped="" ref="0x7ff8a3fdf7c8"/>
        <function-ref name="led2On" scoped="" ref="0x7ff8a3fdfde8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a3fdfad8"/>
        <function-ref name="led2Off" scoped="" ref="0x7ff8a3fdf950"/>
        <function-ref name="led0On" scoped="" ref="0x7ff8a3fdfc60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x7ff8a3fe1020" loc="56:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBytePacket" scoped="" ref="0x7ff8a3fe1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x7ff8a3fe1370"/>
        <function-ref name="nextByte" scoped="" ref="0x7ff8a3fe14f8"/>
        <function-ref name="startSend" scoped="" ref="0x7ff8a3fe1680"/>
        <function-ref name="sendCompleted" scoped="" ref="0x7ff8a3fe1808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x7ff8a3fe26c8" loc="55:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x7ff8a3fe26c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x7ff8a3fe2a18"/>
        <function-ref name="byteReceived" scoped="" ref="0x7ff8a3fe2ba0"/>
        <function-ref name="endPacket" scoped="" ref="0x7ff8a3fe2d28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x7ff8a3fcc448" loc="50:/home/paul/wsnpr/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7ff8a3fcc448"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff8a3fcc798"/>
        <function-ref name="receivedByte" scoped="" ref="0x7ff8a3fcc920"/>
        <function-ref name="receive" scoped="" ref="0x7ff8a3fccaa8"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7ff8a3fccc30"/>
        <function-ref name="receiveDone" scoped="" ref="0x7ff8a3fccdb8"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7ff8a3fd8020"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff8a3fd81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x7ff8a3fdcb38" loc="48:/home/paul/wsnpr/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SerialFrameComm" scoped="" ref="0x7ff8a3fdcb38"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x7ff8a3fd9020"/>
        <function-ref name="resetSend" scoped="" ref="0x7ff8a3fd91a8"/>
        <function-ref name="dataReceived" scoped="" ref="0x7ff8a3fd9330"/>
        <function-ref name="resetReceive" scoped="" ref="0x7ff8a3fd94b8"/>
        <function-ref name="putData" scoped="" ref="0x7ff8a3fd9640"/>
        <function-ref name="putDone" scoped="" ref="0x7ff8a3fd97c8"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x7ff8a3fd9950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7ff8a3fd8420" loc="51:/home/paul/wsnpr/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7ff8a3fd8420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7ff8a3fd8770"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7ff8a3fd88f8"/>
        <function-ref name="led1On" scoped="" ref="0x7ff8a3fd8a80"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7ff8a3fd8c08"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7ff8a3fd8d90"/>
        <function-ref name="get" scoped="" ref="0x7ff8a3fd7020"/>
        <function-ref name="led1Off" scoped="" ref="0x7ff8a3fd71a8"/>
        <function-ref name="led2Off" scoped="" ref="0x7ff8a3fd77c8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a3fd7330"/>
        <function-ref name="led0On" scoped="" ref="0x7ff8a3fd74b8"/>
        <function-ref name="led2On" scoped="" ref="0x7ff8a3fd7640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7ff8a3fac408" loc="6:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7ff8a3fac408"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff8a3fac758"/>
        <function-ref name="sendAvail" scoped="" ref="0x7ff8a3fac8e0"/>
        <function-ref name="receive" scoped="" ref="0x7ff8a3faca68"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7ff8a3facbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7ff8a3fb3020" loc="5:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7ff8a3fb3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff8a3fb3370"/>
        <function-ref name="receivedByte" scoped="" ref="0x7ff8a3fb34f8"/>
        <function-ref name="receive" scoped="" ref="0x7ff8a3fb3680"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7ff8a3fb3808"/>
        <function-ref name="receiveDone" scoped="" ref="0x7ff8a3fb3990"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7ff8a3fb3b18"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff8a3fb3ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7ff8a3fdb7e8" loc="4:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7ff8a3fdb7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7ff8a3fdbb38"/>
        <function-ref name="stop" scoped="" ref="0x7ff8a3fdbcc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7ff8a3e33430" loc="45:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7ff8a3e33430"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7ff8a3e33780"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7ff8a3e33908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7ff8a3e32bd8" loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7ff8a3e32bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff8a3e31020"/>
        <function-ref name="sendAvail" scoped="" ref="0x7ff8a3e311a8"/>
        <function-ref name="receive" scoped="" ref="0x7ff8a3e31330"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7ff8a3e314b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7ff8a3e31740" loc="49:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7ff8a3e31740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7ff8a3e31a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7ff8a3e33b90" loc="46:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7ff8a3e33b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff8a3e32020"/>
        <function-ref name="receivedByte" scoped="" ref="0x7ff8a3e321a8"/>
        <function-ref name="receive" scoped="" ref="0x7ff8a3e32330"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7ff8a3e324b8"/>
        <function-ref name="receiveDone" scoped="" ref="0x7ff8a3e32640"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7ff8a3e327c8"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff8a3e32950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ff8a3e347d0" loc="44:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Uart1C.nc">
      <component-ref qname="PlatformSerialC.UartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ff8a3e347d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff8a3e34b20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff8a3e34ca8"/>
        <function-ref name="request" scoped="" ref="0x7ff8a3e34e30"/>
        <function-ref name="granted" scoped="" ref="0x7ff8a3e33020"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff8a3e331a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7ff8a3fa09d0" loc="42:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7ff8a3fa09d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7ff8a3fa0d20"/>
        <function-ref name="configure" scoped="" ref="0x7ff8a3f9f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7ff8a3f9ec88" loc="44:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7ff8a3f9ec88"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff8a3f9c020"/>
        <function-ref name="sendAvail" scoped="" ref="0x7ff8a3f9c1a8"/>
        <function-ref name="receive" scoped="" ref="0x7ff8a3f9c330"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7ff8a3f9c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7ff8a3f9a020" loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7ff8a3f9a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7ff8a3f9a370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7ff8a3f9f800" loc="43:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7ff8a3f9f800"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff8a3f9fb50"/>
        <function-ref name="receivedByte" scoped="" ref="0x7ff8a3f9fcd8"/>
        <function-ref name="receive" scoped="" ref="0x7ff8a3f9fe60"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7ff8a3f9e020"/>
        <function-ref name="receiveDone" scoped="" ref="0x7ff8a3f9e1a8"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7ff8a3f9e330"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff8a3f9e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7ff8a3f9cd50" loc="46:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7ff8a3f9cd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff8a3f9b0d8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff8a3f9b260"/>
        <function-ref name="request" scoped="" ref="0x7ff8a3f9b3e8"/>
        <function-ref name="granted" scoped="" ref="0x7ff8a3f9b570"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff8a3f9b6f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ff8a3fa17b8" loc="41:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ff8a3fa17b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff8a3fa1b08"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff8a3fa1c90"/>
        <function-ref name="request" scoped="" ref="0x7ff8a3fa1e18"/>
        <function-ref name="granted" scoped="" ref="0x7ff8a3fa0020"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff8a3fa01a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7ff8a3f9acb8" loc="48:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Uart1P.nc">
      <component-ref qname="Msp430Uart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7ff8a3f9acb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7ff8a3f990a0"/>
        <function-ref name="txDone" scoped="" ref="0x7ff8a3f99228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7ff8a3f32a68" loc="44:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7ff8a3f32a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7ff8a3f32dd8"/>
        <function-ref name="configure" scoped="" ref="0x7ff8a3f31020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x7ff8a3f2f550" loc="46:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartByte" scoped="" ref="0x7ff8a3f2f550"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff8a3f2f8c0"/>
        <function-ref name="sendAvail" scoped="" ref="0x7ff8a3f2fa48"/>
        <function-ref name="receive" scoped="" ref="0x7ff8a3f2fbd0"/>
        <function-ref name="receiveAvail" scoped="" ref="0x7ff8a3f2fd58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430UartConfigure" ref="0x7ff8a3f2d020" loc="49:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7ff8a3f2d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7ff8a3f2d390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7ff8a3f2d658" loc="50:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7ff8a3f2d658"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7ff8a3f2d9a8"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7ff8a3f2db30"/>
        <function-ref name="setUctl" scoped="" ref="0x7ff8a3f2dcb8"/>
        <function-ref name="enableUart" scoped="" ref="0x7ff8a3f2de40"/>
        <function-ref name="setUrctl" scoped="" ref="0x7ff8a3f2c020"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7ff8a3f2c1a8"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7ff8a3f2c330"/>
        <function-ref name="getUtctl" scoped="" ref="0x7ff8a3f2c4b8"/>
        <function-ref name="getUrctl" scoped="" ref="0x7ff8a3f2c640"/>
        <function-ref name="resetUsart" scoped="" ref="0x7ff8a3f2c7c8"/>
        <function-ref name="getUmctl" scoped="" ref="0x7ff8a3f2c950"/>
        <function-ref name="disableIntr" scoped="" ref="0x7ff8a3f2cad8"/>
        <function-ref name="setUtctl" scoped="" ref="0x7ff8a3f2cc60"/>
        <function-ref name="getUbr" scoped="" ref="0x7ff8a3f2b020"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7ff8a3f2b1a8"/>
        <function-ref name="setUmctl" scoped="" ref="0x7ff8a3f2b330"/>
        <function-ref name="isUartRx" scoped="" ref="0x7ff8a3f2b4b8"/>
        <function-ref name="isUart" scoped="" ref="0x7ff8a3f2b640"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7ff8a3f2b7c8"/>
        <function-ref name="isSpi" scoped="" ref="0x7ff8a3f2b950"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7ff8a3f2bad8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7ff8a3f2bc60"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7ff8a3f2bde8"/>
        <function-ref name="enableIntr" scoped="" ref="0x7ff8a3f2a020"/>
        <function-ref name="getMode" scoped="" ref="0x7ff8a3f2a1a8"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7ff8a3f2a530"/>
        <function-ref name="clrIntr" scoped="" ref="0x7ff8a3f2a6b8"/>
        <function-ref name="setUbr" scoped="" ref="0x7ff8a3f2a840"/>
        <function-ref name="tx" scoped="" ref="0x7ff8a3f2a9c8"/>
        <function-ref name="getUctl" scoped="" ref="0x7ff8a3f2ab50"/>
        <function-ref name="disableUart" scoped="" ref="0x7ff8a3f2acd8"/>
        <function-ref name="enableSpi" scoped="" ref="0x7ff8a3f2ae60"/>
        <function-ref name="setModeUart" scoped="" ref="0x7ff8a3f29020"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7ff8a3f291a8"/>
        <function-ref name="rx" scoped="" ref="0x7ff8a3f29330"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7ff8a3f294b8"/>
        <function-ref name="isUartTx" scoped="" ref="0x7ff8a3f29640"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7ff8a3f297c8"/>
        <function-ref name="disableSpi" scoped="" ref="0x7ff8a3f29950"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7ff8a3f29ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x7ff8a3f313c8" loc="45:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UartStream" scoped="" ref="0x7ff8a3f313c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7ff8a3f31738"/>
        <function-ref name="receivedByte" scoped="" ref="0x7ff8a3f318c0"/>
        <function-ref name="receive" scoped="" ref="0x7ff8a3f31a48"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x7ff8a3f31bd0"/>
        <function-ref name="receiveDone" scoped="" ref="0x7ff8a3f31d58"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x7ff8a3f2f020"/>
        <function-ref name="sendDone" scoped="" ref="0x7ff8a3f2f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7ff8a3f289b0" loc="52:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7ff8a3f289b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff8a5294020"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff8a5294378"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ff8a3f27730"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff8a3f26088"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff8a3f27bb8"/>
        <function-ref name="overflow" scoped="" ref="0x7ff8a3f26510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7ff8a3f2e180" loc="48:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7ff8a3f2e180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff8a3f2e4f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff8a3f2e678"/>
        <function-ref name="request" scoped="" ref="0x7ff8a3f2e800"/>
        <function-ref name="granted" scoped="" ref="0x7ff8a3f2e988"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff8a3f2eb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ff8a3f33cb8" loc="43:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ff8a3f33cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff8a3f320a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff8a3f32228"/>
        <function-ref name="request" scoped="" ref="0x7ff8a3f323b0"/>
        <function-ref name="granted" scoped="" ref="0x7ff8a3f32538"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff8a3f326c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7ff8a3f28020" loc="51:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7ff8a3f28020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7ff8a3f28390"/>
        <function-ref name="txDone" scoped="" ref="0x7ff8a3f28518"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7ff8a3f26928" loc="53:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UartP.nc">
      <component-ref qname="Msp430Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7ff8a3f26928"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7ff8a3f26c78"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7ff8a3f26e00"/>
        <function-ref name="led1On" scoped="" ref="0x7ff8a3f25020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7ff8a3f251a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7ff8a3f25330"/>
        <function-ref name="get" scoped="" ref="0x7ff8a3f254b8"/>
        <function-ref name="led1Off" scoped="" ref="0x7ff8a3f25640"/>
        <function-ref name="led2On" scoped="" ref="0x7ff8a3f25c60"/>
        <function-ref name="set" scoped="" ref="0x7ff8a3f25950"/>
        <function-ref name="led2Off" scoped="" ref="0x7ff8a3f257c8"/>
        <function-ref name="led0On" scoped="" ref="0x7ff8a3f25ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7ff8a3f16528" loc="78:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7ff8a3f16528"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7ff8a3f16878"/>
        <function-ref name="txDone" scoped="" ref="0x7ff8a3f16a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7ff8a3f19528" loc="76:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7ff8a3f19528"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7ff8a3f19878"/>
        <function-ref name="stop" scoped="" ref="0x7ff8a3f19a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7ff8a3f19d18" loc="77:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1C.nc">
      <component-ref qname="HplMsp430Usart1C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7ff8a3f19d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7ff8a3f1c0a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7ff8a3f1c228"/>
        <function-ref name="setUctl" scoped="" ref="0x7ff8a3f1c3b0"/>
        <function-ref name="enableUart" scoped="" ref="0x7ff8a3f1c538"/>
        <function-ref name="setUrctl" scoped="" ref="0x7ff8a3f1c6c0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7ff8a3f1c848"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7ff8a3f1c9d0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7ff8a3f1cb58"/>
        <function-ref name="getUrctl" scoped="" ref="0x7ff8a3f1cce0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7ff8a3f1ce68"/>
        <function-ref name="getUmctl" scoped="" ref="0x7ff8a3f1b020"/>
        <function-ref name="disableIntr" scoped="" ref="0x7ff8a3f1b1a8"/>
        <function-ref name="setUtctl" scoped="" ref="0x7ff8a3f1b330"/>
        <function-ref name="getUbr" scoped="" ref="0x7ff8a3f1b5b8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7ff8a3f1b740"/>
        <function-ref name="setUmctl" scoped="" ref="0x7ff8a3f1b8c8"/>
        <function-ref name="isUartRx" scoped="" ref="0x7ff8a3f1ba50"/>
        <function-ref name="isUart" scoped="" ref="0x7ff8a3f1bbd8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7ff8a3f1bd60"/>
        <function-ref name="isSpi" scoped="" ref="0x7ff8a3f18020"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7ff8a3f181a8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7ff8a3f18330"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7ff8a3f184b8"/>
        <function-ref name="enableIntr" scoped="" ref="0x7ff8a3f18640"/>
        <function-ref name="getMode" scoped="" ref="0x7ff8a3f187c8"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7ff8a3f18b50"/>
        <function-ref name="clrIntr" scoped="" ref="0x7ff8a3f18cd8"/>
        <function-ref name="setUbr" scoped="" ref="0x7ff8a3f18e60"/>
        <function-ref name="tx" scoped="" ref="0x7ff8a3f17020"/>
        <function-ref name="getUctl" scoped="" ref="0x7ff8a3f171a8"/>
        <function-ref name="disableUart" scoped="" ref="0x7ff8a3f17330"/>
        <function-ref name="enableSpi" scoped="" ref="0x7ff8a3f174b8"/>
        <function-ref name="setModeUart" scoped="" ref="0x7ff8a3f17640"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7ff8a3f177c8"/>
        <function-ref name="rx" scoped="" ref="0x7ff8a3f17950"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7ff8a3f17ad8"/>
        <function-ref name="isUartTx" scoped="" ref="0x7ff8a3f17c60"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7ff8a3f17de8"/>
        <function-ref name="disableSpi" scoped="" ref="0x7ff8a3f16020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7ff8a3f161a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7ff8a3f0ae00" loc="80:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7ff8a3f0ae00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a3f091a8"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a3f09330"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a3f094b8"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a3f09640"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a3f097c8"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a3f09950"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a3f09ad8"/>
        <function-ref name="get" scoped="" ref="0x7ff8a3f09c60"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a3f09de8"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a3f08020"/>
        <function-ref name="set" scoped="" ref="0x7ff8a3f081a8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a3f08330"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a3f084b8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a3f08740"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a3f088c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7ff8a3f0e8e0" loc="76:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7ff8a3f0e8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7ff8a3f0ec30"/>
        <function-ref name="txDone" scoped="" ref="0x7ff8a3f0edb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7ff8a3f08c78" loc="81:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7ff8a3f08c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a3f07020"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a3f071a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a3f07330"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a3f074b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a3f07640"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a3f077c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a3f07950"/>
        <function-ref name="get" scoped="" ref="0x7ff8a3f07ad8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a3f07c60"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a3f07de8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a3f06020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a3f061a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a3f06330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a3f065b8"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a3f06740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7ff8a3f06af0" loc="82:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7ff8a3f06af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a3f06e40"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a3f05020"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a3f051a8"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a3f05330"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a3f054b8"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a3f05640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a3f057c8"/>
        <function-ref name="get" scoped="" ref="0x7ff8a3f05950"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a3f05ad8"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a3f05c60"/>
        <function-ref name="set" scoped="" ref="0x7ff8a3f05de8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a3f04020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a3f041a8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a3f04430"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a3f045b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7ff8a3f12060" loc="75:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7ff8a3f12060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7ff8a3f123b0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7ff8a3f12538"/>
        <function-ref name="setUctl" scoped="" ref="0x7ff8a3f126c0"/>
        <function-ref name="enableUart" scoped="" ref="0x7ff8a3f12848"/>
        <function-ref name="setUrctl" scoped="" ref="0x7ff8a3f129d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7ff8a3f12b58"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7ff8a3f12ce0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7ff8a3f12e68"/>
        <function-ref name="getUrctl" scoped="" ref="0x7ff8a3f11020"/>
        <function-ref name="resetUsart" scoped="" ref="0x7ff8a3f111a8"/>
        <function-ref name="getUmctl" scoped="" ref="0x7ff8a3f11330"/>
        <function-ref name="disableIntr" scoped="" ref="0x7ff8a3f114b8"/>
        <function-ref name="setUtctl" scoped="" ref="0x7ff8a3f11640"/>
        <function-ref name="getUbr" scoped="" ref="0x7ff8a3f118c8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7ff8a3f11a50"/>
        <function-ref name="setUmctl" scoped="" ref="0x7ff8a3f11bd8"/>
        <function-ref name="isUartRx" scoped="" ref="0x7ff8a3f11d60"/>
        <function-ref name="isUart" scoped="" ref="0x7ff8a3f10020"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7ff8a3f101a8"/>
        <function-ref name="isSpi" scoped="" ref="0x7ff8a3f10330"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7ff8a3f104b8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7ff8a3f10640"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7ff8a3f107c8"/>
        <function-ref name="enableIntr" scoped="" ref="0x7ff8a3f10950"/>
        <function-ref name="getMode" scoped="" ref="0x7ff8a3f10ad8"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7ff8a3f10e60"/>
        <function-ref name="clrIntr" scoped="" ref="0x7ff8a3f0f020"/>
        <function-ref name="setUbr" scoped="" ref="0x7ff8a3f0f1a8"/>
        <function-ref name="tx" scoped="" ref="0x7ff8a3f0f330"/>
        <function-ref name="getUctl" scoped="" ref="0x7ff8a3f0f4b8"/>
        <function-ref name="disableUart" scoped="" ref="0x7ff8a3f0f640"/>
        <function-ref name="enableSpi" scoped="" ref="0x7ff8a3f0f7c8"/>
        <function-ref name="setModeUart" scoped="" ref="0x7ff8a3f0f950"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7ff8a3f0fad8"/>
        <function-ref name="rx" scoped="" ref="0x7ff8a3f0fc60"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7ff8a3f0fde8"/>
        <function-ref name="isUartTx" scoped="" ref="0x7ff8a3f0e020"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7ff8a3f0e1a8"/>
        <function-ref name="disableSpi" scoped="" ref="0x7ff8a3f0e330"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7ff8a3f0e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7ff8a3f157d0" loc="74:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7ff8a3f157d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7ff8a3f15b20"/>
        <function-ref name="stop" scoped="" ref="0x7ff8a3f15ca8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7ff8a3f0b020" loc="79:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7ff8a3f0b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a3f0b370"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a3f0b4f8"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a3f0b680"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a3f0b808"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a3f0b990"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a3f0bb18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a3f0bca0"/>
        <function-ref name="get" scoped="" ref="0x7ff8a3f0be28"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a3f0a020"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a3f0a1a8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a3f0a330"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a3f0a4b8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a3f0a640"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a3f0a8c8"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a3f0aa50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7ff8a3f0d1e8" loc="78:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart1P.nc">
      <component-ref qname="HplMsp430Usart1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7ff8a3f0d1e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a3f0d538"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a3f0d6c0"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a3f0d848"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a3f0d9d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a3f0db58"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a3f0dce0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a3f0de68"/>
        <function-ref name="get" scoped="" ref="0x7ff8a3f0c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a3f0c1a8"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a3f0c330"/>
        <function-ref name="set" scoped="" ref="0x7ff8a3f0c4b8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a3f0c640"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a3f0c7c8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a3f0ca50"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a3f0cbd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7ff8a3e8b020" loc="43:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Counter32khz16C.nc">
      <component-ref qname="Counter32khz16C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7ff8a3e8b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff8a5294020"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff8a5294378"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ff8a3e8bd70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff8a3e8a6b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff8a3e8a230"/>
        <function-ref name="overflow" scoped="" ref="0x7ff8a3e8ab40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7ff8a31628c8" loc="43:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7ff8a31628c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7ff8a3162c18"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7ff8a3162da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7ff8a315b780" loc="48:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7ff8a315b780"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7ff8a315bad0"/>
        <function-ref name="configure" scoped="" ref="0x7ff8a315bc58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7ff8a315b020" loc="46:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7ff8a315b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7ff8a315b370"/>
        <function-ref name="txDone" scoped="" ref="0x7ff8a315b4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ff8a3163bd0" loc="42:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ff8a3163bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff8a3162020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff8a31621a8"/>
        <function-ref name="request" scoped="" ref="0x7ff8a3162330"/>
        <function-ref name="granted" scoped="" ref="0x7ff8a31624b8"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff8a3162640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7ff8a31607c0" loc="45:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7ff8a31607c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7ff8a3160b10"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7ff8a3160c98"/>
        <function-ref name="setUctl" scoped="" ref="0x7ff8a3160e20"/>
        <function-ref name="enableUart" scoped="" ref="0x7ff8a315f020"/>
        <function-ref name="setUrctl" scoped="" ref="0x7ff8a315f1a8"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7ff8a315f330"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7ff8a315f4b8"/>
        <function-ref name="getUtctl" scoped="" ref="0x7ff8a315f640"/>
        <function-ref name="getUrctl" scoped="" ref="0x7ff8a315f7c8"/>
        <function-ref name="resetUsart" scoped="" ref="0x7ff8a315f950"/>
        <function-ref name="getUmctl" scoped="" ref="0x7ff8a315fad8"/>
        <function-ref name="disableIntr" scoped="" ref="0x7ff8a315fc60"/>
        <function-ref name="setUtctl" scoped="" ref="0x7ff8a315fde8"/>
        <function-ref name="getUbr" scoped="" ref="0x7ff8a315e120"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7ff8a315e2a8"/>
        <function-ref name="setUmctl" scoped="" ref="0x7ff8a315e430"/>
        <function-ref name="isUartRx" scoped="" ref="0x7ff8a315e5b8"/>
        <function-ref name="isUart" scoped="" ref="0x7ff8a315e740"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7ff8a315e8c8"/>
        <function-ref name="isSpi" scoped="" ref="0x7ff8a315ea50"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7ff8a315ebd8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7ff8a315ed60"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7ff8a315d020"/>
        <function-ref name="enableIntr" scoped="" ref="0x7ff8a315d1a8"/>
        <function-ref name="getMode" scoped="" ref="0x7ff8a315d330"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7ff8a315d6b8"/>
        <function-ref name="clrIntr" scoped="" ref="0x7ff8a315d840"/>
        <function-ref name="setUbr" scoped="" ref="0x7ff8a315d9c8"/>
        <function-ref name="tx" scoped="" ref="0x7ff8a315db50"/>
        <function-ref name="getUctl" scoped="" ref="0x7ff8a315dcd8"/>
        <function-ref name="disableUart" scoped="" ref="0x7ff8a315de60"/>
        <function-ref name="enableSpi" scoped="" ref="0x7ff8a315c020"/>
        <function-ref name="setModeUart" scoped="" ref="0x7ff8a315c1a8"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7ff8a315c330"/>
        <function-ref name="rx" scoped="" ref="0x7ff8a315c4b8"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7ff8a315c640"/>
        <function-ref name="isUartTx" scoped="" ref="0x7ff8a315c7c8"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7ff8a315c950"/>
        <function-ref name="disableSpi" scoped="" ref="0x7ff8a315cad8"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7ff8a315cc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7ff8a3160060" loc="44:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430Usart1C.nc">
      <component-ref qname="PlatformSerialC.UartC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7ff8a3160060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7ff8a31603b0"/>
        <function-ref name="userId" scoped="" ref="0x7ff8a3160538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7ff8a3e71848" loc="42:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7ff8a3e71848"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7ff8a3e71b98"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7ff8a3e71d20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7ff8a3e6fd80" loc="45:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7ff8a3e6fd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7ff8a3e6e170"/>
        <function-ref name="configure" scoped="" ref="0x7ff8a3e6e2f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7ff8a3e73910" loc="40:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7ff8a3e73910"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7ff8a3e73c60"/>
        <function-ref name="txDone" scoped="" ref="0x7ff8a3e73de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ff8a3e72608" loc="41:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ff8a3e72608"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff8a3e72958"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff8a3e72ae0"/>
        <function-ref name="request" scoped="" ref="0x7ff8a3e72c68"/>
        <function-ref name="granted" scoped="" ref="0x7ff8a3e72df0"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff8a3e71020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7ff8a3e6f080" loc="43:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UsartShare1P.nc">
      <component-ref qname="Msp430UsartShare1P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7ff8a3e6f080"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7ff8a3e6f3d0"/>
        <function-ref name="userId" scoped="" ref="0x7ff8a3e6f558"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7ff8a3e6b2a8" loc="43:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7ff8a3e6b2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7ff8a3e6b5f8"/>
        <function-ref name="userId" scoped="" ref="0x7ff8a3e6b780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7ff8a3e6d480" loc="39:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7ff8a3e6d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7ff8a3e6d7f0"/>
        <function-ref name="txDone" scoped="" ref="0x7ff8a3e6d978"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7ff8a3e6cbd8" loc="42:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7ff8a3e6cbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff8a3e6b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7ff8a3e6dd60" loc="40:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7ff8a3e6dd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7ff8a3e6c170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7ff8a3e6c438" loc="41:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7ff8a3e6c438"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7ff8a3e6c788"/>
        <function-ref name="txDone" scoped="" ref="0x7ff8a3e6c910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7ff8a3e67af8" loc="92:/home/paul/wsnpr/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7ff8a3e67af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7ff8a3e67e68"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7ff8a3e66020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7ff8a3e656d8" loc="96:/home/paul/wsnpr/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7ff8a3e656d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7ff8a3e65a48"/>
        <function-ref name="configure" scoped="" ref="0x7ff8a3e65bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7ff8a3e66268" loc="93:/home/paul/wsnpr/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7ff8a3e66268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff8a3e665b8"/>
        <function-ref name="requested" scoped="" ref="0x7ff8a3e66740"/>
        <function-ref name="granted" scoped="" ref="0x7ff8a3e668c8"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff8a3e66a50"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7ff8a3e66bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ff8a3e68d80" loc="91:/home/paul/wsnpr/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ff8a3e68d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff8a3e67170"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff8a3e672f8"/>
        <function-ref name="request" scoped="" ref="0x7ff8a3e67480"/>
        <function-ref name="granted" scoped="" ref="0x7ff8a3e67608"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff8a3e67790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7ff8a3e66e20" loc="94:/home/paul/wsnpr/tinyos-main/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7ff8a3e66e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7ff8a3e651a8"/>
        <function-ref name="userId" scoped="" ref="0x7ff8a3e65330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ff8a30fb080" loc="44:/home/paul/wsnpr/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ff8a30fb080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff8a30fb3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7ff8a30fb658" loc="45:/home/paul/wsnpr/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7ff8a30fb658"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7ff8a30fb9a8"/>
        <function-ref name="isEmpty" scoped="" ref="0x7ff8a30fbb30"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7ff8a30fbcb8"/>
        <function-ref name="dequeue" scoped="" ref="0x7ff8a30fbe40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7ff8a30f7388" loc="55:/home/paul/wsnpr/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7ff8a30f7388"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7ff8a30f76f8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7ff8a30f7880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7ff8a30f5020" loc="60:/home/paul/wsnpr/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7ff8a30f5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7ff8a30f5390"/>
        <function-ref name="configure" scoped="" ref="0x7ff8a30f5518"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7ff8a30f57a0" loc="61:/home/paul/wsnpr/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7ff8a30f57a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7ff8a30f5af0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7ff8a30f5c78"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7ff8a30f5e00"/>
        <function-ref name="dequeue" scoped="" ref="0x7ff8a30f4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7ff8a30f7ac8" loc="56:/home/paul/wsnpr/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7ff8a30f7ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff8a30f7e18"/>
        <function-ref name="requested" scoped="" ref="0x7ff8a30f6020"/>
        <function-ref name="granted" scoped="" ref="0x7ff8a30f61a8"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff8a30f6330"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7ff8a30f64b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7ff8a30f4268" loc="62:/home/paul/wsnpr/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7ff8a30f4268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7ff8a30f45b8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7ff8a30f4740"/>
        <function-ref name="led1On" scoped="" ref="0x7ff8a30f48c8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7ff8a30f4a50"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7ff8a30f4bd8"/>
        <function-ref name="get" scoped="" ref="0x7ff8a30f4d60"/>
        <function-ref name="led1Off" scoped="" ref="0x7ff8a30f2020"/>
        <function-ref name="led0On" scoped="" ref="0x7ff8a30f2640"/>
        <function-ref name="set" scoped="" ref="0x7ff8a30f2330"/>
        <function-ref name="led2On" scoped="" ref="0x7ff8a30f21a8"/>
        <function-ref name="led2Off" scoped="" ref="0x7ff8a30f24b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ff8a30f8668" loc="54:/home/paul/wsnpr/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ff8a30f8668"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff8a30f89d8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff8a30f8b60"/>
        <function-ref name="request" scoped="" ref="0x7ff8a30f8ce8"/>
        <function-ref name="granted" scoped="" ref="0x7ff8a30f8e70"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff8a30f7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7ff8a30f6700" loc="57:/home/paul/wsnpr/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7ff8a30f6700"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7ff8a30f6a50"/>
        <function-ref name="userId" scoped="" ref="0x7ff8a30f6bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7ff8a30f2908" loc="75:/home/paul/wsnpr/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7ff8a30f2908"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ff8a30f2c58"/>
        <function-ref name="runTask" scoped="" ref="0x7ff8a30f2de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7ff8a3e61b98" loc="72:/home/paul/wsnpr/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7ff8a3e61b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7ff8a3e4b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7ff8a3e4b268" loc="73:/home/paul/wsnpr/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7ff8a3e4b268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff8a3e4b5b8"/>
        <function-ref name="requested" scoped="" ref="0x7ff8a3e4b740"/>
        <function-ref name="granted" scoped="" ref="0x7ff8a3e4b8c8"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff8a3e4ba50"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7ff8a3e4bbd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7ff8a3e61478" loc="70:/home/paul/wsnpr/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7ff8a3e61478"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7ff8a3e617c8"/>
        <function-ref name="stop" scoped="" ref="0x7ff8a3e61950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7ff8a3e4be20" loc="74:/home/paul/wsnpr/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7ff8a3e4be20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7ff8a3e4a1a8"/>
        <function-ref name="userId" scoped="" ref="0x7ff8a3e4a330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7ff8a30c4d20" loc="62:/home/paul/wsnpr/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7ff8a30c4d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7ff8a30c30a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7ff8a30c32e8" loc="63:/home/paul/wsnpr/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7ff8a30c32e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff8a30c3638"/>
        <function-ref name="requested" scoped="" ref="0x7ff8a30c37c0"/>
        <function-ref name="granted" scoped="" ref="0x7ff8a30c3948"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff8a30c3ad0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7ff8a30c3c58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7ff8a30c4600" loc="60:/home/paul/wsnpr/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AsyncStdControl" scoped="" ref="0x7ff8a30c4600"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7ff8a30c4950"/>
        <function-ref name="stop" scoped="" ref="0x7ff8a30c4ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7ff8a30c2020" loc="64:/home/paul/wsnpr/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Msp430UsartShare1P.PowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7ff8a30c2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7ff8a30c2370"/>
        <function-ref name="userId" scoped="" ref="0x7ff8a30c24f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430UartConfigure" ref="0x7ff8a3e2c020" loc="3:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430UartConfigure" scoped="" ref="0x7ff8a3e2c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7ff8a3e2c370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7ff8a3e2c650" loc="4:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ff8a3e2c650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff8a3e2c9a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff8a3e2cb28"/>
        <function-ref name="request" scoped="" ref="0x7ff8a3e2ccb0"/>
        <function-ref name="granted" scoped="" ref="0x7ff8a3e2ce38"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff8a3e2b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7ff8a3e2f670" loc="2:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/TelosSerialP.nc">
      <component-ref qname="TelosSerialP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7ff8a3e2f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7ff8a3e2f9c0"/>
        <function-ref name="stop" scoped="" ref="0x7ff8a3e2fb48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x7ff8a3e18020" loc="47:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Info" scoped="" ref="0x7ff8a3e18020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x7ff8a3e18370"/>
        <function-ref name="offset" scoped="" ref="0x7ff8a3e184f8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x7ff8a3e18680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7ff8a3e00128" loc="45:/home/paul/wsnpr/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="RssiBaseAppC.LaserTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7ff8a3e00128"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff8a5296828"/>
            <typename><typedef-ref name="TMilli" ref="0x7ff8a5296b80"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ff8a3dfd5f0"/>
        <function-ref name="fired" scoped="" ref="0x7ff8a3dffa48"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7ff8a3dfe8c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7ff8a3dfe470"/>
        <function-ref name="getdt" scoped="" ref="0x7ff8a3dfc020"/>
        <function-ref name="gett0" scoped="" ref="0x7ff8a3dfda40"/>
        <function-ref name="isRunning" scoped="" ref="0x7ff8a3dfe020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7ff8a3e00c70"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7ff8a3dfd020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7ff8a3dff158"/>
        <function-ref name="stop" scoped="" ref="0x7ff8a3dff5f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7ff8a3df83b0" loc="42:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/chips/s1087/HamamatsuS1087ParC.nc">
      <component-ref qname="RssiBaseAppC.LaserSensor"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Read" scoped="" ref="0x7ff8a3df83b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a3a21020"/>
        <function-ref name="readDone" scoped="" ref="0x7ff8a3a21470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7ff8a3a21b10" loc="43:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/chips/s1087/HamamatsuS1087ParC.nc">
      <component-ref qname="RssiBaseAppC.LaserSensor"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x7ff8a3a21b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7ff8a3a1e4c0"/>
        <function-ref name="postBuffer" scoped="" ref="0x7ff8a3a1f6f0"/>
        <function-ref name="read" scoped="" ref="0x7ff8a3a1e020"/>
        <function-ref name="readDone" scoped="" ref="0x7ff8a3a1d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DeviceMetadata" ref="0x7ff8a3df9c38" loc="41:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/chips/s1087/HamamatsuS1087ParC.nc">
      <component-ref qname="RssiBaseAppC.LaserSensor"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DeviceMetadata" scoped="" ref="0x7ff8a3df9c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x7ff8a3df8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7ff8a30b7a78" loc="48:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/AdcReadClientC.nc">
      <component-ref qname="RssiBaseAppC.LaserSensor.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Read" scoped="" ref="0x7ff8a30b7a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a30b6620"/>
        <function-ref name="readDone" scoped="" ref="0x7ff8a30b6a70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7ff8a30b41d8" loc="49:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/AdcReadClientC.nc">
      <component-ref qname="RssiBaseAppC.LaserSensor.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7ff8a30b41d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7ff8a3decb18"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7ff8a3dec250"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7ff8a30b4d58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResourceReadNow" ref="0x7ff8a3dba020" loc="46:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubResourceReadNow" scoped="" ref="0x7ff8a3dba020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff8a3dba370"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff8a3dba4f8"/>
        <function-ref name="request" scoped="" ref="0x7ff8a3dba680"/>
        <function-ref name="granted" scoped="" ref="0x7ff8a3dba808"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff8a3dba990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7ff8a3dcd020" loc="38:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Read" scoped="" ref="0x7ff8a3dcd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a3dcdb68"/>
        <function-ref name="readDone" scoped="" ref="0x7ff8a3dcc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x7ff8a3dc8d48" loc="39:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadNow" scoped="" ref="0x7ff8a3dc8d48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7ff8a3dcb8f0"/>
        <function-ref name="readDone" scoped="" ref="0x7ff8a3dcbd78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceReadNow" ref="0x7ff8a3dca968" loc="40:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceReadNow" scoped="" ref="0x7ff8a3dca968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff8a3dcacb8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff8a3dcae40"/>
        <function-ref name="request" scoped="" ref="0x7ff8a3dbd020"/>
        <function-ref name="granted" scoped="" ref="0x7ff8a3dbd1a8"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff8a3dbd330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7ff8a3db94f8" loc="48:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Config" scoped="" ref="0x7ff8a3db94f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7ff8a3decb18"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7ff8a3dec250"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7ff8a3db80c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SingleChannel" ref="0x7ff8a3da7ab8" loc="49:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0x7ff8a3da7ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7ff8a3da7e08"/>
        <function-ref name="configureSingle" scoped="" ref="0x7ff8a3db7020"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7ff8a3db71a8"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7ff8a3db7330"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7ff8a3db74b8"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7ff8a3db7640"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7ff8a3db77c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceRead" ref="0x7ff8a3dbdc48" loc="44:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRead" scoped="" ref="0x7ff8a3dbdc48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff8a3dbc020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff8a3dbc1a8"/>
        <function-ref name="request" scoped="" ref="0x7ff8a3dbc330"/>
        <function-ref name="granted" scoped="" ref="0x7ff8a3dbc4b8"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff8a3dbc640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readDone" ref="0x7ff8a3d8b590" loc="136:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="readDone" scoped="" ref="0x7ff8a3d8b590"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ff8a3d8b8e0"/>
        <function-ref name="runTask" scoped="" ref="0x7ff8a3d8ba68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12MultiChannel" ref="0x7ff8a30a8c18" loc="48:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="RssiBaseAppC.LaserSensor.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7ff8a30a8c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7ff8a30a7020"/>
        <function-ref name="configure" scoped="" ref="0x7ff8a30a71a8"/>
        <function-ref name="dataReady" scoped="" ref="0x7ff8a30a7330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12SingleChannel" ref="0x7ff8a30a9cb8" loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="RssiBaseAppC.LaserSensor.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7ff8a30a9cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7ff8a30a80a0"/>
        <function-ref name="configureSingle" scoped="" ref="0x7ff8a30a8228"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7ff8a30a83b0"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7ff8a30a8538"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7ff8a30a86c0"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7ff8a30a8848"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7ff8a30a89d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12Overflow" ref="0x7ff8a30a7578" loc="49:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="RssiBaseAppC.LaserSensor.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7ff8a30a7578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x7ff8a30a78c8"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x7ff8a30a7a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7ff8a30a7e50" loc="51:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="RssiBaseAppC.LaserSensor.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7ff8a30a7e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7ff8a3decb18"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7ff8a3dec250"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7ff8a30a6a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ff8a30a9100" loc="46:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="RssiBaseAppC.LaserSensor.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ff8a30a9100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff8a30a9450"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff8a30a95d8"/>
        <function-ref name="request" scoped="" ref="0x7ff8a30a9760"/>
        <function-ref name="granted" scoped="" ref="0x7ff8a30a98e8"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff8a30a9a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MultiChannel" ref="0x7ff8a3d513c8" loc="42:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MultiChannel" scoped="" ref="0x7ff8a3d513c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7ff8a3d51718"/>
        <function-ref name="configure" scoped="" ref="0x7ff8a3d518a0"/>
        <function-ref name="dataReady" scoped="" ref="0x7ff8a3d51a28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DMAExtension" ref="0x7ff8a3d4f1c8" loc="44:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DMAExtension" scoped="" ref="0x7ff8a3d4f1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7ff8a3d4f518"/>
        <function-ref name="stop" scoped="" ref="0x7ff8a3d4f6a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Overflow" ref="0x7ff8a3d50300" loc="43:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7ff8a3d50300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x7ff8a3d50650"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x7ff8a3d507d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SingleChannel" ref="0x7ff8a3d54db0" loc="41:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0x7ff8a3d54db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7ff8a3d53170"/>
        <function-ref name="configureSingle" scoped="" ref="0x7ff8a3d532f8"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7ff8a3d53480"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7ff8a3d53608"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7ff8a3d53790"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7ff8a3d53918"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7ff8a3d53aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ff8a3d59ab0" loc="40:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ff8a3d59ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff8a3d59e00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff8a3d54020"/>
        <function-ref name="request" scoped="" ref="0x7ff8a3d541a8"/>
        <function-ref name="granted" scoped="" ref="0x7ff8a3d54330"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff8a3d544b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MultiChannel" ref="0x7ff8a3d4a900" loc="42:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MultiChannel" scoped="" ref="0x7ff8a3d4a900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7ff8a3d4ac50"/>
        <function-ref name="configure" scoped="" ref="0x7ff8a3d4add8"/>
        <function-ref name="dataReady" scoped="" ref="0x7ff8a3d48020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAdc12" ref="0x7ff8a3d395f0" loc="48:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplAdc12" scoped="" ref="0x7ff8a3d395f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAdc12"/>
      </instance>
      <interface-functions>
        <function-ref name="getCtl0" scoped="" ref="0x7ff8a3d39940"/>
        <function-ref name="getMCtl" scoped="" ref="0x7ff8a3d39ac8"/>
        <function-ref name="resetIFGs" scoped="" ref="0x7ff8a3d39c50"/>
        <function-ref name="isBusy" scoped="" ref="0x7ff8a3d39dd8"/>
        <function-ref name="conversionDone" scoped="" ref="0x7ff8a3d45020"/>
        <function-ref name="getCtl1" scoped="" ref="0x7ff8a3d451a8"/>
        <function-ref name="setMCtl" scoped="" ref="0x7ff8a3d45330"/>
        <function-ref name="startConversion" scoped="" ref="0x7ff8a3d454b8"/>
        <function-ref name="setCtl0" scoped="" ref="0x7ff8a3d45640"/>
        <function-ref name="getMem" scoped="" ref="0x7ff8a3d457c8"/>
        <function-ref name="setIEFlags" scoped="" ref="0x7ff8a3d45950"/>
        <function-ref name="getIEFlags" scoped="" ref="0x7ff8a3d45ad8"/>
        <function-ref name="stopConversion" scoped="" ref="0x7ff8a3d45c60"/>
        <function-ref name="enableConversion" scoped="" ref="0x7ff8a3d44020"/>
        <function-ref name="setCtl1" scoped="" ref="0x7ff8a3d441a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port64" ref="0x7ff8a3d2b938" loc="58:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7ff8a3d2b938"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a3d2bc88"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a3d2be10"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a3d2a020"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a3d2a1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a3d2a330"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a3d2a4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a3d2a640"/>
        <function-ref name="get" scoped="" ref="0x7ff8a3d2a7c8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a3d2a950"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a3d2aad8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a3d2ac60"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a3d2ade8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a3d29020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a3d292a8"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a3d29430"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CompareA1" ref="0x7ff8a3d330c0" loc="53:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x7ff8a3d330c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff8a3d33410"/>
        <function-ref name="setEvent" scoped="" ref="0x7ff8a3d33598"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ff8a3d33720"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ff8a3d338a8"/>
        <function-ref name="fired" scoped="" ref="0x7ff8a3d33a30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ControlA0" ref="0x7ff8a3d37b68" loc="50:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x7ff8a3d37b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ff8a3d36020"/>
        <function-ref name="getControl" scoped="" ref="0x7ff8a3d361a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff8a3d36330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ff8a3d364b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ff8a3d36640"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff8a3d367c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ff8a3d36950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ff8a3d36ad8"/>
        <function-ref name="setControl" scoped="" ref="0x7ff8a3d36c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DMAExtension" ref="0x7ff8a3d47670" loc="44:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DMAExtension" scoped="" ref="0x7ff8a3d47670"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7ff8a3d479c0"/>
        <function-ref name="stop" scoped="" ref="0x7ff8a3d47b48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port62" ref="0x7ff8a3d2fc48" loc="56:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7ff8a3d2fc48"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a3d2e020"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a3d2e1a8"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a3d2e330"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a3d2e4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a3d2e640"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a3d2e7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a3d2e950"/>
        <function-ref name="get" scoped="" ref="0x7ff8a3d2ead8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a3d2ec60"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a3d2ede8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a3d2d020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a3d2d1a8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a3d2d330"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a3d2d5b8"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a3d2d740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Overflow" ref="0x7ff8a3d488b0" loc="43:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7ff8a3d488b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x7ff8a3d48c00"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x7ff8a3d48d88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port67" ref="0x7ff8a3d25528" loc="61:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7ff8a3d25528"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a3d25878"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a3d25a00"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a3d25b88"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a3d25d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a3d24020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a3d241a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a3d24330"/>
        <function-ref name="get" scoped="" ref="0x7ff8a3d244b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a3d24640"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a3d247c8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a3d24950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a3d24ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a3d24c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a3d23020"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a3d231a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port60" ref="0x7ff8a3d33db0" loc="54:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7ff8a3d33db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a3d322e8"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a3d32470"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a3d325f8"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a3d32780"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a3d32908"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a3d32a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a3d32c18"/>
        <function-ref name="get" scoped="" ref="0x7ff8a3d32da0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a3d31020"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a3d311a8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a3d31330"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a3d314b8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a3d31640"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a3d318c8"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a3d31a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ff8a3d4c5f8" loc="40:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ff8a3d4c5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff8a3d4c948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port65" ref="0x7ff8a3d297b0" loc="59:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7ff8a3d297b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a3d29b00"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a3d29c88"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a3d29e10"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a3d28020"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a3d281a8"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a3d28330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a3d284b8"/>
        <function-ref name="get" scoped="" ref="0x7ff8a3d28640"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a3d287c8"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a3d28950"/>
        <function-ref name="set" scoped="" ref="0x7ff8a3d28ad8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a3d28c60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a3d28de8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a3d27120"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a3d272a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerA" ref="0x7ff8a3d444e0" loc="49:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7ff8a3d444e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff8a3d44830"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ff8a3d449b8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff8a3d44b40"/>
        <function-ref name="get" scoped="" ref="0x7ff8a3d44cc8"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff8a3d44e50"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff8a3d37020"/>
        <function-ref name="getMode" scoped="" ref="0x7ff8a3d371a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff8a3d37330"/>
        <function-ref name="overflow" scoped="" ref="0x7ff8a3d374b8"/>
        <function-ref name="setMode" scoped="" ref="0x7ff8a3d37640"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7ff8a3d377c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADCArbiterInfo" ref="0x7ff8a3d46020" loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCArbiterInfo" scoped="" ref="0x7ff8a3d46020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7ff8a3d46370"/>
        <function-ref name="userId" scoped="" ref="0x7ff8a3d464f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ControlA1" ref="0x7ff8a3d35060" loc="51:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x7ff8a3d35060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ff8a3d353b0"/>
        <function-ref name="getControl" scoped="" ref="0x7ff8a3d35538"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff8a3d356c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ff8a3d35848"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ff8a3d359d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff8a3d35b58"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ff8a3d35ce0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ff8a3d35e68"/>
        <function-ref name="setControl" scoped="" ref="0x7ff8a3d34020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SingleChannel" ref="0x7ff8a3d4b270" loc="41:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0x7ff8a3d4b270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7ff8a3d4b5c0"/>
        <function-ref name="configureSingle" scoped="" ref="0x7ff8a3d4b748"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7ff8a3d4b8d0"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7ff8a3d4ba58"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7ff8a3d4bbe0"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7ff8a3d4bd68"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7ff8a3d4a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port63" ref="0x7ff8a3d2dac0" loc="57:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7ff8a3d2dac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a3d2de10"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a3d2c020"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a3d2c1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a3d2c330"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a3d2c4b8"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a3d2c640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a3d2c7c8"/>
        <function-ref name="get" scoped="" ref="0x7ff8a3d2c950"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a3d2cad8"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a3d2cc60"/>
        <function-ref name="set" scoped="" ref="0x7ff8a3d2cde8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a3d2b020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a3d2b1a8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a3d2b430"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a3d2b5b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CompareA0" ref="0x7ff8a3d34390" loc="52:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x7ff8a3d34390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff8a3d346e0"/>
        <function-ref name="setEvent" scoped="" ref="0x7ff8a3d34868"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ff8a3d349f0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ff8a3d34b78"/>
        <function-ref name="fired" scoped="" ref="0x7ff8a3d34d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port61" ref="0x7ff8a3d31dd0" loc="55:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7ff8a3d31dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a3d30170"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a3d302f8"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a3d30480"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a3d30608"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a3d30790"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a3d30918"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a3d30aa0"/>
        <function-ref name="get" scoped="" ref="0x7ff8a3d30c28"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a3d30db0"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a3d2f020"/>
        <function-ref name="set" scoped="" ref="0x7ff8a3d2f1a8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a3d2f330"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a3d2f4b8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a3d2f740"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a3d2f8c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Port66" ref="0x7ff8a3d27628" loc="60:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7ff8a3d27628"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7ff8a3d27978"/>
        <function-ref name="isInput" scoped="" ref="0x7ff8a3d27b00"/>
        <function-ref name="setResistor" scoped="" ref="0x7ff8a3d27c88"/>
        <function-ref name="toggle" scoped="" ref="0x7ff8a3d27e10"/>
        <function-ref name="isOutput" scoped="" ref="0x7ff8a3d26020"/>
        <function-ref name="getResistor" scoped="" ref="0x7ff8a3d261a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7ff8a3d26330"/>
        <function-ref name="get" scoped="" ref="0x7ff8a3d264b8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7ff8a3d26640"/>
        <function-ref name="getRaw" scoped="" ref="0x7ff8a3d267c8"/>
        <function-ref name="set" scoped="" ref="0x7ff8a3d26950"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7ff8a3d26ad8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7ff8a3d26c60"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7ff8a3d25020"/>
        <function-ref name="clr" scoped="" ref="0x7ff8a3d251a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAdc12" ref="0x7ff8a3c6f8e8" loc="46:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/HplAdc12P.nc">
      <component-ref qname="HplAdc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplAdc12" scoped="" ref="0x7ff8a3c6f8e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAdc12"/>
      </instance>
      <interface-functions>
        <function-ref name="getCtl0" scoped="" ref="0x7ff8a3c6fc38"/>
        <function-ref name="getMCtl" scoped="" ref="0x7ff8a3c6fdc0"/>
        <function-ref name="resetIFGs" scoped="" ref="0x7ff8a3c6c020"/>
        <function-ref name="isBusy" scoped="" ref="0x7ff8a3c6c1a8"/>
        <function-ref name="conversionDone" scoped="" ref="0x7ff8a3c6c330"/>
        <function-ref name="getCtl1" scoped="" ref="0x7ff8a3c6c4b8"/>
        <function-ref name="setMCtl" scoped="" ref="0x7ff8a3c6c640"/>
        <function-ref name="startConversion" scoped="" ref="0x7ff8a3c6c7c8"/>
        <function-ref name="setCtl0" scoped="" ref="0x7ff8a3c6c950"/>
        <function-ref name="getMem" scoped="" ref="0x7ff8a3c6cad8"/>
        <function-ref name="setIEFlags" scoped="" ref="0x7ff8a3c6cc60"/>
        <function-ref name="getIEFlags" scoped="" ref="0x7ff8a3c6cde8"/>
        <function-ref name="stopConversion" scoped="" ref="0x7ff8a3c6b020"/>
        <function-ref name="enableConversion" scoped="" ref="0x7ff8a3c6b2a8"/>
        <function-ref name="setCtl1" scoped="" ref="0x7ff8a3c6b430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7ff8a3be0510" loc="86:/home/paul/wsnpr/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7ff8a3be0510"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7ff8a3be0880"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7ff8a3be0a08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7ff8a3bdf550" loc="89:/home/paul/wsnpr/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7ff8a3bdf550"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7ff8a3bdf8c0"/>
        <function-ref name="configure" scoped="" ref="0x7ff8a3bdfa48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ff8a3be2750" loc="85:/home/paul/wsnpr/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ff8a3be2750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff8a3be2ac0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff8a3be2c48"/>
        <function-ref name="request" scoped="" ref="0x7ff8a3be2dd0"/>
        <function-ref name="granted" scoped="" ref="0x7ff8a3be0020"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff8a3be01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7ff8a3be0c50" loc="87:/home/paul/wsnpr/tinyos-main/tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7ff8a3be0c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7ff8a3bdf020"/>
        <function-ref name="userId" scoped="" ref="0x7ff8a3bdf1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ff8a3085de0" loc="44:/home/paul/wsnpr/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ff8a3085de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff8a3084170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x7ff8a30843f8" loc="45:/home/paul/wsnpr/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RoundRobinQueue" scoped="" ref="0x7ff8a30843f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7ff8a3084748"/>
        <function-ref name="isEmpty" scoped="" ref="0x7ff8a30848d0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7ff8a3084a58"/>
        <function-ref name="dequeue" scoped="" ref="0x7ff8a3084be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7ff8a3082e78" loc="52:/home/paul/wsnpr/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7ff8a3082e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7ff8a3081218"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7ff8a30813a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7ff8a3080020" loc="56:/home/paul/wsnpr/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7ff8a3080020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7ff8a3080390"/>
        <function-ref name="configure" scoped="" ref="0x7ff8a3080518"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7ff8a30807a0" loc="57:/home/paul/wsnpr/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7ff8a30807a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7ff8a3080af0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7ff8a3080c78"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7ff8a3080e00"/>
        <function-ref name="dequeue" scoped="" ref="0x7ff8a307f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ff8a3082180" loc="51:/home/paul/wsnpr/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ff8a3082180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff8a30824f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff8a3082678"/>
        <function-ref name="request" scoped="" ref="0x7ff8a3082800"/>
        <function-ref name="granted" scoped="" ref="0x7ff8a3082988"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff8a3082b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7ff8a30815e8" loc="53:/home/paul/wsnpr/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7ff8a30815e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7ff8a3081938"/>
        <function-ref name="userId" scoped="" ref="0x7ff8a3081ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7ff8a307f2e8" loc="68:/home/paul/wsnpr/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7ff8a307f2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ff8a307f638"/>
        <function-ref name="runTask" scoped="" ref="0x7ff8a307f7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7ff8a3bc3990" loc="55:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <component-ref qname="Msp430RefVoltArbiterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Config" scoped="" ref="0x7ff8a3bc3990"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7ff8a3decb18"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7ff8a3dec250"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7ff8a3bc2560"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcResource" ref="0x7ff8a3bc44f8" loc="54:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <component-ref qname="Msp430RefVoltArbiterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcResource" scoped="" ref="0x7ff8a3bc44f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff8a3bc4848"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff8a3bc49d0"/>
        <function-ref name="request" scoped="" ref="0x7ff8a3bc4b58"/>
        <function-ref name="granted" scoped="" ref="0x7ff8a3bc4ce0"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff8a3bc4e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ClientResource" ref="0x7ff8a3bc5270" loc="52:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <component-ref qname="Msp430RefVoltArbiterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ClientResource" scoped="" ref="0x7ff8a3bc5270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff8a3bc55c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff8a3bc5748"/>
        <function-ref name="request" scoped="" ref="0x7ff8a3bc58d0"/>
        <function-ref name="granted" scoped="" ref="0x7ff8a3bc5a58"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff8a3bc5be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAdc12" ref="0x7ff8a3bbdb28" loc="43:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplAdc12" scoped="" ref="0x7ff8a3bbdb28"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAdc12"/>
      </instance>
      <interface-functions>
        <function-ref name="getCtl0" scoped="" ref="0x7ff8a3bbde78"/>
        <function-ref name="getMCtl" scoped="" ref="0x7ff8a3bbc030"/>
        <function-ref name="resetIFGs" scoped="" ref="0x7ff8a3bbc1b8"/>
        <function-ref name="isBusy" scoped="" ref="0x7ff8a3bbc340"/>
        <function-ref name="conversionDone" scoped="" ref="0x7ff8a3bbc4c8"/>
        <function-ref name="getCtl1" scoped="" ref="0x7ff8a3bbc650"/>
        <function-ref name="setMCtl" scoped="" ref="0x7ff8a3bbc7d8"/>
        <function-ref name="startConversion" scoped="" ref="0x7ff8a3bbc960"/>
        <function-ref name="setCtl0" scoped="" ref="0x7ff8a3bbcae8"/>
        <function-ref name="getMem" scoped="" ref="0x7ff8a3bbcc70"/>
        <function-ref name="setIEFlags" scoped="" ref="0x7ff8a3bbcdf8"/>
        <function-ref name="getIEFlags" scoped="" ref="0x7ff8a3bbb020"/>
        <function-ref name="stopConversion" scoped="" ref="0x7ff8a3bbb1a8"/>
        <function-ref name="enableConversion" scoped="" ref="0x7ff8a3bbb430"/>
        <function-ref name="setCtl1" scoped="" ref="0x7ff8a3bbb5b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SwitchOffTimer" ref="0x7ff8a3bb6c70" loc="45:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SwitchOffTimer" scoped="" ref="0x7ff8a3bb6c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff8a5296828"/>
            <typename><typedef-ref name="TMilli" ref="0x7ff8a5296b80"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ff8a3bb2e78"/>
        <function-ref name="fired" scoped="" ref="0x7ff8a3bb45a8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7ff8a3bb22d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7ff8a3bb4e48"/>
        <function-ref name="getdt" scoped="" ref="0x7ff8a3bb1748"/>
        <function-ref name="gett0" scoped="" ref="0x7ff8a3bb12f8"/>
        <function-ref name="isRunning" scoped="" ref="0x7ff8a3bb49f8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7ff8a3bb57e8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7ff8a3bb28a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7ff8a3bb5c88"/>
        <function-ref name="stop" scoped="" ref="0x7ff8a3bb4158"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RefVolt_2_5V" ref="0x7ff8a3bbd020" loc="39:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_2_5V" scoped="" ref="0x7ff8a3bbd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7ff8a3bbd370"/>
        <function-ref name="stopDone" scoped="" ref="0x7ff8a3bbd4f8"/>
        <function-ref name="start" scoped="" ref="0x7ff8a3bbd680"/>
        <function-ref name="stop" scoped="" ref="0x7ff8a3bbd808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SwitchOffSettleTimer" ref="0x7ff8a3bb1db0" loc="46:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SwitchOffSettleTimer" scoped="" ref="0x7ff8a3bb1db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff8a5296828"/>
            <typename><typedef-ref name="TMilli" ref="0x7ff8a5296b80"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ff8a3bac088"/>
        <function-ref name="fired" scoped="" ref="0x7ff8a3baf708"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7ff8a3bad470"/>
        <function-ref name="isOneShot" scoped="" ref="0x7ff8a3bad020"/>
        <function-ref name="getdt" scoped="" ref="0x7ff8a3bac928"/>
        <function-ref name="gett0" scoped="" ref="0x7ff8a3bac4d8"/>
        <function-ref name="isRunning" scoped="" ref="0x7ff8a3bafb58"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7ff8a3bb0930"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7ff8a3bada40"/>
        <function-ref name="startOneShot" scoped="" ref="0x7ff8a3bb0dd0"/>
        <function-ref name="stop" scoped="" ref="0x7ff8a3baf2b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RefVolt_1_5V" ref="0x7ff8a3bbe368" loc="38:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_1_5V" scoped="" ref="0x7ff8a3bbe368"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7ff8a3bbe6b8"/>
        <function-ref name="stopDone" scoped="" ref="0x7ff8a3bbe840"/>
        <function-ref name="start" scoped="" ref="0x7ff8a3bbe9c8"/>
        <function-ref name="stop" scoped="" ref="0x7ff8a3bbeb50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SwitchOnTimer" ref="0x7ff8a3bbba48" loc="44:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SwitchOnTimer" scoped="" ref="0x7ff8a3bbba48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff8a5296828"/>
            <typename><typedef-ref name="TMilli" ref="0x7ff8a5296b80"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ff8a3bb8d60"/>
        <function-ref name="fired" scoped="" ref="0x7ff8a3bb9470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7ff8a3bb81c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7ff8a3bb9d10"/>
        <function-ref name="getdt" scoped="" ref="0x7ff8a3bb6648"/>
        <function-ref name="gett0" scoped="" ref="0x7ff8a3bb61f8"/>
        <function-ref name="isRunning" scoped="" ref="0x7ff8a3bb98c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7ff8a3bba620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7ff8a3bb8790"/>
        <function-ref name="startOneShot" scoped="" ref="0x7ff8a3bbaac0"/>
        <function-ref name="stop" scoped="" ref="0x7ff8a3bb9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7ff8a3b5c1c8" loc="43:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Config" scoped="" ref="0x7ff8a3b5c1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7ff8a3decb18"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7ff8a3dec250"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7ff8a3b5cd48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RefVolt_2_5V" ref="0x7ff8a3b5fd70" loc="42:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_2_5V" scoped="" ref="0x7ff8a3b5fd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7ff8a3b5e0f0"/>
        <function-ref name="stopDone" scoped="" ref="0x7ff8a3b5e278"/>
        <function-ref name="start" scoped="" ref="0x7ff8a3b5e400"/>
        <function-ref name="stop" scoped="" ref="0x7ff8a3b5e588"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcResource" ref="0x7ff8a3b604c0" loc="40:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcResource" scoped="" ref="0x7ff8a3b604c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff8a3b60810"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff8a3b60998"/>
        <function-ref name="request" scoped="" ref="0x7ff8a3b60b20"/>
        <function-ref name="granted" scoped="" ref="0x7ff8a3b60ca8"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff8a3b60e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ClientResource" ref="0x7ff8a3b61208" loc="38:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ClientResource" scoped="" ref="0x7ff8a3b61208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff8a3b61558"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff8a3b616e0"/>
        <function-ref name="request" scoped="" ref="0x7ff8a3b61868"/>
        <function-ref name="granted" scoped="" ref="0x7ff8a3b619f0"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff8a3b61b78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="switchOff" ref="0x7ff8a3b5a910" loc="52:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="switchOff" scoped="" ref="0x7ff8a3b5a910"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ff8a3b5ac60"/>
        <function-ref name="runTask" scoped="" ref="0x7ff8a3b5ade8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RefVolt_1_5V" ref="0x7ff8a3b5f200" loc="41:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_1_5V" scoped="" ref="0x7ff8a3b5f200"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7ff8a3b5f550"/>
        <function-ref name="stopDone" scoped="" ref="0x7ff8a3b5f6d8"/>
        <function-ref name="start" scoped="" ref="0x7ff8a3b5f860"/>
        <function-ref name="stop" scoped="" ref="0x7ff8a3b5f9e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7ff8a3b2de08" loc="45:/home/paul/wsnpr/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="Msp430RefVoltArbiterP.SwitchOnDelayTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7ff8a3b2de08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff8a5296828"/>
            <typename><typedef-ref name="TMilli" ref="0x7ff8a5296b80"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ff8a3b280c0"/>
        <function-ref name="fired" scoped="" ref="0x7ff8a3b2b798"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7ff8a3b2a4d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7ff8a3b2a088"/>
        <function-ref name="getdt" scoped="" ref="0x7ff8a3b28960"/>
        <function-ref name="gett0" scoped="" ref="0x7ff8a3b28510"/>
        <function-ref name="isRunning" scoped="" ref="0x7ff8a3b2bbe8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7ff8a3b2c9e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7ff8a3b2aaa8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7ff8a3b2ce80"/>
        <function-ref name="stop" scoped="" ref="0x7ff8a3b2b348"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7ff8a3b26350" loc="45:/home/paul/wsnpr/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="Msp430RefVoltArbiterP.SwitchOffDelayTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7ff8a3b26350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff8a5296828"/>
            <typename><typedef-ref name="TMilli" ref="0x7ff8a5296b80"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ff8a3b226c8"/>
        <function-ref name="fired" scoped="" ref="0x7ff8a3b25db0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7ff8a3b24ad8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7ff8a3b24688"/>
        <function-ref name="getdt" scoped="" ref="0x7ff8a3b21020"/>
        <function-ref name="gett0" scoped="" ref="0x7ff8a3b22b18"/>
        <function-ref name="isRunning" scoped="" ref="0x7ff8a3b24238"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7ff8a3b25020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7ff8a3b220f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7ff8a3b254c0"/>
        <function-ref name="stop" scoped="" ref="0x7ff8a3b25960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7ff8a3b20a60" loc="45:/home/paul/wsnpr/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="Msp430RefVoltArbiterP.SwitchOffSettleTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7ff8a3b20a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff8a5296828"/>
            <typename><typedef-ref name="TMilli" ref="0x7ff8a5296b80"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ff8a3b1cd60"/>
        <function-ref name="fired" scoped="" ref="0x7ff8a3b1e470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7ff8a3b1c1c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7ff8a3b1ed10"/>
        <function-ref name="getdt" scoped="" ref="0x7ff8a3b1b648"/>
        <function-ref name="gett0" scoped="" ref="0x7ff8a3b1b1f8"/>
        <function-ref name="isRunning" scoped="" ref="0x7ff8a3b1e8c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7ff8a3b1f620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7ff8a3b1c790"/>
        <function-ref name="startOneShot" scoped="" ref="0x7ff8a3b1fac0"/>
        <function-ref name="stop" scoped="" ref="0x7ff8a3b1e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfSub" ref="0x7ff8a3099998" loc="44:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="RssiBaseAppC.LaserSensor.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfSub" scoped="" ref="0x7ff8a3099998"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7ff8a3decb18"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7ff8a3dec250"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7ff8a3098560"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ConfUp" ref="0x7ff8a3098b30" loc="45:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="RssiBaseAppC.LaserSensor.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfUp" scoped="" ref="0x7ff8a3098b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7ff8a3decb18"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7ff8a3dec250"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7ff8a3097728"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7ff8a30ae020" loc="49:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <component-ref qname="RssiBaseAppC.LaserSensor.AdcReadStreamClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7ff8a30ae020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7ff8a3decb18"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7ff8a3dec250"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7ff8a30aeba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7ff8a30b2358" loc="48:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <component-ref qname="RssiBaseAppC.LaserSensor.AdcReadStreamClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x7ff8a30b2358"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7ff8a30b1dc8"/>
        <function-ref name="postBuffer" scoped="" ref="0x7ff8a30b1020"/>
        <function-ref name="read" scoped="" ref="0x7ff8a30b1928"/>
        <function-ref name="readDone" scoped="" ref="0x7ff8a30af830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Adc12SingleChannel" ref="0x7ff8a3ae7c08" loc="23:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <component-ref qname="WireAdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7ff8a3ae7c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7ff8a3ae6020"/>
        <function-ref name="configureSingle" scoped="" ref="0x7ff8a3ae61a8"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7ff8a3ae6330"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7ff8a3ae64b8"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7ff8a3ae6640"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7ff8a3ae67c8"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7ff8a3ae6950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7ff8a3ae8668" loc="22:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <component-ref qname="WireAdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7ff8a3ae8668"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7ff8a3decb18"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7ff8a3dec250"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7ff8a3ae7220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7ff8a3aec3f0" loc="20:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <component-ref qname="WireAdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x7ff8a3aec3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7ff8a3aebdc8"/>
        <function-ref name="postBuffer" scoped="" ref="0x7ff8a3aeb020"/>
        <function-ref name="read" scoped="" ref="0x7ff8a3aeb928"/>
        <function-ref name="readDone" scoped="" ref="0x7ff8a3ae9830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7ff8a3ae41c8" loc="24:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <component-ref qname="WireAdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ff8a3ae41c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff8a3ae4518"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff8a3ae46a0"/>
        <function-ref name="request" scoped="" ref="0x7ff8a3ae4828"/>
        <function-ref name="granted" scoped="" ref="0x7ff8a3ae49b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff8a3ae4b38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="bufferDone" ref="0x7ff8a3ab0a00" loc="156:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="bufferDone" scoped="" ref="0x7ff8a3ab0a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ff8a3ab0d50"/>
        <function-ref name="runTask" scoped="" ref="0x7ff8a3aaf020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readStreamDone" ref="0x7ff8a3abd6a8" loc="119:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="readStreamDone" scoped="" ref="0x7ff8a3abd6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ff8a3abd9f8"/>
        <function-ref name="runTask" scoped="" ref="0x7ff8a3abdb80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readStreamFail" ref="0x7ff8a3ab8b60" loc="135:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="readStreamFail" scoped="" ref="0x7ff8a3ab8b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7ff8a3ab7020"/>
        <function-ref name="runTask" scoped="" ref="0x7ff8a3ab71a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7ff8a3ad8740" loc="54:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7ff8a3ad8740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff8a5296828"/>
            <typename><typedef-ref name="TMilli" ref="0x7ff8a5296b80"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff8a6018020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ff8a3ad4020"/>
        <function-ref name="fired" scoped="" ref="0x7ff8a3ad6020"/>
        <function-ref name="startAt" scoped="" ref="0x7ff8a3ad6930"/>
        <function-ref name="isRunning" scoped="" ref="0x7ff8a3ad64a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x7ff8a3ad44a8"/>
        <function-ref name="start" scoped="" ref="0x7ff8a3ad7578"/>
        <function-ref name="stop" scoped="" ref="0x7ff8a3ad7a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ff8a3ae0020" loc="48:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ff8a3ae0020"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7ff8a592b8e0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7ff8a592b8e0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff8a3ae0370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7ff8a3ad94c0" loc="53:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7ff8a3ad94c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7ff8a3decb18"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7ff8a3dec250"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7ff8a3ad8088"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SingleChannel" ref="0x7ff8a3adcd38" loc="52:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0x7ff8a3adcd38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7ff8a3adb0d8"/>
        <function-ref name="configureSingle" scoped="" ref="0x7ff8a3adb260"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7ff8a3adb3e8"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7ff8a3adb570"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7ff8a3adb6f8"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7ff8a3adb880"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7ff8a3adba08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7ff8a3ae0c98" loc="49:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x7ff8a3ae0c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7ff8a3add5f8"/>
        <function-ref name="postBuffer" scoped="" ref="0x7ff8a3adf820"/>
        <function-ref name="read" scoped="" ref="0x7ff8a3add158"/>
        <function-ref name="readDone" scoped="" ref="0x7ff8a3adc088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7ff8a3a751a8" loc="44:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="WireAdcStreamP.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7ff8a3a751a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff8a5296828"/>
            <typename><typedef-ref name="TMilli" ref="0x7ff8a5296b80"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff8a6018020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ff8a3a73918"/>
        <function-ref name="fired" scoped="" ref="0x7ff8a3a74980"/>
        <function-ref name="startAt" scoped="" ref="0x7ff8a3a73310"/>
        <function-ref name="isRunning" scoped="" ref="0x7ff8a3a74e08"/>
        <function-ref name="getAlarm" scoped="" ref="0x7ff8a3a73da0"/>
        <function-ref name="start" scoped="" ref="0x7ff8a3a74020"/>
        <function-ref name="stop" scoped="" ref="0x7ff8a3a744f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ff8a3a76960" loc="43:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="WireAdcStreamP.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ff8a3a76960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff8a3a76cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7ff8a303ae18" loc="44:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7ff8a303ae18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff8a5294020"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff8a5294378"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ff8a3037628"/>
        <function-ref name="fired" scoped="" ref="0x7ff8a3038580"/>
        <function-ref name="startAt" scoped="" ref="0x7ff8a3037020"/>
        <function-ref name="isRunning" scoped="" ref="0x7ff8a3038a08"/>
        <function-ref name="getAlarm" scoped="" ref="0x7ff8a3037ab0"/>
        <function-ref name="start" scoped="" ref="0x7ff8a3039be8"/>
        <function-ref name="stop" scoped="" ref="0x7ff8a30380f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ff8a303a630" loc="43:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ff8a303a630"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff8a303a980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7ff8a30225b8" loc="41:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7ff8a30225b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff8a3022908"/>
        <function-ref name="setEvent" scoped="" ref="0x7ff8a3022a90"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ff8a3022c18"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ff8a3022da0"/>
        <function-ref name="fired" scoped="" ref="0x7ff8a3021020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7ff8a3026c48" loc="39:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7ff8a3026c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff8a3024020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ff8a30241a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff8a3024330"/>
        <function-ref name="get" scoped="" ref="0x7ff8a30244b8"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff8a3024640"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff8a30247c8"/>
        <function-ref name="getMode" scoped="" ref="0x7ff8a3024950"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff8a3024ad8"/>
        <function-ref name="overflow" scoped="" ref="0x7ff8a3024c60"/>
        <function-ref name="setMode" scoped="" ref="0x7ff8a3024de8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7ff8a3023020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7ff8a30232a8" loc="40:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7ff8a30232a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ff8a30235f8"/>
        <function-ref name="getControl" scoped="" ref="0x7ff8a3023780"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff8a3023908"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ff8a3023a90"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ff8a3023c18"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff8a3023da0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ff8a3022020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ff8a30221a8"/>
        <function-ref name="setControl" scoped="" ref="0x7ff8a3022330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7ff8a3018020" loc="49:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7ff8a3018020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7ff8a3018370"/>
        <function-ref name="setEvent" scoped="" ref="0x7ff8a30184f8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7ff8a3018680"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7ff8a3018808"/>
        <function-ref name="fired" scoped="" ref="0x7ff8a3018990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7ff8a301b568" loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7ff8a301b568"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7ff8a301b8b8"/>
        <function-ref name="setClockSource" scoped="" ref="0x7ff8a301ba40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff8a301bbc8"/>
        <function-ref name="get" scoped="" ref="0x7ff8a301bd50"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff8a301a020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff8a301a1a8"/>
        <function-ref name="getMode" scoped="" ref="0x7ff8a301a330"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff8a301a4b8"/>
        <function-ref name="overflow" scoped="" ref="0x7ff8a301a640"/>
        <function-ref name="setMode" scoped="" ref="0x7ff8a301a7c8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7ff8a301a950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7ff8a301f4f8" loc="46:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7ff8a301f4f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff8a5294020"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff8a5294378"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ff8a301cc88"/>
        <function-ref name="fired" scoped="" ref="0x7ff8a301ed08"/>
        <function-ref name="startAt" scoped="" ref="0x7ff8a301c680"/>
        <function-ref name="isRunning" scoped="" ref="0x7ff8a301c1f8"/>
        <function-ref name="getAlarm" scoped="" ref="0x7ff8a301b150"/>
        <function-ref name="start" scoped="" ref="0x7ff8a301e3a8"/>
        <function-ref name="stop" scoped="" ref="0x7ff8a301e880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7ff8a3020bd8" loc="45:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7ff8a3020bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7ff8a301f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7ff8a301abd8" loc="48:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7ff8a301abd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7ff8a3019020"/>
        <function-ref name="getControl" scoped="" ref="0x7ff8a30191a8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7ff8a3019330"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7ff8a30194b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7ff8a3019640"/>
        <function-ref name="disableEvents" scoped="" ref="0x7ff8a30197c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7ff8a3019950"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7ff8a3019ad8"/>
        <function-ref name="setControl" scoped="" ref="0x7ff8a3019c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7ff8a3034020" loc="61:/home/paul/wsnpr/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7ff8a3034020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff8a5296828"/>
            <typename><typedef-ref name="TMilli" ref="0x7ff8a5296b80"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff8a6018020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ff8a3031690"/>
        <function-ref name="fired" scoped="" ref="0x7ff8a30326f8"/>
        <function-ref name="startAt" scoped="" ref="0x7ff8a3031088"/>
        <function-ref name="isRunning" scoped="" ref="0x7ff8a3032b80"/>
        <function-ref name="getAlarm" scoped="" ref="0x7ff8a3031b18"/>
        <function-ref name="start" scoped="" ref="0x7ff8a3034d70"/>
        <function-ref name="stop" scoped="" ref="0x7ff8a3032270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7ff8a302d450" loc="73:/home/paul/wsnpr/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7ff8a302d450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff8a5294020"/>
            <typename><typedef-ref name="T32khz" ref="0x7ff8a5294378"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7ff8a302bab0"/>
        <function-ref name="fired" scoped="" ref="0x7ff8a302cb30"/>
        <function-ref name="startAt" scoped="" ref="0x7ff8a302b4a8"/>
        <function-ref name="isRunning" scoped="" ref="0x7ff8a302b020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7ff8a302a020"/>
        <function-ref name="start" scoped="" ref="0x7ff8a302c1d0"/>
        <function-ref name="stop" scoped="" ref="0x7ff8a302c6a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7ff8a30301a8" loc="68:/home/paul/wsnpr/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7ff8a30301a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff8a5296828"/>
            <typename><typedef-ref name="TMilli" ref="0x7ff8a5296b80"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff8a6018020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7ff8a302f020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7ff8a302f930"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7ff8a302f4a8"/>
        <function-ref name="overflow" scoped="" ref="0x7ff8a302fdb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x7ff8a3a449d8" loc="26:/home/paul/wsnpr/tinyos-main/tos/system/ArbitratedReadStreamC.nc">
      <component-ref qname="WireAdcStreamP.ArbitrateReadStream"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Service" scoped="" ref="0x7ff8a3a449d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7ff8a3a414e0"/>
        <function-ref name="postBuffer" scoped="" ref="0x7ff8a3a42578"/>
        <function-ref name="read" scoped="" ref="0x7ff8a3a41020"/>
        <function-ref name="readDone" scoped="" ref="0x7ff8a3a3f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7ff8a3a6fd58" loc="24:/home/paul/wsnpr/tinyos-main/tos/system/ArbitratedReadStreamC.nc">
      <component-ref qname="WireAdcStreamP.ArbitrateReadStream"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x7ff8a3a6fd58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7ff8a3a45718"/>
        <function-ref name="postBuffer" scoped="" ref="0x7ff8a3a468f0"/>
        <function-ref name="read" scoped="" ref="0x7ff8a3a45258"/>
        <function-ref name="readDone" scoped="" ref="0x7ff8a3a44198"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7ff8a3a3f6b8" loc="27:/home/paul/wsnpr/tinyos-main/tos/system/ArbitratedReadStreamC.nc">
      <component-ref qname="WireAdcStreamP.ArbitrateReadStream"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ff8a3a3f6b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff8a3a3fa28"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff8a3a3fbb0"/>
        <function-ref name="request" scoped="" ref="0x7ff8a3a3fd38"/>
        <function-ref name="granted" scoped="" ref="0x7ff8a3a3e020"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff8a3a3e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12MultiChannel" ref="0x7ff8a30473f0" loc="48:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="RssiBaseAppC.LaserSensor.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7ff8a30473f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7ff8a3047740"/>
        <function-ref name="configure" scoped="" ref="0x7ff8a30478c8"/>
        <function-ref name="dataReady" scoped="" ref="0x7ff8a3047a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12SingleChannel" ref="0x7ff8a30483f0" loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="RssiBaseAppC.LaserSensor.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7ff8a30483f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7ff8a3048740"/>
        <function-ref name="configureSingle" scoped="" ref="0x7ff8a30488c8"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7ff8a3048a50"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7ff8a3048bd8"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7ff8a3048d60"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7ff8a3047020"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7ff8a30471a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12Overflow" ref="0x7ff8a3047c98" loc="49:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="RssiBaseAppC.LaserSensor.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7ff8a3047c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x7ff8a3046020"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x7ff8a30461a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7ff8a30465a8" loc="51:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="RssiBaseAppC.LaserSensor.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7ff8a30465a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7ff8a3decb18"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7ff8a3dec250"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7ff8a3044150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7ff8a30496d8" loc="46:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="RssiBaseAppC.LaserSensor.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7ff8a30496d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7ff8a3049a28"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7ff8a3049bb0"/>
        <function-ref name="request" scoped="" ref="0x7ff8a3049d38"/>
        <function-ref name="granted" scoped="" ref="0x7ff8a3048020"/>
        <function-ref name="isOwner" scoped="" ref="0x7ff8a30481a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfSub" ref="0x7ff8a2fdab28" loc="44:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="RssiBaseAppC.LaserSensor.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfSub" scoped="" ref="0x7ff8a2fdab28"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7ff8a3decb18"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7ff8a3dec250"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7ff8a2fd8728"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ConfUp" ref="0x7ff8a2fd8cf8" loc="45:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="RssiBaseAppC.LaserSensor.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfUp" scoped="" ref="0x7ff8a2fd8cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7ff8a3decb18"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7ff8a3dec250"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7ff8a2fd78f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AdcConfigure" ref="0x7ff8a3a289b0" loc="44:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/chips/s1087/HamamatsuS1087ParP.nc">
      <component-ref qname="HamamatsuS1087ParP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7ff8a3a289b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7ff8a3decb18"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7ff8a3dec250"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7ff8a3a27560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DeviceMetadata" ref="0x7ff8a3a280c0" loc="43:/home/paul/wsnpr/tinyos-main/tos/platforms/telosa/chips/s1087/HamamatsuS1087ParP.nc">
      <component-ref qname="HamamatsuS1087ParP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DeviceMetadata" scoped="" ref="0x7ff8a3a280c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x7ff8a3a28410"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/home/paul/wsnpr/tinyos-main/tos/interfaces/Init.nc">
      <documentation loc="34:/home/paul/wsnpr/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7ff8a545f598" loc="62:/home/paul/wsnpr/tinyos-main/tos/interfaces/Init.nc">
        <documentation loc="53:/home/paul/wsnpr/tinyos-main/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/home/paul/wsnpr/tinyos-main/tos/interfaces/Boot.nc">
      <documentation loc="42:/home/paul/wsnpr/tinyos-main/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7ff8a5461290" loc="60:/home/paul/wsnpr/tinyos-main/tos/interfaces/Boot.nc">
        <documentation loc="51:/home/paul/wsnpr/tinyos-main/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="33:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x7ff8a5432020" loc="48:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x7ff8a54353e0" loc="43:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x7ff8a5434920" loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x7ff8a5436d20" loc="42:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x7ff8a5435af0" loc="45:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x7ff8a5436020" loc="40:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x7ff8a54366a0" loc="41:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x7ff8a5434258" loc="46:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/home/paul/wsnpr/tinyos-main/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:/home/paul/wsnpr/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7ff8a5560830" loc="62:/home/paul/wsnpr/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/home/paul/wsnpr/tinyos-main/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7ff8a5877450"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x7ff8a53e4e08" loc="55:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="49:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7ff8a53e4b98" loc="55:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x7ff8a53e6448" loc="42:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7ff8a542b978"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x7ff8a542a438"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7ff8a53e3678" loc="57:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x7ff8a53e14c0" loc="59:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff8a592c1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x7ff8a53e44a0" loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7ff8a53e3d50" loc="58:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7ff8a53e6b80" loc="43:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff8a592c1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x7ff8a53e5328" loc="44:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7ff8a53e5cf8" loc="46:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7ff8a542b978"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7ff8a542a438"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7ff8a53e5a88" loc="46:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7ff8a542b978"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7ff8a542a438"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="39:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="33:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7ff8a53d6470" loc="44:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="41:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x7ff8a53d49e0" loc="84:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="75:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ff8a592c1d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x7ff8a53d4770" loc="84:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ff8a592c1d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7ff8a53d2588" loc="91:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="86:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7ff8a53d2318" loc="91:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7ff8a53d4020" loc="73:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7ff8a53d5728" loc="68:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="58:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; TI calls this overflow but it is actually an overrun.&#10; If COV is set it says that another capture has occurred&#10; prior to reading a previous capture.  The previous value&#10; of a capture has been lost.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff8a592c1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x7ff8a53d6d98" loc="56:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="46:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7ff8a53d6b28" loc="56:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="38:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="33:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7ff8a53dfcc0" loc="40:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x7ff8a53dc600" loc="41:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7ff8a53dc390" loc="41:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x7ff8a53db020" loc="42:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7ff8a53dccf0" loc="42:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x7ff8a53db970" loc="43:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7ff8a53db700" loc="43:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7ff8a53d9020" loc="45:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7ff8a53ede28" loc="52:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7ff8a53ea5c8" loc="55:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x7ff8a53ea358" loc="55:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7ff8a53eb528" loc="53:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7ff8a53ef328" loc="45:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7ff8a53ebc00" loc="54:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7ff8a53ee178" loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7ff8a53ed7a0" loc="51:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7ff8a53efa58" loc="46:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff8a592c1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7ff8a53ee820" loc="48:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x7ff8a53ed108" loc="50:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7ff8a53eee50" loc="50:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x7ff8a53e9020" loc="56:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x7ff8a53eacf0" loc="56:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7ff8a53ae290" loc="39:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="77:/home/paul/wsnpr/tinyos-main/tos/interfaces/McuSleep.nc">
      <documentation loc="65:/home/paul/wsnpr/tinyos-main/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @date   Oct 25, 2016&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="irq_preamble" ref="0x7ff8a54e41d8" loc="85:/home/paul/wsnpr/tinyos-main/tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="irq_postamble" ref="0x7ff8a54e48b0" loc="86:/home/paul/wsnpr/tinyos-main/tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7ff8a54e9a38" loc="79:/home/paul/wsnpr/tinyos-main/tos/interfaces/McuSleep.nc">
        <documentation loc="78:/home/paul/wsnpr/tinyos-main/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/home/paul/wsnpr/tinyos-main/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/home/paul/wsnpr/tinyos-main/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7ff8a56301d8" loc="52:/home/paul/wsnpr/tinyos-main/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/home/paul/wsnpr/tinyos-main/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/home/paul/wsnpr/tinyos-main/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/home/paul/wsnpr/tinyos-main/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7ff8a5929020" loc="57:/home/paul/wsnpr/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/home/paul/wsnpr/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7ff8a5928020" loc="72:/home/paul/wsnpr/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/home/paul/wsnpr/tinyos-main/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7ff8a5929718" loc="65:/home/paul/wsnpr/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/home/paul/wsnpr/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff8a592c1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/home/paul/wsnpr/tinyos-main/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7ff8a591d070" loc="67:/home/paul/wsnpr/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/home/paul/wsnpr/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7ff8a591d860" loc="75:/home/paul/wsnpr/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/home/paul/wsnpr/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/home/paul/wsnpr/tinyos-main/tos/lib/timer/Timer.nc">
      <documentation loc="36:/home/paul/wsnpr/tinyos-main/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7ff8a52920f0" loc="53:/home/paul/wsnpr/tinyos-main/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7ff8a52920f0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7ff8a528c918" loc="136:/home/paul/wsnpr/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="132:/home/paul/wsnpr/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff8a6018020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7ff8a5290488" loc="83:/home/paul/wsnpr/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="80:/home/paul/wsnpr/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7ff8a528d0b8" loc="114:/home/paul/wsnpr/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="100:/home/paul/wsnpr/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7ff8a6018020"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7ff8a6018020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7ff8a528fab0" loc="114:/home/paul/wsnpr/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7ff8a6018020"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7ff8a528fdc8" loc="114:/home/paul/wsnpr/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7ff8a6018020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7ff8a528f378" loc="98:/home/paul/wsnpr/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="94:/home/paul/wsnpr/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff8a592c1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7ff8a528b878" loc="151:/home/paul/wsnpr/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="146:/home/paul/wsnpr/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff8a6018020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7ff8a528b070" loc="144:/home/paul/wsnpr/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="138:/home/paul/wsnpr/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff8a6018020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7ff8a5290bb8" loc="92:/home/paul/wsnpr/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="86:/home/paul/wsnpr/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff8a592c1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7ff8a5292bc0" loc="64:/home/paul/wsnpr/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="56:/home/paul/wsnpr/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7ff8a6018020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7ff8a5292950" loc="64:/home/paul/wsnpr/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7ff8a6018020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7ff8a528c020" loc="129:/home/paul/wsnpr/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="116:/home/paul/wsnpr/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7ff8a6018020"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7ff8a6018020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7ff8a528d9e8" loc="129:/home/paul/wsnpr/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7ff8a6018020"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7ff8a528dd00" loc="129:/home/paul/wsnpr/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7ff8a6018020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7ff8a5291628" loc="73:/home/paul/wsnpr/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="66:/home/paul/wsnpr/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7ff8a6018020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7ff8a52913b8" loc="73:/home/paul/wsnpr/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7ff8a6018020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7ff8a5291dd0" loc="78:/home/paul/wsnpr/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="75:/home/paul/wsnpr/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Intercept" loc="15:/home/paul/wsnpr/tinyos-main/tos/interfaces/Intercept.nc">
      <documentation loc="34:/home/paul/wsnpr/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="forward" ref="0x7ff8a52983b8" loc="31:/home/paul/wsnpr/tinyos-main/tos/interfaces/Intercept.nc">
        <documentation loc="16:/home/paul/wsnpr/tinyos-main/tos/interfaces/Intercept.nc">
          <short>&#10; Signals that a message has been received, which is supposed to be&#10; forwarded to another destination.</short>
          <long>&#10; Signals that a message has been received, which is supposed to be&#10; forwarded to another destination. &#10;&#10; @param 'message_t* ONE msg' The complete message received.&#10;&#10; @param 'void* COUNT(len) payload' The payload portion of the packet for this&#10; protocol layer.&#10;&#10; @param len The length of the payload buffer.&#10;&#10; @return TRUE indicates the packet should be forwarded, FALSE&#10; indicates that it should not be forwarded.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Intercept"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff8a592c1d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff8a529cab8" loc="31:/home/paul/wsnpr/tinyos-main/tos/interfaces/Intercept.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7ff8a529cde0" loc="31:/home/paul/wsnpr/tinyos-main/tos/interfaces/Intercept.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7ff8a5298128" loc="31:/home/paul/wsnpr/tinyos-main/tos/interfaces/Intercept.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadStream" loc="57:/home/paul/wsnpr/tinyos-main/tos/interfaces/ReadStream.nc">
      <documentation loc="33:/home/paul/wsnpr/tinyos-main/tos/interfaces/ReadStream.nc">
        <short>&#10; The ReadStream interface is intended for buffered high data rate&#10; reading, usually from sensor devices.</short>
        <long>&#10; The ReadStream interface is intended for buffered high data rate&#10; reading, usually from sensor devices. The type of the values being&#10; read is given as a template argument. &#10;&#10; &#60;p> To use this interface, allocate one or more buffers in your own&#10; space. Then, call postBuffer to pass these buffers into the&#10; device. Call read() to begin the sampling process. The buffers will&#10; be filled in the order originally posted, and a bufferDone() event&#10; will be signaled once each buffer has been filled with data. At any&#10; time while the read() is running, you may post new buffers to be&#10; filled. If the lower layer finishes signaling readDone() and then&#10; finds that no more buffers have been posted, it will consider the&#10; read to be finished, and signal readDone(). &#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7ff8a5285e68" loc="57:/home/paul/wsnpr/tinyos-main/tos/interfaces/ReadStream.nc">
          <interfacedef-ref qname="ReadStream"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7ff8a5285e68"/></type-var>
        </typedef>
      </parameters>
      <function event="" provided="0" name="bufferDone" ref="0x7ff8a527c020" loc="89:/home/paul/wsnpr/tinyos-main/tos/interfaces/ReadStream.nc">
        <documentation loc="80:/home/paul/wsnpr/tinyos-main/tos/interfaces/ReadStream.nc">
          <short>&#10; Signalled when a previously posted buffer has been filled by the&#10; device.</short>
          <long>&#10; Signalled when a previously posted buffer has been filled by the&#10; device. In the event of a read error, result will not equal&#10; SUCCESS, and the buffer will be filled with zeroes.&#10;&#10; @param result SUCCESS if the buffer was filled without errors&#10; @param 'val_t* COUNT(count) buf' a pointer to the buffer that has been filled&#10; @param count the number of values actually read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7ff8a5285e68"/></type-var>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7ff8a527f5f0" loc="89:/home/paul/wsnpr/tinyos-main/tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7ff8a527f948" loc="90:/home/paul/wsnpr/tinyos-main/tos/interfaces/ReadStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7ff8a5285e68"/></type-var>
            </type-pointer>
          </variable>
          <variable name="count" ref="0x7ff8a527fc80" loc="90:/home/paul/wsnpr/tinyos-main/tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="postBuffer" ref="0x7ff8a5280cb8" loc="68:/home/paul/wsnpr/tinyos-main/tos/interfaces/ReadStream.nc">
        <documentation loc="58:/home/paul/wsnpr/tinyos-main/tos/interfaces/ReadStream.nc">
          <short>&#10; Passes a buffer to the device, and indicates how many values&#10; should be placed into the buffer.</short>
          <long>&#10; Passes a buffer to the device, and indicates how many values&#10; should be placed into the buffer. Make sure your count doesn't&#10; overrun the buffer.&#10;&#10; @param 'val_t* COUNT(count) buf' a pointer to the buffer&#10; @param count the number of values the buffer should hold&#10;&#10; @return SUCCESS if the post was successful&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7ff8a5285e68"/></type-var>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7ff8a5280700" loc="68:/home/paul/wsnpr/tinyos-main/tos/interfaces/ReadStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7ff8a5285e68"/></type-var>
            </type-pointer>
          </variable>
          <variable name="count" ref="0x7ff8a5280a38" loc="68:/home/paul/wsnpr/tinyos-main/tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7ff8a527ee20" loc="78:/home/paul/wsnpr/tinyos-main/tos/interfaces/ReadStream.nc">
        <documentation loc="70:/home/paul/wsnpr/tinyos-main/tos/interfaces/ReadStream.nc">
          <short>&#10; Directs the device to start filling buffers by sampling with the&#10; specified period.</short>
          <long>&#10; Directs the device to start filling buffers by sampling with the&#10; specified period. &#10; &#10; @param usPeriod the between-sample period in microseconds&#10; &#10; @return SUCCESS if the reading process began&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7ff8a6018020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="usPeriod" ref="0x7ff8a527ebb0" loc="78:/home/paul/wsnpr/tinyos-main/tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7ff8a6018020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7ff8a527b630" loc="102:/home/paul/wsnpr/tinyos-main/tos/interfaces/ReadStream.nc">
        <documentation loc="92:/home/paul/wsnpr/tinyos-main/tos/interfaces/ReadStream.nc">
          <short>&#10; Signalled when a buffer has been filled but no more buffers have&#10; been posted.</short>
          <long>&#10; Signalled when a buffer has been filled but no more buffers have&#10; been posted. In the event of a read error, all previously posted&#10; buffers will have their bufferDone() event signalled, and then&#10; this event will be signalled with a non-SUCCESS argument.&#10;&#10; @param result SUCCESS if all buffers were filled without errors&#10; @param usActualPeriod Actual sampling period used - may be different&#10;   from period requested at read time. Undefined if result != SUCCESS.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7ff8a6018020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7ff8a527b020" loc="102:/home/paul/wsnpr/tinyos-main/tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
            </type-int>
          </variable>
          <variable name="usActualPeriod" ref="0x7ff8a527b3b0" loc="102:/home/paul/wsnpr/tinyos-main/tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7ff8a6018020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x7ff8a5274118" loc="56:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7ff8a5276b38" loc="56:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x7ff8a5276e60" loc="56:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x7ff8a52705f0" loc="77:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7ff8a5270020" loc="77:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x7ff8a5270370" loc="77:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x7ff8a5274b78" loc="64:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x7ff8a601a728"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7ff8a5274908" loc="64:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x7ff8a52724b0" loc="75:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7ff8a5272240" loc="75:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x7ff8a52763b0" loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7ff8a5276140" loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x7ff8a5273648" loc="72:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7ff8a52733d8" loc="72:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/home/paul/wsnpr/tinyos-main/tos/interfaces/Read.nc">
      <documentation loc="33:/home/paul/wsnpr/tinyos-main/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7ff8a5287410" loc="49:/home/paul/wsnpr/tinyos-main/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7ff8a5287410"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7ff8a5287c48" loc="55:/home/paul/wsnpr/tinyos-main/tos/interfaces/Read.nc">
        <documentation loc="50:/home/paul/wsnpr/tinyos-main/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7ff8a5283910" loc="63:/home/paul/wsnpr/tinyos-main/tos/interfaces/Read.nc">
        <documentation loc="57:/home/paul/wsnpr/tinyos-main/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7ff8a5287410"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7ff8a5283390" loc="63:/home/paul/wsnpr/tinyos-main/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7ff8a5283690" loc="63:/home/paul/wsnpr/tinyos-main/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7ff8a5287410"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/home/paul/wsnpr/tinyos-main/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/home/paul/wsnpr/tinyos-main/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7ff8a5245e40" loc="113:/home/paul/wsnpr/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/home/paul/wsnpr/tinyos-main/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7ff8a5245bd0" loc="113:/home/paul/wsnpr/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7ff8a5243290" loc="138:/home/paul/wsnpr/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/home/paul/wsnpr/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7ff8a5243020" loc="138:/home/paul/wsnpr/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7ff8a5245258" loc="104:/home/paul/wsnpr/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/home/paul/wsnpr/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7ff8a5244680" loc="130:/home/paul/wsnpr/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/home/paul/wsnpr/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/home/paul/wsnpr/tinyos-main/tos/interfaces/Receive.nc">
      <documentation loc="34:/home/paul/wsnpr/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7ff8a5236718" loc="78:/home/paul/wsnpr/tinyos-main/tos/interfaces/Receive.nc">
        <documentation loc="58:/home/paul/wsnpr/tinyos-main/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
              <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff8a5242dc0" loc="78:/home/paul/wsnpr/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7ff8a5236140" loc="78:/home/paul/wsnpr/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7ff8a5236450" loc="78:/home/paul/wsnpr/tinyos-main/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/home/paul/wsnpr/tinyos-main/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/home/paul/wsnpr/tinyos-main/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7ff8a521db08" loc="177:/home/paul/wsnpr/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/home/paul/wsnpr/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7ff8a5477cb8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7ff8a521d898" loc="177:/home/paul/wsnpr/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7ff8a5227b80" loc="88:/home/paul/wsnpr/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/home/paul/wsnpr/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7ff8a54750c8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7ff8a5227910" loc="88:/home/paul/wsnpr/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7ff8a5229110" loc="68:/home/paul/wsnpr/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/home/paul/wsnpr/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7ff8a54750c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7ff8a5229b68" loc="78:/home/paul/wsnpr/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/home/paul/wsnpr/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7ff8a54750c8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7ff8a52298f8" loc="78:/home/paul/wsnpr/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7ff8a5224450" loc="121:/home/paul/wsnpr/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/home/paul/wsnpr/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7ff8a54750c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7ff8a5226e60" loc="121:/home/paul/wsnpr/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7ff8a52241d0" loc="121:/home/paul/wsnpr/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7ff8a54750c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7ff8a5226020" loc="103:/home/paul/wsnpr/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/home/paul/wsnpr/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7ff8a54750c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7ff8a5225900" loc="103:/home/paul/wsnpr/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7ff8a5225c38" loc="103:/home/paul/wsnpr/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7ff8a54750c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7ff8a5221768" loc="147:/home/paul/wsnpr/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/home/paul/wsnpr/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7ff8a5477908"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7ff8a52214f8" loc="147:/home/paul/wsnpr/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7ff8a52209d8" loc="162:/home/paul/wsnpr/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/home/paul/wsnpr/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7ff8a5477908"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7ff8a5220458" loc="162:/home/paul/wsnpr/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7ff8a5220758" loc="162:/home/paul/wsnpr/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7ff8a5477908"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7ff8a5222600" loc="136:/home/paul/wsnpr/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/home/paul/wsnpr/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff8a592c1d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7ff8a5222390" loc="136:/home/paul/wsnpr/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7ff8a521b020" loc="187:/home/paul/wsnpr/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/home/paul/wsnpr/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7ff8a5477cb8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7ff8a521c920" loc="187:/home/paul/wsnpr/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7ff8a521cc50" loc="187:/home/paul/wsnpr/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7ff8a5477cb8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7ff8a521bd88" loc="195:/home/paul/wsnpr/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/home/paul/wsnpr/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7ff8a5477cb8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/home/paul/wsnpr/tinyos-main/tos/interfaces/Packet.nc">
      <documentation loc="42:/home/paul/wsnpr/tinyos-main/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7ff8a52325b8" loc="65:/home/paul/wsnpr/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="58:/home/paul/wsnpr/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff8a5232348" loc="65:/home/paul/wsnpr/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7ff8a52315b8" loc="78:/home/paul/wsnpr/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="67:/home/paul/wsnpr/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff8a5231348" loc="78:/home/paul/wsnpr/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7ff8a522e6c8" loc="126:/home/paul/wsnpr/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="109:/home/paul/wsnpr/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff8a522e100" loc="126:/home/paul/wsnpr/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7ff8a522e410" loc="126:/home/paul/wsnpr/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7ff8a522d828" loc="106:/home/paul/wsnpr/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="96:/home/paul/wsnpr/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7ff8a522f950" loc="94:/home/paul/wsnpr/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="80:/home/paul/wsnpr/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff8a522f3c0" loc="94:/home/paul/wsnpr/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7ff8a522f6d0" loc="94:/home/paul/wsnpr/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/home/paul/wsnpr/tinyos-main/tos/interfaces/Leds.nc">
      <documentation loc="33:/home/paul/wsnpr/tinyos-main/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7ff8a520f070" loc="61:/home/paul/wsnpr/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="58:/home/paul/wsnpr/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7ff8a520f7a8" loc="67:/home/paul/wsnpr/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="63:/home/paul/wsnpr/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7ff8a520e020" loc="72:/home/paul/wsnpr/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="69:/home/paul/wsnpr/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7ff8a520ee70" loc="83:/home/paul/wsnpr/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="79:/home/paul/wsnpr/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7ff8a520b480" loc="100:/home/paul/wsnpr/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="96:/home/paul/wsnpr/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7ff8a520bc18" loc="117:/home/paul/wsnpr/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="103:/home/paul/wsnpr/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7ff8a520e738" loc="77:/home/paul/wsnpr/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="74:/home/paul/wsnpr/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7ff8a520a768" loc="134:/home/paul/wsnpr/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="120:/home/paul/wsnpr/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7ff8a520a4f8" loc="134:/home/paul/wsnpr/tinyos-main/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7ff8a5210900" loc="56:/home/paul/wsnpr/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="53:/home/paul/wsnpr/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7ff8a520d608" loc="89:/home/paul/wsnpr/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="86:/home/paul/wsnpr/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7ff8a520dd20" loc="94:/home/paul/wsnpr/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="91:/home/paul/wsnpr/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/home/paul/wsnpr/tinyos-main/tos/interfaces/AMSend.nc">
      <documentation loc="34:/home/paul/wsnpr/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7ff8a523f0c8" loc="80:/home/paul/wsnpr/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="60:/home/paul/wsnpr/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7ff8a54750c8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7ff8a52467a0" loc="80:/home/paul/wsnpr/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7ff8a54750c8"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7ff8a5246b00" loc="80:/home/paul/wsnpr/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7ff8a5246e10" loc="80:/home/paul/wsnpr/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7ff8a523a3c0" loc="135:/home/paul/wsnpr/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="126:/home/paul/wsnpr/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff8a523bdc8" loc="135:/home/paul/wsnpr/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7ff8a523a108" loc="135:/home/paul/wsnpr/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7ff8a523b5c0" loc="123:/home/paul/wsnpr/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="113:/home/paul/wsnpr/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7ff8a523e370" loc="96:/home/paul/wsnpr/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="82:/home/paul/wsnpr/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff8a523e100" loc="96:/home/paul/wsnpr/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7ff8a523d7a0" loc="110:/home/paul/wsnpr/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="98:/home/paul/wsnpr/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff8a523d1f8" loc="110:/home/paul/wsnpr/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7ff8a523d520" loc="110:/home/paul/wsnpr/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/home/paul/wsnpr/tinyos-main/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/home/paul/wsnpr/tinyos-main/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7ff8a51a9b50" loc="44:/home/paul/wsnpr/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7ff8a51a8258" loc="45:/home/paul/wsnpr/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff8a592c1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7ff8a51abdd8" loc="42:/home/paul/wsnpr/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7ff8a51a7020" loc="47:/home/paul/wsnpr/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff8a592c1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7ff8a51a94a0" loc="43:/home/paul/wsnpr/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff8a592c1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7ff8a51a8910" loc="46:/home/paul/wsnpr/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7ff8a51ab0d8" loc="40:/home/paul/wsnpr/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7ff8a51ab748" loc="41:/home/paul/wsnpr/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:/home/paul/wsnpr/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7ff8a517f750" loc="78:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7ff8a517fe38" loc="80:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff8a592c1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x7ff8a517a428" loc="110:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7ff8a517a1b8" loc="110:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7ff8a5181030" loc="58:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7ff8a517ec68" loc="87:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff8a592c1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x7ff8a517aca8" loc="117:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7ff8a517e570" loc="85:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7ff8a517f020" loc="73:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff8a592c1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x7ff8a517b258" loc="99:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x7ff8a5181758" loc="66:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7ff8a5182290" loc="48:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x7ff8a517d3e0" loc="92:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x7ff8a517b958" loc="101:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff8a592c1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x7ff8a517db10" loc="94:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff8a592c1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7ff8a5182938" loc="53:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/home/paul/wsnpr/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x7ff8a4f56db0" loc="35:/home/paul/wsnpr/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7ff8a4f56db0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7ff8a4f4f020" loc="35:/home/paul/wsnpr/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7ff8a4f4f020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x7ff8a4f4ccb8" loc="63:/home/paul/wsnpr/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/home/paul/wsnpr/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7ff8a4f4f020"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff8a4f4ca48" loc="63:/home/paul/wsnpr/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7ff8a4f4a020" loc="70:/home/paul/wsnpr/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/home/paul/wsnpr/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff8a4f4dca8" loc="70:/home/paul/wsnpr/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x7ff8a4f4fb40" loc="49:/home/paul/wsnpr/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/home/paul/wsnpr/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff8a592c1d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff8a4f4f8d0" loc="49:/home/paul/wsnpr/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7ff8a4f492a0" loc="78:/home/paul/wsnpr/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/home/paul/wsnpr/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7ff8a4f4f020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff8a4f4ac48" loc="78:/home/paul/wsnpr/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7ff8a4f49020" loc="78:/home/paul/wsnpr/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7ff8a4f4f020"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/home/paul/wsnpr/tinyos-main/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/home/paul/wsnpr/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x7ff8a4f3fd88" loc="65:/home/paul/wsnpr/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/home/paul/wsnpr/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff8a4f3f7a0" loc="65:/home/paul/wsnpr/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x7ff8a4f3fb08" loc="65:/home/paul/wsnpr/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x7ff8a4f3c020" loc="71:/home/paul/wsnpr/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/home/paul/wsnpr/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff8a4f3dc48" loc="71:/home/paul/wsnpr/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x7ff8a4f3f020" loc="57:/home/paul/wsnpr/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/home/paul/wsnpr/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x7ff8a4f405c0" loc="52:/home/paul/wsnpr/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/home/paul/wsnpr/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x7ff8a4f40350" loc="52:/home/paul/wsnpr/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/home/paul/wsnpr/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/home/paul/wsnpr/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7ff8a4f543b0" loc="59:/home/paul/wsnpr/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/home/paul/wsnpr/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff8a4f54140" loc="59:/home/paul/wsnpr/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7ff8a4f534e8" loc="71:/home/paul/wsnpr/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/home/paul/wsnpr/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff8a4f53278" loc="71:/home/paul/wsnpr/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7ff8a4f515b8" loc="85:/home/paul/wsnpr/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/home/paul/wsnpr/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff8a592c1d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff8a4f51348" loc="85:/home/paul/wsnpr/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x7ff8a4f1ed88" loc="95:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff8a4f1eb18" loc="95:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x7ff8a4f200a8" loc="81:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff8a4f21dd0" loc="81:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x7ff8a4f22878" loc="66:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7ff8a4f22608" loc="66:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x7ff8a4f27d78" loc="60:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7ff8a4f27b08" loc="60:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x7ff8a4f21290" loc="73:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ff8a592c1d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x7ff8a4f21020" loc="73:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ff8a592c1d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x7ff8a4f1e020" loc="88:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff8a4f20c28" loc="88:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/home/paul/wsnpr/tinyos-main/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/home/paul/wsnpr/tinyos-main/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x7ff8a4f112a0" loc="59:/home/paul/wsnpr/tinyos-main/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/home/paul/wsnpr/tinyos-main/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7ff8a54750c8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7ff8a4f1cb60" loc="59:/home/paul/wsnpr/tinyos-main/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7ff8a54750c8"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7ff8a4f11020" loc="59:/home/paul/wsnpr/tinyos-main/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/home/paul/wsnpr/tinyos-main/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/home/paul/wsnpr/tinyos-main/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x7ff8a4f15cd8" loc="65:/home/paul/wsnpr/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/home/paul/wsnpr/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff8a4f15a68" loc="65:/home/paul/wsnpr/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x7ff8a4f19020" loc="46:/home/paul/wsnpr/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/home/paul/wsnpr/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff8a4f249c8" loc="46:/home/paul/wsnpr/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x7ff8a4f24d30" loc="46:/home/paul/wsnpr/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x7ff8a4f18d80" loc="59:/home/paul/wsnpr/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/home/paul/wsnpr/tinyos-main/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff8a4f18b10" loc="59:/home/paul/wsnpr/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x7ff8a4f18348" loc="53:/home/paul/wsnpr/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/home/paul/wsnpr/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff8a4f19d20" loc="53:/home/paul/wsnpr/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x7ff8a4f180c8" loc="53:/home/paul/wsnpr/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x7ff8a4f13c10" loc="71:/home/paul/wsnpr/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/home/paul/wsnpr/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff8a592c1d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff8a4f139a0" loc="71:/home/paul/wsnpr/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/home/paul/wsnpr/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/home/paul/wsnpr/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x7ff8a4f28e08" loc="47:/home/paul/wsnpr/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/home/paul/wsnpr/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff8a592c1d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff8a4f28b98" loc="47:/home/paul/wsnpr/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/home/paul/wsnpr/tinyos-main/tos/interfaces/Send.nc">
      <documentation loc="34:/home/paul/wsnpr/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7ff8a4f0be18" loc="75:/home/paul/wsnpr/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="57:/home/paul/wsnpr/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff8a4f0b888" loc="75:/home/paul/wsnpr/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7ff8a4f0bb98" loc="75:/home/paul/wsnpr/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7ff8a4eff2d8" loc="125:/home/paul/wsnpr/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="115:/home/paul/wsnpr/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff8a4f00c90" loc="125:/home/paul/wsnpr/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7ff8a4eff020" loc="125:/home/paul/wsnpr/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7ff8a4f00488" loc="112:/home/paul/wsnpr/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="102:/home/paul/wsnpr/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7ff8a4f030a8" loc="89:/home/paul/wsnpr/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="77:/home/paul/wsnpr/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff8a4f04e08" loc="89:/home/paul/wsnpr/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7ff8a4f015c8" loc="100:/home/paul/wsnpr/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="91:/home/paul/wsnpr/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff8a4f01020" loc="100:/home/paul/wsnpr/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7ff8a4f01348" loc="100:/home/paul/wsnpr/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/home/paul/wsnpr/tinyos-main/tos/interfaces/Resource.nc">
      <documentation loc="63:/home/paul/wsnpr/tinyos-main/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7ff8a4f08020" loc="120:/home/paul/wsnpr/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="104:/home/paul/wsnpr/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7ff8a4f09020" loc="97:/home/paul/wsnpr/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="90:/home/paul/wsnpr/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7ff8a4f0a700" loc="88:/home/paul/wsnpr/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="78:/home/paul/wsnpr/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7ff8a4f097a8" loc="102:/home/paul/wsnpr/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="99:/home/paul/wsnpr/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7ff8a4f08a08" loc="128:/home/paul/wsnpr/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="122:/home/paul/wsnpr/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff8a592c1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7ff8a4ee0050" loc="51:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ff8a592c1d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7ff8a4ee1a88" loc="51:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x7ff8a4ee1da0" loc="51:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ff8a592c1d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7ff8a4ede258" loc="65:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x7ff8a4edc8d8" loc="84:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7ff8a4eddae0" loc="84:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7ff8a4edc338" loc="84:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7ff8a4edc648" loc="84:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7ff8a4edd348" loc="73:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7ff8a4eded30" loc="73:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7ff8a4edd0c8" loc="73:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x7ff8a4ee0a60" loc="58:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ff8a592c1d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x7ff8a4ee07f0" loc="58:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ff8a592c1d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/home/paul/wsnpr/tinyos-main/tos/interfaces/Random.nc">
      <documentation loc="34:/home/paul/wsnpr/tinyos-main/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7ff8a4ed8a28" loc="52:/home/paul/wsnpr/tinyos-main/tos/interfaces/Random.nc">
        <documentation loc="48:/home/paul/wsnpr/tinyos-main/tos/interfaces/Random.nc">
          <short> &#10; Produces a 16-bit pseudorandom number.</short>
          <long> &#10; Produces a 16-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7ff8a4ed8290" loc="46:/home/paul/wsnpr/tinyos-main/tos/interfaces/Random.nc">
        <documentation loc="42:/home/paul/wsnpr/tinyos-main/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff8a6018020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/home/paul/wsnpr/tinyos-main/tos/interfaces/StdControl.nc">
      <documentation loc="72:/home/paul/wsnpr/tinyos-main/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7ff8a4ee37d0" loc="95:/home/paul/wsnpr/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="88:/home/paul/wsnpr/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7ff8a4ee2020" loc="105:/home/paul/wsnpr/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="97:/home/paul/wsnpr/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x7ff8a4ed3a50" loc="49:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff8a4ed37a8" loc="49:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x7ff8a4ed3020" loc="42:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x7ff8a54b0438"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x7ff8a54afcc0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff8a4ed4c38" loc="42:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x7ff8a4ed1cb0" loc="53:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x7ff8a54ad7b8"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x7ff8a54aa020"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff8a4ed19c8" loc="53:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x7ff8a4ee87e8" loc="71:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x7ff8a4ee5778" loc="97:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x7ff8a4ee5020" loc="90:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x7ff8a4ee9020" loc="51:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x7ff8a4ee8020" loc="63:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x7ff8a4ee7020" loc="76:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x7ff8a4ee7798" loc="83:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x7ff8a4ee9818" loc="56:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:/home/paul/wsnpr/tinyos-main/tos/interfaces/State.nc">
      <documentation loc="33:/home/paul/wsnpr/tinyos-main/tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x7ff8a4ecb020" loc="71:/home/paul/wsnpr/tinyos-main/tos/interfaces/State.nc">
        <documentation loc="68:/home/paul/wsnpr/tinyos-main/tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x7ff8a4ecd730" loc="56:/home/paul/wsnpr/tinyos-main/tos/interfaces/State.nc">
        <documentation loc="53:/home/paul/wsnpr/tinyos-main/tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x7ff8a4ecc7e8" loc="66:/home/paul/wsnpr/tinyos-main/tos/interfaces/State.nc">
        <documentation loc="63:/home/paul/wsnpr/tinyos-main/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff8a592c1d0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x7ff8a4ecc578" loc="66:/home/paul/wsnpr/tinyos-main/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x7ff8a4ecde38" loc="61:/home/paul/wsnpr/tinyos-main/tos/interfaces/State.nc">
        <documentation loc="58:/home/paul/wsnpr/tinyos-main/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff8a592c1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x7ff8a4ecf508" loc="45:/home/paul/wsnpr/tinyos-main/tos/interfaces/State.nc">
        <documentation loc="40:/home/paul/wsnpr/tinyos-main/tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7ff8a4ecf298" loc="45:/home/paul/wsnpr/tinyos-main/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x7ff8a4ecd020" loc="51:/home/paul/wsnpr/tinyos-main/tos/interfaces/State.nc">
        <documentation loc="47:/home/paul/wsnpr/tinyos-main/tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7ff8a4ecfcc0" loc="51:/home/paul/wsnpr/tinyos-main/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x7ff8a4e745d8" loc="106:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ff8a592c1d0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ff8a592c1d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x7ff8a4e74020" loc="106:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ff8a592c1d0"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x7ff8a4e74358" loc="106:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ff8a592c1d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x7ff8a4e75020" loc="93:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff8a592c1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x7ff8a4e76660" loc="87:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ff8a592c1d0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ff8a592c1d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x7ff8a4e76020" loc="87:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ff8a592c1d0"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x7ff8a4e763e0" loc="87:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ff8a592c1d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x7ff8a4e7ddb0" loc="55:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7ff8a4e7db40" loc="55:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x7ff8a4e75828" loc="98:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff8a592c1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x7ff8a4e79658" loc="72:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7ff8a4e793e8" loc="72:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7ff8a4e7bde8" loc="61:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7ff8a4e7bb78" loc="61:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x7ff8a4e737d8" loc="117:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff8a592c1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x7ff8a4e786f8" loc="78:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7ff8a4e78488" loc="78:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x7ff8a4e73020" loc="112:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff8a592c1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x7ff8a4e7a538" loc="66:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7ff8a4f3a340"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7ff8a4f3aa68"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x7ff8a4e7acb8" loc="71:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x7ff8a4e7d410" loc="54:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7ff8a4e7b4c8" loc="60:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x7ff8a4e79d88" loc="77:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7ff8a4e46020" loc="55:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7ff8a54b2748"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7ff8a4e50cf0" loc="55:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7ff8a4e46a78" loc="63:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7ff8a54b2748"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7ff8a4e46808" loc="63:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:/home/paul/wsnpr/tinyos-main/tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:/home/paul/wsnpr/tinyos-main/tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x7ff8a4e624d0" loc="48:/home/paul/wsnpr/tinyos-main/tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:/home/paul/wsnpr/tinyos-main/tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7ff8a4f3a340"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7ff8a4f3aa68"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/home/paul/wsnpr/tinyos-main/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/home/paul/wsnpr/tinyos-main/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7ff8a4e64670" loc="56:/home/paul/wsnpr/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7ff8a4e64670"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7ff8a4e648a0" loc="56:/home/paul/wsnpr/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7ff8a4e648a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7ff8a4e5c178" loc="109:/home/paul/wsnpr/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/home/paul/wsnpr/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7ff8a4e648a0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7ff8a4e5f328" loc="78:/home/paul/wsnpr/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/home/paul/wsnpr/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7ff8a4e5e810" loc="103:/home/paul/wsnpr/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/home/paul/wsnpr/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7ff8a4e648a0"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7ff8a4e648a0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7ff8a4e5e270" loc="103:/home/paul/wsnpr/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7ff8a4e648a0"/></type-var>
          </variable>
          <variable name="dt" ref="0x7ff8a4e5e590" loc="103:/home/paul/wsnpr/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7ff8a4e648a0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7ff8a4e5fa70" loc="88:/home/paul/wsnpr/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/home/paul/wsnpr/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff8a592c1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7ff8a4e5c8f8" loc="116:/home/paul/wsnpr/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/home/paul/wsnpr/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7ff8a4e648a0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7ff8a4e60390" loc="66:/home/paul/wsnpr/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/home/paul/wsnpr/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7ff8a4e648a0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7ff8a4e60120" loc="66:/home/paul/wsnpr/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7ff8a4e648a0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7ff8a4e60b60" loc="73:/home/paul/wsnpr/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/home/paul/wsnpr/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/home/paul/wsnpr/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/home/paul/wsnpr/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x7ff8a4e4e020" loc="50:/home/paul/wsnpr/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/home/paul/wsnpr/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7ff8a54750c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7ff8a4e4ee70" loc="60:/home/paul/wsnpr/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/home/paul/wsnpr/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x7ff8a4e4e780" loc="55:/home/paul/wsnpr/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/home/paul/wsnpr/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7ff8a5477cb8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x7ff8a4e4f730" loc="45:/home/paul/wsnpr/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/home/paul/wsnpr/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7ff8a5477cb8"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7ff8a54750c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x7ff8a4e4f178" loc="45:/home/paul/wsnpr/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7ff8a5477cb8"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7ff8a4e4f4b0" loc="45:/home/paul/wsnpr/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7ff8a54750c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x7ff8a4e3f020" loc="53:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7ff8a54b2748"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7ff8a4e4a468" loc="52:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7ff8a54b2748"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7ff8a4e4c670" loc="52:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7ff8a4e4ce78" loc="52:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7ff8a4e4a1d8" loc="52:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7ff8a4e49af8" loc="63:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7ff8a54b2748"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7ff8a4e4acb8" loc="63:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7ff8a4e49538" loc="63:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7ff8a4e49868" loc="63:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:/home/paul/wsnpr/tinyos-main/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:/home/paul/wsnpr/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7ff8a4e52770" loc="68:/home/paul/wsnpr/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:/home/paul/wsnpr/tinyos-main/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7ff8a4e52020" loc="61:/home/paul/wsnpr/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:/home/paul/wsnpr/tinyos-main/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x7ff8a4e53868" loc="54:/home/paul/wsnpr/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x7ff8a4e53020" loc="53:/home/paul/wsnpr/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/home/paul/wsnpr/tinyos-main/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/home/paul/wsnpr/tinyos-main/tos/lib/timer/Counter.nc">
      <documentation loc="36:/home/paul/wsnpr/tinyos-main/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7ff8a4d4cc98" loc="57:/home/paul/wsnpr/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7ff8a4d4cc98"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7ff8a4d47020" loc="57:/home/paul/wsnpr/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7ff8a4d47020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7ff8a4d478b8" loc="64:/home/paul/wsnpr/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="59:/home/paul/wsnpr/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7ff8a4d47020"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7ff8a4d46900" loc="76:/home/paul/wsnpr/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="73:/home/paul/wsnpr/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7ff8a4d46110" loc="71:/home/paul/wsnpr/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="66:/home/paul/wsnpr/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff8a592c1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7ff8a4d44020" loc="82:/home/paul/wsnpr/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="78:/home/paul/wsnpr/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:/home/paul/wsnpr/tinyos-main/tos/interfaces/GpioCapture.nc">
      <documentation loc="34:/home/paul/wsnpr/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7ff8a4c88498" loc="54:/home/paul/wsnpr/tinyos-main/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7ff8a4c87550" loc="66:/home/paul/wsnpr/tinyos-main/tos/interfaces/GpioCapture.nc">
        <documentation loc="63:/home/paul/wsnpr/tinyos-main/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7ff8a4c88dc0" loc="61:/home/paul/wsnpr/tinyos-main/tos/interfaces/GpioCapture.nc">
        <documentation loc="56:/home/paul/wsnpr/tinyos-main/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7ff8a4c88b50" loc="61:/home/paul/wsnpr/tinyos-main/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7ff8a4c8bc38" loc="53:/home/paul/wsnpr/tinyos-main/tos/interfaces/GpioCapture.nc">
        <documentation loc="48:/home/paul/wsnpr/tinyos-main/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Interrupt" loc="37:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
      <documentation loc="33:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7ff8a4c65e50" loc="52:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="49:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7ff8a4c627d8" loc="72:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="69:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7ff8a4c65768" loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="44:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Disables MSP430 hardware interrupt on a particular port.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7ff8a4c62020" loc="67:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="61:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10;&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ff8a592c1d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7ff8a4c63d40" loc="67:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ff8a592c1d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7ff8a4c65070" loc="42:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="39:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Enables MSP430 hardware interrupt on a particular port.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7ff8a4c635d8" loc="59:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="54:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port.</short>
          <long> &#10; Gets the current value of the input voltage of a port.&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff8a592c1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x7ff8a4b598c8" loc="24:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x7ff8a4b580d8" loc="31:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x7ff8a4b588a8" loc="39:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x7ff8a4b32348" loc="62:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7ff8a4b33d58" loc="62:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7ff8a4b320c8" loc="62:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7ff8a4b2d2b0" loc="91:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7ff8a4b2e940" loc="91:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7ff8a4b2ec70" loc="91:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7ff8a4b2d020" loc="91:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7ff8a4b2fc50" loc="82:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7ff8a54b2748"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7ff8a4b2f6a0" loc="82:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7ff8a4b2f9d0" loc="82:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x7ff8a4b33020" loc="51:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7ff8a54b2748"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7ff8a4b34908" loc="51:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7ff8a4b34c38" loc="51:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7ff8a4b31948" loc="71:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7ff8a4b31060" loc="71:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7ff8a4b31390" loc="71:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7ff8a4b316b8" loc="71:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="60:/home/paul/wsnpr/tinyos-main/tos/interfaces/SpiPacket.nc">
      <documentation loc="34:/home/paul/wsnpr/tinyos-main/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both.&#10;&#10; The SPI bus both sends and receives at the same time.  So this interface&#10; can be used to send, receive, or both.  The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; This is split phase and typically is implemented using interrupts.  However&#10; as the SPI clock is increased the interrupt overhead become more onerous&#10; wrt each byte time being transfered.  See SpiBLock for a single phase&#10; transfer mechanism that doesn't have interrupt overhead issues.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7ff8a4b149d8" loc="76:/home/paul/wsnpr/tinyos-main/tos/interfaces/SpiPacket.nc">
        <documentation loc="62:/home/paul/wsnpr/tinyos-main/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7ff8a4b140c8" loc="76:/home/paul/wsnpr/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7ff8a4b14428" loc="76:/home/paul/wsnpr/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7ff8a4b14748" loc="76:/home/paul/wsnpr/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7ff8a4b12d68" loc="88:/home/paul/wsnpr/tinyos-main/tos/interfaces/SpiPacket.nc">
        <documentation loc="78:/home/paul/wsnpr/tinyos-main/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7ff8a4b12100" loc="88:/home/paul/wsnpr/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7ff8a4b12460" loc="88:/home/paul/wsnpr/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7ff8a4b12780" loc="88:/home/paul/wsnpr/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7ff8a4b12ac8" loc="89:/home/paul/wsnpr/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/home/paul/wsnpr/tinyos-main/tos/interfaces/SpiByte.nc">
      <documentation loc="34:/home/paul/wsnpr/tinyos-main/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7ff8a4b189a8" loc="45:/home/paul/wsnpr/tinyos-main/tos/interfaces/SpiByte.nc">
        <documentation loc="40:/home/paul/wsnpr/tinyos-main/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7ff8a4b18738" loc="45:/home/paul/wsnpr/tinyos-main/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/home/paul/wsnpr/tinyos-main/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/home/paul/wsnpr/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7ff8a4a3ca88" loc="53:/home/paul/wsnpr/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/home/paul/wsnpr/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7ff8a4a39378" loc="61:/home/paul/wsnpr/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/home/paul/wsnpr/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430SpiConfigure" loc="38:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430SpiConfigure.nc">
      <documentation loc="31:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7ff8a4a32360" loc="39:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <interfacedef-ref qname="Msp430SpiConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7ff8a4a6c898"/>
              <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7ff8a4a6cca0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:/home/paul/wsnpr/tinyos-main/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:/home/paul/wsnpr/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x7ff8a4a374a8" loc="62:/home/paul/wsnpr/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:/home/paul/wsnpr/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7ff8a4a37238" loc="62:/home/paul/wsnpr/tinyos-main/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x7ff8a4a366f8" loc="74:/home/paul/wsnpr/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:/home/paul/wsnpr/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7ff8a4a36488" loc="74:/home/paul/wsnpr/tinyos-main/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x7ff8a4a37ca8" loc="68:/home/paul/wsnpr/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:/home/paul/wsnpr/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7ff8a4a35108" loc="81:/home/paul/wsnpr/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:/home/paul/wsnpr/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7ff8a4a36e28" loc="81:/home/paul/wsnpr/tinyos-main/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/home/paul/wsnpr/tinyos-main/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/home/paul/wsnpr/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7ff8a4a2c578" loc="65:/home/paul/wsnpr/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/home/paul/wsnpr/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7ff8a4a2fd98" loc="59:/home/paul/wsnpr/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/home/paul/wsnpr/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="31:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x7ff8a4a24798" loc="54:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7ff8a4a24528" loc="54:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x7ff8a4a28dd0" loc="49:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="31:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x7ff8a4a02c88" loc="213:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff8a592c1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x7ff8a4a0c0d8" loc="143:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x7ff8a4a19740" loc="50:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7ff8a4a87528"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7ff8a4a87d50"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7ff8a4a194d0" loc="50:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7ff8a4a87528"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7ff8a4a87d50"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x7ff8a4a0f3a0" loc="123:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x7ff8a4a17b20" loc="70:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7ff8a4a83280"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7ff8a4a83aa8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7ff8a4a178b0" loc="70:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7ff8a4a83280"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7ff8a4a83aa8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7ff8a4a06258" loc="180:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x7ff8a4a03738" loc="197:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x7ff8a4a17178" loc="65:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7ff8a4a85350"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x7ff8a4a85ac8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x7ff8a4a15328" loc="75:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7ff8a4a83280"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x7ff8a4a83aa8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x7ff8a4a13de0" loc="97:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ff8a592c1d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x7ff8a4a13b70" loc="97:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ff8a592c1d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x7ff8a4a134b8" loc="95:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x7ff8a4a07b28" loc="179:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x7ff8a4a189c0" loc="60:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7ff8a4a85350"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7ff8a4a85ac8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7ff8a4a18750" loc="60:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7ff8a4a85350"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7ff8a4a85ac8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x7ff8a4a143e0" loc="85:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7ff8a4a06928" loc="181:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x7ff8a4a14d40" loc="90:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x7ff8a4a14ad0" loc="90:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x7ff8a4a10530" loc="113:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff8a592c1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x7ff8a4a10c48" loc="118:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff8a592c1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7ff8a4a08d58" loc="177:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x7ff8a4a0be20" loc="163:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff8a592c1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x7ff8a4a0e258" loc="133:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7ff8a4a07468" loc="178:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x7ff8a4a0c810" loc="148:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x7ff8a4a04020" loc="182:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7ff8a4a11588" loc="103:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7ff8a4a8e568"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x7ff8a4a8ace0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x7ff8a4a04758" loc="187:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff8a592c1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x7ff8a4a02550" loc="207:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x7ff8a4a15c58" loc="80:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x7ff8a4a159e8" loc="80:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x7ff8a4a015f0" loc="224:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10; The mode of transmission (Uart or Spi) depends on the current&#10; state of the USART, which must be managed by a higher layer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7ff8a4a01380" loc="224:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x7ff8a4a18020" loc="55:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7ff8a4a87528"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x7ff8a4a87d50"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x7ff8a4a0fab0" loc="128:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7ff8a4a0b020" loc="153:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x7ff8a4a085b0" loc="174:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7ff8a4a59180"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7ff8a4a59588"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7ff8a4a08340" loc="174:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7ff8a4a59180"/>
                <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7ff8a4a59588"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x7ff8a4a0a8c0" loc="168:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7ff8a4a6c898"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7ff8a4a6cca0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7ff8a4a0a650" loc="168:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7ff8a4a6c898"/>
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7ff8a4a6cca0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x7ff8a4a01e38" loc="231:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="226:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x7ff8a4a03020" loc="192:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff8a592c1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x7ff8a4a11cd0" loc="108:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff8a592c1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x7ff8a4a03e30" loc="202:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x7ff8a4a0b720" loc="158:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x7ff8a4a0e990" loc="138:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7ff8a49a0cb0" loc="39:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2C" loc="4:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
      <documentation loc="31:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="disableOwnAddress" ref="0x7ff8a4977258" loc="80:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartByte" ref="0x7ff8a4989720" loc="31:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff8a592c1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveAddress" ref="0x7ff8a497e290" loc="62:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7ff8a497e020" loc="62:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterMode" ref="0x7ff8a4991178" loc="11:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTransmitReady" ref="0x7ff8a497b740" loc="71:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPrescaler" ref="0x7ff8a4983510" loc="49:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransmitMode" ref="0x7ff8a498a8c0" loc="28:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStopBit" ref="0x7ff8a4988520" loc="34:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff8a592c1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7ff8a498c940" loc="25:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7ff8a498c6d0" loc="25:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRepeatMode" ref="0x7ff8a498ee38" loc="21:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff8a592c1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getData" ref="0x7ff8a4985110" loc="41:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableStartDetect" ref="0x7ff8a497c110" loc="66:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAccessReady" ref="0x7ff8a4978ae0" loc="78:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSlaveAddress" ref="0x7ff8a497f868" loc="61:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isGeneralCallPending" ref="0x7ff8a49738c8" loc="91:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff8a592c1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getIV" ref="0x7ff8a496fd00" loc="100:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableI2C" ref="0x7ff8a498f020" loc="14:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartBit" ref="0x7ff8a49879e8" loc="38:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransferByteCount" ref="0x7ff8a49841d8" loc="45:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitReceiveMode" ref="0x7ff8a498a1d8" loc="27:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff8a592c1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearModeI2C" ref="0x7ff8a4992020" loc="7:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setOwnAddress" ref="0x7ff8a497f108" loc="58:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7ff8a4980e38" loc="58:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isI2C" ref="0x7ff8a49958a0" loc="6:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff8a592c1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableGeneralCall" ref="0x7ff8a497b020" loc="69:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableOwnAddress" ref="0x7ff8a4977950" loc="81:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isAccessReadyPending" ref="0x7ff8a4971020" loc="94:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff8a592c1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isArbitrationLostPending" ref="0x7ff8a496f610" loc="97:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff8a592c1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveReady" ref="0x7ff8a497a5a8" loc="74:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableNoAck" ref="0x7ff8a4976070" loc="83:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableStartDetect" ref="0x7ff8a497e9b8" loc="65:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableArbitrationLost" ref="0x7ff8a49749c0" loc="87:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableI2C" ref="0x7ff8a498f6d8" loc="15:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShiftClock" ref="0x7ff8a49815e8" loc="53:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableArbitrationLost" ref="0x7ff8a4976e60" loc="86:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAccessReady" ref="0x7ff8a49783e0" loc="77:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransferByteCount" ref="0x7ff8a4984d50" loc="46:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="count" ref="0x7ff8a4984ae0" loc="46:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwnAddressPending" ref="0x7ff8a4971760" loc="95:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff8a592c1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOwnAddress" ref="0x7ff8a4980770" loc="57:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTransmitReady" ref="0x7ff8a497be50" loc="72:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeI2C" ref="0x7ff8a4992a28" loc="8:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7ff8a4a47500"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7ff8a4a47908"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7ff8a49927b8" loc="8:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7ff8a4a47500"/>
                <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7ff8a4a47908"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartBit" ref="0x7ff8a4987328" loc="37:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff8a592c1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWordMode" ref="0x7ff8a498e730" loc="19:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ff8a592c1d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7ff8a498e4c0" loc="19:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ff8a592c1d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setData" ref="0x7ff8a49859f8" loc="42:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7ff8a4985788" loc="42:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isStartDetectPending" ref="0x7ff8a4973178" loc="90:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff8a592c1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockSource" ref="0x7ff8a498c020" loc="24:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getWordMode" ref="0x7ff8a498fde8" loc="18:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff8a592c1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShiftClock" ref="0x7ff8a4980020" loc="54:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="shift" ref="0x7ff8a4981cb8" loc="54:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveMode" ref="0x7ff8a4991848" loc="12:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableNoAck" ref="0x7ff8a4976730" loc="84:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveReady" ref="0x7ff8a497acb0" loc="75:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableGeneralCall" ref="0x7ff8a497c818" loc="68:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPrescaler" ref="0x7ff8a4983e70" loc="50:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scaler" ref="0x7ff8a4983c00" loc="50:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setStopBit" ref="0x7ff8a4988bd8" loc="35:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setReceiveMode" ref="0x7ff8a4989020" loc="29:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isNoAckPending" ref="0x7ff8a4971e70" loc="96:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff8a592c1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatMode" ref="0x7ff8a498d7a8" loc="22:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ff8a592c1d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7ff8a498d538" loc="22:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7ff8a592c1d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isTransmitReadyPending" ref="0x7ff8a4972070" loc="92:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff8a592c1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartByte" ref="0x7ff8a4989df0" loc="32:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isReceiveReadyPending" ref="0x7ff8a49727c8" loc="93:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff8a592c1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/home/paul/wsnpr/tinyos-main/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/home/paul/wsnpr/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7ff8a48db0d8" loc="90:/home/paul/wsnpr/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/home/paul/wsnpr/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff8a592c1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7ff8a48db8c8" loc="98:/home/paul/wsnpr/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/home/paul/wsnpr/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/home/paul/wsnpr/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/home/paul/wsnpr/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7ff8a48a3020" loc="56:/home/paul/wsnpr/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/home/paul/wsnpr/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7ff8a48a2020" loc="73:/home/paul/wsnpr/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/home/paul/wsnpr/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7ff8a48a5750" loc="46:/home/paul/wsnpr/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/home/paul/wsnpr/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7ff8a48a3820" loc="65:/home/paul/wsnpr/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/home/paul/wsnpr/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff8a592c1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7ff8a48a28e8" loc="81:/home/paul/wsnpr/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/home/paul/wsnpr/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/home/paul/wsnpr/tinyos-main/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/home/paul/wsnpr/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7ff8a4898c80" loc="79:/home/paul/wsnpr/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/home/paul/wsnpr/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7ff8a489e020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7ff8a4898a10" loc="79:/home/paul/wsnpr/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7ff8a489e020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7ff8a489ce18" loc="53:/home/paul/wsnpr/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/home/paul/wsnpr/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff8a592c1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7ff8a48998f0" loc="62:/home/paul/wsnpr/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/home/paul/wsnpr/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff8a592c1d0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7ff8a489e020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7ff8a4899680" loc="62:/home/paul/wsnpr/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7ff8a489e020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7ff8a48981d8" loc="70:/home/paul/wsnpr/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/home/paul/wsnpr/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7ff8a489e020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadId48" loc="8:/home/paul/wsnpr/tinyos-main/tos/chips/ds2411/ReadId48.nc">
      <documentation loc="4:/home/paul/wsnpr/tinyos-main/tos/chips/ds2411/ReadId48.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7ff8a46a83b0" loc="13:/home/paul/wsnpr/tinyos-main/tos/chips/ds2411/ReadId48.nc">
        <interfacedef-ref qname="ReadId48"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7ff8a46a8140" loc="13:/home/paul/wsnpr/tinyos-main/tos/chips/ds2411/ReadId48.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OneWireReadWrite" loc="9:/home/paul/wsnpr/tinyos-main/tos/lib/onewire/OneWireReadWrite.nc">
      <documentation loc="5:/home/paul/wsnpr/tinyos-main/tos/lib/onewire/OneWireReadWrite.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7ff8a46953f0" loc="10:/home/paul/wsnpr/tinyos-main/tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x7ff8a4698ab8" loc="10:/home/paul/wsnpr/tinyos-main/tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7ff8a4698e00" loc="10:/home/paul/wsnpr/tinyos-main/tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7ff8a4695160" loc="10:/home/paul/wsnpr/tinyos-main/tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7ff8a46930b8" loc="11:/home/paul/wsnpr/tinyos-main/tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7ff8a4695ac8" loc="11:/home/paul/wsnpr/tinyos-main/tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7ff8a4695dd8" loc="11:/home/paul/wsnpr/tinyos-main/tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:/home/paul/wsnpr/tinyos-main/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:/home/paul/wsnpr/tinyos-main/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7ff8a467c420" loc="59:/home/paul/wsnpr/tinyos-main/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7ff8a467c420"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7ff8a467c650" loc="59:/home/paul/wsnpr/tinyos-main/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7ff8a467c650"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x7ff8a467b118" loc="66:/home/paul/wsnpr/tinyos-main/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:/home/paul/wsnpr/tinyos-main/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7ff8a467c650"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7ff8a467ce78" loc="66:/home/paul/wsnpr/tinyos-main/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7ff8a467c650"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x7ff8a46208d0" loc="43:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff8a592c1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7ff8a45ed400" loc="63:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7ff8a45eea68" loc="63:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x7ff8a45ed180" loc="63:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x7ff8a45ee328" loc="55:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x7ff8a45f2b40" loc="49:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7ff8a6018020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7ff8a45f28d0" loc="49:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7ff8a6018020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x7ff8a4602ae8" loc="58:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff8a4602878" loc="58:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x7ff8a4606b60" loc="50:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff8a592c1d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff8a46068f0" loc="50:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7ff8a45ff938" loc="72:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff8a45ff6c8" loc="72:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7ff8a4600a20" loc="65:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff8a46007b0" loc="65:/home/paul/wsnpr/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/home/paul/wsnpr/tinyos-main/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/home/paul/wsnpr/tinyos-main/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7ff8a4496a60" loc="53:/home/paul/wsnpr/tinyos-main/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7ff8a4496a60"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7ff8a4493328" loc="61:/home/paul/wsnpr/tinyos-main/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/home/paul/wsnpr/tinyos-main/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7ff8a6018020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/home/paul/wsnpr/tinyos-main/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/home/paul/wsnpr/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7ff8a4315488" loc="53:/home/paul/wsnpr/tinyos-main/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7ff8a4315488"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7ff8a4311020" loc="64:/home/paul/wsnpr/tinyos-main/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/home/paul/wsnpr/tinyos-main/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7ff8a4315488"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7ff8a4315cc0" loc="64:/home/paul/wsnpr/tinyos-main/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7ff8a4315488"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x7ff8a410f640" loc="31:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff8a410f060" loc="31:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x7ff8a410f3c0" loc="31:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x7ff8a4113950" loc="15:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x7ff8a4110760" loc="23:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7ff8a4110198" loc="23:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7ff8a5468780"/>
                <typename><typedef-ref name="message_t" ref="0x7ff8a5467cf0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x7ff8a41104e0" loc="23:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x7ff8a40f7b60" loc="54:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x7ff8a40f7450" loc="49:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x7ff8a40ff1d8" loc="56:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x7ff8a40fe528" loc="72:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x7ff8a40fb020" loc="94:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7ff8a40fccf0" loc="94:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x7ff8a40fed40" loc="79:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x7ff8a40ffcc8" loc="65:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7ff8a40ffa58" loc="65:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x7ff8a40fb818" loc="100:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x7ff8a40fc5b8" loc="85:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x7ff8a4106020" loc="71:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x7ff8a41068d8" loc="81:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x7ff8a41076c8" loc="62:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x7ff8a4107458" loc="62:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x7ff8a4105430" loc="91:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7ff8a41051c0" loc="91:/home/paul/wsnpr/tinyos-main/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:/home/paul/wsnpr/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:/home/paul/wsnpr/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x7ff8a4102020" loc="62:/home/paul/wsnpr/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:/home/paul/wsnpr/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x7ff8a4102bc8" loc="69:/home/paul/wsnpr/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:/home/paul/wsnpr/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7ff8a4102958" loc="69:/home/paul/wsnpr/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x7ff8a4101640" loc="80:/home/paul/wsnpr/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:/home/paul/wsnpr/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7ff8a41013d0" loc="80:/home/paul/wsnpr/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/home/paul/wsnpr/tinyos-main/tos/interfaces/UartStream.nc">
      <documentation loc="32:/home/paul/wsnpr/tinyos-main/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7ff8a3fd6b50" loc="48:/home/paul/wsnpr/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="39:/home/paul/wsnpr/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7ff8a3fd65b0" loc="48:/home/paul/wsnpr/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7ff8a3fd68d0" loc="48:/home/paul/wsnpr/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x7ff8a3fd14e0" loc="79:/home/paul/wsnpr/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="74:/home/paul/wsnpr/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7ff8a3fd1270" loc="79:/home/paul/wsnpr/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7ff8a3fd02a0" loc="90:/home/paul/wsnpr/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="81:/home/paul/wsnpr/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7ff8a3fd1c58" loc="90:/home/paul/wsnpr/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7ff8a3fd0020" loc="90:/home/paul/wsnpr/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x7ff8a3fd2258" loc="65:/home/paul/wsnpr/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="59:/home/paul/wsnpr/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x7ff8a3fcfa38" loc="99:/home/paul/wsnpr/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="92:/home/paul/wsnpr/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7ff8a3fcf160" loc="99:/home/paul/wsnpr/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7ff8a3fcf480" loc="99:/home/paul/wsnpr/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7ff8a3fcf7a8" loc="99:/home/paul/wsnpr/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x7ff8a3fd2ad0" loc="72:/home/paul/wsnpr/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="67:/home/paul/wsnpr/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7ff8a3fd5358" loc="57:/home/paul/wsnpr/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="50:/home/paul/wsnpr/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7ff8a3fd49f8" loc="57:/home/paul/wsnpr/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7ff8a3fd4d18" loc="57:/home/paul/wsnpr/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7ff8a3fd50c8" loc="57:/home/paul/wsnpr/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="41:/home/paul/wsnpr/tinyos-main/tos/interfaces/UartByte.nc">
      <documentation loc="36:/home/paul/wsnpr/tinyos-main/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7ff8a3fb2ad8" loc="50:/home/paul/wsnpr/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="43:/home/paul/wsnpr/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7ff8a3fb2868" loc="50:/home/paul/wsnpr/tinyos-main/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sendAvail" ref="0x7ff8a3faf328" loc="59:/home/paul/wsnpr/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="52:/home/paul/wsnpr/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; sendAvail: is space available for another TX byte.</short>
          <long>&#10; sendAvail: is space available for another TX byte.&#10;&#10; @return TRUE&#9;the TX subsystem can take another byte.  ie.&#10;&#9;&#9;&#9;UartByte.send() would not block if called.&#10;&#9;     FALSE&#9;TX pipeline is full, UartByte.send() would block.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff8a592c1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x7ff8a3fad2a0" loc="69:/home/paul/wsnpr/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="61:/home/paul/wsnpr/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received or the timeout occurs.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x7ff8a3fafb58" loc="69:/home/paul/wsnpr/tinyos-main/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x7ff8a3fad020" loc="69:/home/paul/wsnpr/tinyos-main/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receiveAvail" ref="0x7ff8a3fac020" loc="79:/home/paul/wsnpr/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="71:/home/paul/wsnpr/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; receiveAvail: incoming has another byte available.</short>
          <long>&#10; receiveAvail: incoming has another byte available.&#10;&#10; @return TRUE&#9;the RX subsystem has another byte to receive.  ie.&#10;&#9;&#9;&#9;UartByte.receive() would not block if called.&#10;&#9;     FALSE&#9;RX pipeline is empty, UartByte.receive() would block&#10;&#9;&#9;&#9;waiting for a byte and/or the timeout.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff8a592c1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430UartConfigure" loc="38:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UartConfigure.nc">
      <documentation loc="31:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/msp430usart.h">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Huppertz &#60;huppertz@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7ff8a3fa4648" loc="39:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/usart/Msp430UartConfigure.nc">
        <interfacedef-ref qname="Msp430UartConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7ff8a4a59180"/>
              <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7ff8a4a59588"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/home/paul/wsnpr/tinyos-main/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/home/paul/wsnpr/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7ff8a3f1a8e8" loc="95:/home/paul/wsnpr/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/home/paul/wsnpr/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7ff8a3f19110" loc="105:/home/paul/wsnpr/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/home/paul/wsnpr/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:/home/paul/wsnpr/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:/home/paul/wsnpr/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x7ff8a3e5c020" loc="62:/home/paul/wsnpr/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:/home/paul/wsnpr/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DeviceMetadata" loc="40:/home/paul/wsnpr/tinyos-main/tos/interfaces/DeviceMetadata.nc">
      <documentation loc="32:/home/paul/wsnpr/tinyos-main/tos/interfaces/DeviceMetadata.nc">
        <short>&#10; DeviceMetadata is a way to obtain information about a generic data&#10; access device represented by a SID.</short>
        <long>&#10; DeviceMetadata is a way to obtain information about a generic data&#10; access device represented by a SID. See TEP109 and TEP114 for details.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="getSignificantBits" ref="0x7ff8a3df5648" loc="41:/home/paul/wsnpr/tinyos-main/tos/interfaces/DeviceMetadata.nc">
        <interfacedef-ref qname="DeviceMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AdcConfigure" loc="45:/home/paul/wsnpr/tinyos-main/tos/interfaces/AdcConfigure.nc">
      <documentation loc="36:/home/paul/wsnpr/tinyos-main/tos/interfaces/AdcConfigure.nc">
        <short> &#10; This interface is intended to be provided by an ADC client and used by the&#10; ADC subsystem to retrieve the client's ADC configuration.</short>
        <long> &#10; This interface is intended to be provided by an ADC client and used by the&#10; ADC subsystem to retrieve the client's ADC configuration. &#10; &#10; @author Jan Hauer &#10; @see  Please refer to TEP 101 for more information about this interface and&#10; its intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="adc_config_t" ref="0x7ff8a3dd4c88" loc="45:/home/paul/wsnpr/tinyos-main/tos/interfaces/AdcConfigure.nc">
          <interfacedef-ref qname="AdcConfigure"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="adc_config_t" scoped="" ref="0x7ff8a3dd4c88"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getConfiguration" ref="0x7ff8a3dd15f0" loc="58:/home/paul/wsnpr/tinyos-main/tos/interfaces/AdcConfigure.nc">
        <documentation loc="48:/home/paul/wsnpr/tinyos-main/tos/interfaces/AdcConfigure.nc">
          <short> &#10; Returns the configuration of an ADC client.</short>
          <long> &#10; Returns the configuration of an ADC client.  &#60;code>adc_config_t&#60;/code> is&#10; a hardware specific data type that contains all information necessary to&#10; configure the respective ADC hardware for the client. A client MUST always&#10; return the same configuration and, if configuration data is passed as a&#10; pointer, the ADC subsystem (HIL component) MUST NOT reference it after the&#10; return of this command.&#10;  &#10; @return chip specific configuration.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AdcConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="adc_config_t" scoped="" ref="0x7ff8a3dd4c88"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadNow" loc="52:/home/paul/wsnpr/tinyos-main/tos/interfaces/ReadNow.nc">
      <documentation loc="33:/home/paul/wsnpr/tinyos-main/tos/interfaces/ReadNow.nc">
        <short>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values.</short>
        <long>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values. The type of the value is given as a&#10; template argument. Because this interface is split-phase, these&#10; values may be backed by hardware. Providers of this interface&#10; should also provide a Resource interface, and this interface should&#10; only be used after the resource has been acquired. Otherwise, the&#10; low-latency requirement may be impossible to meet.&#10;&#10; &#60;p>&#10; This interface has the same calling semantics as the Read interface&#10; described in TEP 114, except that it is async.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-16 18:58:51 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7ff8a3dcccc0" loc="52:/home/paul/wsnpr/tinyos-main/tos/interfaces/ReadNow.nc">
          <interfacedef-ref qname="ReadNow"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7ff8a3dcccc0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7ff8a3dc95c0" loc="58:/home/paul/wsnpr/tinyos-main/tos/interfaces/ReadNow.nc">
        <documentation loc="53:/home/paul/wsnpr/tinyos-main/tos/interfaces/ReadNow.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7ff8a3dc82e0" loc="66:/home/paul/wsnpr/tinyos-main/tos/interfaces/ReadNow.nc">
        <documentation loc="60:/home/paul/wsnpr/tinyos-main/tos/interfaces/ReadNow.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7ff8a3dcccc0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7ff8a3dc9d08" loc="66:/home/paul/wsnpr/tinyos-main/tos/interfaces/ReadNow.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7ff8a3dc8060" loc="66:/home/paul/wsnpr/tinyos-main/tos/interfaces/ReadNow.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7ff8a3dcccc0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Adc12SingleChannel" loc="69:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
      <documentation loc="36:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <short> &#10; &#10; This interface provides access to the ADC12 on the level of HAL.</short>
        <long> &#10; &#10; This interface provides access to the ADC12 on the level of HAL. It can be&#10; used to sample a single adc channel once or repeatedly (one event is&#10; signalled per conversion result) or perform multiple conversions for a&#10; single channel once or repeatedly (one event is signalled per multiple&#10; conversion results). It cannot be used to sample different adc channels with&#10; a single command (use the Msp430Adc12MultiChannel interface instead).&#10; Sampling a channel requires calling a sequence of two commands, configureX()&#10; and getData(), where X is either 'Single', 'SingleRepeat', 'Multiple' or&#10; 'MultipleRepeat'. Conversion results will be signalled by the&#10; dataReadySingle() or dataReadyMultiple() event, depending on the previous&#10; configuration, i.e. there are four possible sequences:&#10; &#10; &#60;p> configureSingle()          -> ( getData() -> singleDataReady() )*&#10; &#60;p> configureSingleRepeat()    -> ( getData() -> singleDataReady() )*&#10; &#60;p> configureMultiple()        -> ( getData() -> multipleDataReady() )*&#10; &#60;p> configureMultipleRepeat()  -> getData() -> multipleDataReady()&#10;&#10; &#60;p> where configureX() and getData() are commands called by the client and&#10; singleDataReady() and multipleDataReady() are events signalled back to the&#10; client by the adc subsystem. Note that a configuration is valid until the&#10; client reconfigures or releases the ADC (using the Resource interface),&#10; except for configureMultipleRepeat(), which is only valid for a single call&#10; to getData(). This means that after a successful configuration with, for&#10; example, configureSingle() the client may call getData() more than once&#10; without reconfiguring the ADC in between (if the client has not released the&#10; ADC via the Resource interface).&#10;&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x7ff8a3dab328" loc="189:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="180:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Starts sampling an adc channel using the configuration as specified by&#10; the last call to any of the four available configuration commands.</short>
          <long> &#10; Starts sampling an adc channel using the configuration as specified by&#10; the last call to any of the four available configuration commands.&#10;&#10; @return SUCCESS means that the conversion was started successfully and an&#10; event singleDataReady() or multipleDataReady() will be signalled&#10; (depending on the previous configuration). Otherwise no such event will be&#10; signalled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configureSingle" ref="0x7ff8a3db43b0" loc="84:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="72:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Configures the ADC to perform a single conversion.</short>
          <long> &#10; Configures the ADC to perform a single conversion. Any previous&#10; configuration will be overwritten.  If SUCCESS is returned calling&#10; &#60;code>getData()&#60;/code> will start the conversion immediately and a&#10; &#60;code>singleDataReady()&#60;/code> event will be signalled with the conversion&#10; result when the conversion has finished.&#10;&#10; @param config ADC12 configuration data.  &#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start the conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7ff8a3decb18"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7ff8a3dec250"/></type-tag>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7ff8a3db4140" loc="84:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7ff8a3decb18"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7ff8a3dec250"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="configureSingleRepeat" ref="0x7ff8a3db2810" loc="106:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="86:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Configures the ADC for repeated single channel conversion mode.</short>
          <long> &#10; Configures the ADC for repeated single channel conversion mode. Any&#10; previous configuration will be overwritten. If SUCCESS is returned calling&#10; &#60;code>getData()&#60;/code> will start sampling the adc channel periodically&#10; (the first conversion is started immediately).  The sampling period is&#10; specified by the &#60;code>jiffies&#60;/code> parameter, which defines the time&#10; between successive conversions in terms of clock ticks of clock source&#10; &#34;sampcon_ssel&#34; and clock input divider &#34;sampcon_id&#34; as specified in the&#10; &#60;code>config&#60;/code> parameter. If jiffies is zero successive conversions&#10; are performed as quickly as possible.  Conversion result are signalled&#10; until the client returns &#60;code>FAIL&#60;/code> in the&#10; &#60;code>singleDataReady()&#60;/code> event handler.&#10; &#10; @param config ADC12 configuration data.  &#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34; and&#10; input divider &#34;sampcon_id&#34;.&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start with the first conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7ff8a3decb18"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7ff8a3dec250"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7ff8a3db2248" loc="106:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7ff8a3decb18"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7ff8a3dec250"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="jiffies" ref="0x7ff8a3db2590" loc="106:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="configureMultipleRepeat" ref="0x7ff8a3dac368" loc="177:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="140:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10;&#10; Configures the ADC for sampling a channel multiple times repeatedly.</short>
          <long> &#10;&#10; Configures the ADC for sampling a channel multiple times repeatedly.  Any&#10; previous configuration will be overwritten. In contrast to the&#10; &#60;code>configureSingleRepeat()&#60;/code> command this configuration means that&#10; an event with &#60;code>numSamples&#60;/code> conversion results will be&#10; signalled, where 0 &#60; &#60;code>numSamples&#60;/code> &#60;= 16. In contrast to the&#10; &#60;code>configureMultiple()&#60;/code> command, this configuration means that&#10; &#60;code>numSamples&#60;/code> conversion results will be signalled repeatedly&#10; until the client returns &#60;code>FAIL&#60;/code> in the&#10; &#60;code>multipleDataReady()&#60;/code> event handler. &#10;&#10; If &#60;code>configureMultipleRepeat()&#60;/code> returns SUCCESS calling&#10; &#60;code>getData()&#60;/code> will start the the first conversion immediately.&#10; The sampling period is specified by the &#60;code>jiffies&#60;/code> parameter,&#10; which defines the time between successive conversions in terms of clock&#10; ticks of clock source &#34;sampcon_ssel&#34; and clock input divider &#34;sampcon_id&#34;&#10; as specified in the &#60;code>config&#60;/code> parameter. If jiffies is zero&#10; successive conversions are performed as quickly as possible. After&#10; &#60;code>numSamples&#60;/code> conversions an event&#10; &#60;code>multipleDataReady()&#60;/code> is signalled with &#60;code>numSamples&#60;/code>&#10; conversion results. If the client returns &#60;code>SUCCESS&#60;/code> in the&#10; &#60;code>multipleDataReady()&#60;/code> event handler, &#60;code>numSamples&#60;/code>&#10; new conversions will be performed, otherwise not.&#10;&#10; @param config ADC12 configuration data.  &#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34;&#10; and input divider &#34;sampcon_id&#34;.&#10; @param buffer The user-allocated buffer in which the conversion results&#10; will be stored. It must have at least &#60;code>numSamples&#60;/code> entries,&#10; i.e. it must have a size of at least &#60;code>numSamples&#60;/code> * 2 byte.&#10; @param numSamples Number of adc samples to take, 0 &#60;&#10; &#60;code>numSamples&#60;/code> &#60;= 16&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start with the first conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7ff8a3decb18"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7ff8a3dec250"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7ff8a3dad180" loc="177:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7ff8a3decb18"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7ff8a3dec250"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="buffer" ref="0x7ff8a3dad9a8" loc="177:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7ff8a3dadd00" loc="177:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </variable>
          <variable name="jiffies" ref="0x7ff8a3dac0c8" loc="177:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="multipleDataReady" ref="0x7ff8a3da9b38" loc="227:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="208:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Multiple ADC conversion results are ready.</short>
          <long> &#10; Multiple ADC conversion results are ready.  If the ADC was configured&#10; with the &#60;code>configureMultiple()&#60;/code> command, then the return value&#10; is ignored. If the ADC was configured with the&#10; &#60;code>configureMultipleRepeat()&#60;/code> command then the returned pointer&#10; defines where to store the next &#60;code>numSamples&#60;/code>&#10; conversion results (the client must make sure that the buffer is big&#10; enough!).  Returning a null pointer means that the repeated conversion&#10; mode will be stopped.&#10; &#10; @param buffer Conversion results (lower 12 bit are valid, respectively).&#10; @param numSamples Number of samples stored in &#60;code>buffer&#60;/code> &#10;&#10; @return&#10; A null pointer stops a repeated conversion mode. Any non-zero value is&#10; interpreted as the next buffer, which must have at least&#10; &#60;code>numSamples&#60;/code> entries. The return value is ignored if the ADC&#10; was configured with &#60;code>configureMultiple()&#60;/code>.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buffer" ref="0x7ff8a3da94d8" loc="227:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7ff8a3da9840" loc="227:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="configureMultiple" ref="0x7ff8a3db0a90" loc="138:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="109:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Configures the ADC for sampling a channel &#60;code>numSamples&#60;/code> times&#10; with a given sampling period.</short>
          <long> &#10; Configures the ADC for sampling a channel &#60;code>numSamples&#60;/code> times&#10; with a given sampling period. Any previous configuration will be&#10; overwritten.  In contrast to the &#60;code>configureSingleRepeat()&#60;/code>&#10; command, this configuration means that only one event will be signalled&#10; after all samples have been taken (which is useful for high-frequency&#10; sampling). If SUCCESS is returned calling &#60;code>getData()&#60;/code> will&#10; start sampling the adc channel &#60;code>numSamples&#60;/code> times and the first&#10; conversion is started immediately. Conversion results are stored in a&#10; buffer allocated by the client (the &#60;code>buffer&#60;/code>&#10; parameter). The sampling period is specified by the &#60;code>jiffies&#60;/code>&#10; parameter, which defines the time between successive conversions in terms&#10; of clock ticks of clock source &#34;sampcon_ssel&#34; and clock input divider&#10; &#34;sampcon_id&#34; as specified in the &#60;code>config&#60;/code> parameter. If jiffies&#10; is zero successive conversions are performed as quickly as possible. After&#10; &#60;code>numSamples&#60;/code> conversions an event&#10; &#60;code>multipleDataReady()&#60;/code> is signalled with the conversion results.&#10;&#10; @param config ADC12 configuration data.  &#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34;&#10; and input divider &#34;sampcon_id&#34;.&#10; @param buffer The user-allocated buffer in which the conversion results&#10; will be stored. It must have at least &#60;code>numSamples&#60;/code> entries,&#10; i.e. it must have a size of at least &#60;code>numSamples&#60;/code> * 2 byte.&#10; @param numSamples Number of adc samples&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start with the first conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7ff8a3decb18"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7ff8a3dec250"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7ff8a3db18e8" loc="138:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7ff8a3decb18"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7ff8a3dec250"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="buffer" ref="0x7ff8a3db0140" loc="138:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7ff8a3db04a8" loc="138:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
            </type-int>
          </variable>
          <variable name="jiffies" ref="0x7ff8a3db07f0" loc="138:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="singleDataReady" ref="0x7ff8a3daa020" loc="206:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="191:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; A single ADC conversion result is ready.</short>
          <long> &#10; A single ADC conversion result is ready. If the ADC was configured with&#10; the &#60;code>configureSingle()&#60;/code> command, then the return value is&#10; ignored. If the ADC was configured with the&#10; &#60;code>configureSingleRepeat()&#60;/code> command then the return value tells&#10; whether another conversion should be performed (&#60;code>SUCCESS()&#60;/code>) or&#10; not (&#60;code>FAIL&#60;/code>).&#10; &#10; @param data Conversion result (lower 12 bit).  &#10;&#10; @return If this event is signalled as response to a call to&#10; &#60;code>configureSingleRepeat()&#60;/code> then &#60;code>SUCCESS&#60;/code> results in&#10; another sampling and &#60;code>FAIL&#60;/code> stops the repeated sampling.&#10; Otherwise the return value is ignored.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7ff8a3dabc70" loc="206:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Adc12MultiChannel" loc="51:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
      <documentation loc="36:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <short> &#10; This interface provides access to the ADC12 on the level of HAL.</short>
        <long> &#10; This interface provides access to the ADC12 on the level of HAL. It can be&#10; used to sample up to 16 (different) ADC channels. It separates between&#10; configuration and data collection: every time a client has been granted&#10; access to the ADC subsystem (via the Resource interface), it first has to&#10; configure the ADC.  Afterwards the client may call getData() more than once&#10; without reconfiguring the ADC in between (if the client has not released the&#10; ADC via the Resource interface), i.e.&#60;p>&#10; &#10;    configure() -> ( getData() -> dataReady() )*&#10;&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x7ff8a3d5b110" loc="97:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <documentation loc="90:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
          <short> &#10; Starts sampling the adc channels using the configuration as specified by&#10; the last call to &#60;code>configure()&#60;/code>.</short>
          <long> &#10; Starts sampling the adc channels using the configuration as specified by&#10; the last call to &#60;code>configure()&#60;/code>.&#10;&#10; @return SUCCESS means that the conversion was started successfully and an&#10; event dataReady() will be signalled. Otherwise no event will be signalled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7ff8a3d5c4a0" loc="86:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <documentation loc="54:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
          <short> &#10; Configures the ADC to perform conversion(s) on multiple channels.</short>
          <long> &#10; Configures the ADC to perform conversion(s) on multiple channels.  Any&#10; previous configuration will be overwritten.  If SUCCESS is returned&#10; calling &#60;code>getData()&#60;/code> will start the conversion immediately and a&#10; &#60;code>dataReady()&#60;/code> event will be signalled with the conversion&#10; result when the conversion has finished.&#10;&#10; @param config Main ADC12 configuration and configuration of the first&#10; channel &#10;&#10; @param memctl List of additional channels and respective reference&#10; voltages&#10;&#10; @param numMemctl Number of entries in the list&#10; &#10; @param buffer Buffer to store the conversion results, it must have&#10; numSamples entries. Results will be stored in the order the channels where&#10; specified.&#10;&#10; @param numSamples Total number of samples. Note: numSamples %&#10; (numMemctl+1) must be zero. For example, to sample every channel twice use&#10; numSamples = (numMemctl+1) * 2&#10;&#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34;&#10; and input divider &#34;sampcon_id&#34;. Samples are taken equally-spaced in&#10; time iterating round-robin over the channels (different channels are  &#10; not sampled simultaneously but one after another).&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start the conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7ff8a5921ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7ff8a3decb18"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7ff8a3dec250"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7ff8a3deb700"/>
                <typename><typedef-ref name="adc12memctl_t" ref="0x7ff8a3debbb8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7ff8a3d5e020" loc="86:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7ff8a3decb18"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7ff8a3dec250"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="memctl" ref="0x7ff8a3d5e3e8" loc="87:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7ff8a3deb700"/>
                <typename><typedef-ref name="adc12memctl_t" ref="0x7ff8a3debbb8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="numMemctl" ref="0x7ff8a3d5e738" loc="87:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </variable>
          <variable name="buffer" ref="0x7ff8a3d5eab0" loc="87:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7ff8a3d5ee38" loc="88:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
            </type-int>
          </variable>
          <variable name="jiffies" ref="0x7ff8a3d5c1e0" loc="88:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7ff8a3d5a020" loc="107:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <documentation loc="99:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
          <short> &#10; Conversion results are ready.</short>
          <long> &#10; Conversion results are ready. Results are stored in the buffer in the&#10; order the channels where specified in the &#60;code>configure()&#60;/code>&#10; command, i.e. every (numMemctl+1)-th entry maps to the same channel. &#10; &#10; @param buffer Conversion results (lower 12 bit are valid, respectively).&#10; @param numSamples Number of results stored in &#60;code>buffer&#60;/code> &#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buffer" ref="0x7ff8a3d5b9a8" loc="107:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7ff8a3d5bd10" loc="107:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Adc12Overflow" loc="44:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
      <documentation loc="36:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
        <short> &#10; Signals an ADC12MEMx overflow or conversion time overflow condition to the&#10; client.</short>
        <long> &#10; Signals an ADC12MEMx overflow or conversion time overflow condition to the&#10; client.&#10;&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <function event="" provided="0" name="memOverflow" ref="0x7ff8a3d607f0" loc="49:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
        <documentation loc="46:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
          <short> &#10; An ADC12MEMx overflow condition has occured.</short>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="conversionTimeOverflow" ref="0x7ff8a3d57020" loc="54:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
        <documentation loc="51:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
          <short> &#10; A conversion time overflow condition has occured.</short>
          <long> &#10; A conversion time overflow condition has occured.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAdc12" loc="45:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
      <documentation loc="36:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <short>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.</short>
        <long>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.&#10;&#10; @author Jan Hauer&#10; @see  Please refer to TEP 101 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getCtl0" ref="0x7ff8a3d41650" loc="63:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="59:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 control register ADC12CTL0.</short>
          <long> &#10; Returns the ADC12 control register ADC12CTL0.&#10; @return ADC12CTL0&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff8a3dd9020"/>
            <typename><typedef-ref name="adc12ctl0_t" ref="0x7ff8a3dd9a48"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMCtl" ref="0x7ff8a3d3f5e0" loc="82:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="77:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 conversion memory control register ADC12MCTLx.</short>
          <long> &#10; Returns the ADC12 conversion memory control register ADC12MCTLx.&#10; @param idx The register index (the 'x' in ADC12MCTLx) [0..15] &#10; @return memControl ADC12MCTLx register data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7ff8a3deb700"/>
            <typename><typedef-ref name="adc12memctl_t" ref="0x7ff8a3debbb8"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7ff8a3d3f370" loc="82:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetIFGs" ref="0x7ff8a3d3ca88" loc="106:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="103:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Resets the ADC12 interrupt flag register, ADC12IFG.</short>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isBusy" ref="0x7ff8a3d3bc00" loc="118:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="114:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 BUSY flag.</short>
          <long> &#10; Returns the ADC12 BUSY flag.&#10; @return ADC12BUSY &#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7ff8a592c1d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="conversionDone" ref="0x7ff8a3d3b4a0" loc="112:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="108:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Signals a conversion result.</short>
          <long> &#10; Signals a conversion result. &#10; @param iv ADC12 interrupt vector value 0x6, 0x8, ... , 0x24&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="iv" ref="0x7ff8a3d3b230" loc="112:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtl1" ref="0x7ff8a3d41df8" loc="68:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="65:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> Returns the ADC12 control register ADC12CTL1.</short>
          <long> Returns the ADC12 control register ADC12CTL1. &#10;  @return ADC12CTL1&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff8a3dd7078"/>
            <typename><typedef-ref name="adc12ctl1_t" ref="0x7ff8a3dd7940"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMCtl" ref="0x7ff8a3d40b38" loc="75:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="70:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 conversion memory control register ADC12MCTLx.</short>
          <long> &#10; Sets the ADC12 conversion memory control register ADC12MCTLx.&#10; @param idx The register index (the 'x' in ADC12MCTLx) [0..15] &#10; @param memControl ADC12MCTLx register data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7ff8a3deb700"/>
              <typename><typedef-ref name="adc12memctl_t" ref="0x7ff8a3debbb8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7ff8a3d40520" loc="75:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </variable>
          <variable name="memControl" ref="0x7ff8a3d408b8" loc="75:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7ff8a3deb700"/>
              <typename><typedef-ref name="adc12memctl_t" ref="0x7ff8a3debbb8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startConversion" ref="0x7ff8a3d3abc0" loc="128:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="125:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short>&#10; Starts a conversion.</short>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtl0" ref="0x7ff8a3d43478" loc="51:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="47:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 control register ADC12CTL0.</short>
          <long> &#10; Sets the ADC12 control register ADC12CTL0.&#10; @param control0 ADC12CTL0 register data.&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff8a3dd9020"/>
              <typename><typedef-ref name="adc12ctl0_t" ref="0x7ff8a3dd9a48"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control0" ref="0x7ff8a3d43208" loc="51:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff8a3dd9020"/>
              <typename><typedef-ref name="adc12ctl0_t" ref="0x7ff8a3dd9a48"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMem" ref="0x7ff8a3d3e0a8" loc="89:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="84:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 conversion memory register ADC12MEMx.</short>
          <long> &#10; Returns the ADC12 conversion memory register ADC12MEMx.&#10; @param idx The register index (the 'x' in ADC12MEMx) [0..15] &#10; @return ADC12MEMx &#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7ff8a3d3fdb8" loc="89:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7ff8a6019790"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setIEFlags" ref="0x7ff8a3d3eab0" loc="95:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="91:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 interrupt enable register, ADC12IE.</short>
          <long> &#10; Sets the ADC12 interrupt enable register, ADC12IE.&#10; @param mask Bitmask (0 means interrupt disabled, 1 menas interrupt enabled) &#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7ff8a3d3e840" loc="95:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIEFlags" ref="0x7ff8a3d3c328" loc="101:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="97:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 interrupt enable register, ADC12IE.</short>
          <long> &#10; Returns the ADC12 interrupt enable register, ADC12IE.&#10; @return ADC12IE&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7ff8a6019b20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopConversion" ref="0x7ff8a3d3a3a0" loc="123:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="120:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short>&#10; Stops a conversion.</short>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableConversion" ref="0x7ff8a3d39328" loc="133:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="130:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short>&#10; Enables conversion (sets the ENC bit).</short>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtl1" ref="0x7ff8a3d43e60" loc="57:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="53:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 control register ADC12CTL1.</short>
          <long> &#10; Sets the ADC12 control register ADC12CTL1. &#10; @param control1 ADC12CTL1 register data.&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff8a3dd7078"/>
              <typename><typedef-ref name="adc12ctl1_t" ref="0x7ff8a3dd7940"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control1" ref="0x7ff8a3d43bf0" loc="57:/home/paul/wsnpr/tinyos-main/tos/chips/msp430/adc12/HplAdc12.nc">
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7ff8a3dd7078"/>
              <typename><typedef-ref name="adc12ctl1_t" ref="0x7ff8a3dd7940"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
